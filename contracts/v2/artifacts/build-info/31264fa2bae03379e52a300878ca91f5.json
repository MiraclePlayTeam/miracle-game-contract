{
	"id": "31264fa2bae03379e52a300878ca91f5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/v2/TikTrixGame.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\";\n\ncontract TikTrixGame is AccessControl {\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    struct GameInfo {\n        uint256 gameSeq;\n        uint256 memberSeq;\n        bool exists;\n    }\n\n    mapping(uint256 => GameInfo) public gameInfos;\n\n    event GameRegistered(uint256 gameSeq, uint256 memberSeq);\n    event GameUpdated(uint256 gameSeq);\n    event GameDeleted(uint256 indexed gameSeq);\n\n    constructor() {\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _setupRole(ADMIN_ROLE, msg.sender);\n    }\n\n    function grantAdminRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        grantRole(ADMIN_ROLE, account);\n    }\n\n    function revokeAdminRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        revokeRole(ADMIN_ROLE, account);\n    }\n\n    function gameRegister(uint256 gameSeq, uint256 memberSeq) external onlyRole(ADMIN_ROLE) {\n        require(!gameInfos[gameSeq].exists, \"Game already exist\");\n\n        gameInfos[gameSeq] = GameInfo({\n            gameSeq: gameSeq,\n            memberSeq: memberSeq,\n            exists: true\n        });\n\n        emit GameRegistered(gameSeq, memberSeq);\n    }\n\n    function gameUpdate(uint256 gameSeq) external onlyRole(ADMIN_ROLE) {\n        require(gameInfos[gameSeq].exists, \"Game does not exist\");\n\n        emit GameUpdated(gameSeq);\n    }\n\n    function gameDelete(uint256 gameSeq) external onlyRole(ADMIN_ROLE) {\n        require(gameInfos[gameSeq].exists, \"Game does not exist\");\n        delete gameInfos[gameSeq];\n        emit GameDeleted(gameSeq);\n    }\n\n    function getGameInfo(uint256 gameSeq) external view returns (GameInfo memory) {\n        require(gameInfos[gameSeq].exists, \"Game does not exist\");\n        return gameInfos[gameSeq];\n    }\n\n    function isGameExists(uint256 gameSeq) external view returns (bool) {\n        return gameInfos[gameSeq].exists;\n    }\n\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/v2/TikTrixGame.sol": {
				"TikTrixGame": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								}
							],
							"name": "GameDeleted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "memberSeq",
									"type": "uint256"
								}
							],
							"name": "GameRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								}
							],
							"name": "GameUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								}
							],
							"name": "gameDelete",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "gameInfos",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memberSeq",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memberSeq",
									"type": "uint256"
								}
							],
							"name": "gameRegister",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								}
							],
							"name": "gameUpdate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								}
							],
							"name": "getGameInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "gameSeq",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "memberSeq",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "exists",
											"type": "bool"
										}
									],
									"internalType": "struct TikTrixGame.GameInfo",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantAdminRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								}
							],
							"name": "isGameExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeAdminRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/v2/TikTrixGame.sol\":281:2155  contract TikTrixGame is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/v2/TikTrixGame.sol\":697:814  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/v2/TikTrixGame.sol\":721:763  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"contracts/v2/TikTrixGame.sol\":732:750  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/v2/TikTrixGame.sol\":752:762  msg.sender */\n  caller\n    /* \"contracts/v2/TikTrixGame.sol\":721:731  _setupRole */\n  shl(0x20, tag_5)\n    /* \"contracts/v2/TikTrixGame.sol\":721:763  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/v2/TikTrixGame.sol\":773:807  _setupRole(ADMIN_ROLE, msg.sender) */\n  tag_6\n    /* \"contracts/v2/TikTrixGame.sol\":362:385  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"contracts/v2/TikTrixGame.sol\":796:806  msg.sender */\n  caller\n    /* \"contracts/v2/TikTrixGame.sol\":773:783  _setupRole */\n  shl(0x20, tag_5)\n    /* \"contracts/v2/TikTrixGame.sol\":773:807  _setupRole(ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/v2/TikTrixGame.sol\":281:2155  contract TikTrixGame is AccessControl {... */\n  jump(tag_7)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6811:6921  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6889:6914  _grantRole(role, account) */\n  tag_9\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6900:6904  role */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6906:6913  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6889:6899  _grantRole */\n  shl(0x20, tag_10)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6889:6914  _grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6811:6921  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_10:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n  tag_12\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7552:7556  role */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7558:7565  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7544:7551  hasRole */\n  shl(0x20, tag_13)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n  tag_14\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7614:7618  true */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7588  _roles */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7589:7593  role */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7602  _roles[role].members */\n  0x00\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7603:7610  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7618  _roles[role].members[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n  tag_15\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7664:7674  _msgSender */\n  shl(0x20, tag_16)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7655:7662  account */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7649:7653  role */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\ntag_14:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_13:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3010  _roles */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3011:3015  role */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n  0x00\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3025:3032  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_16:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/v2/TikTrixGame.sol\":281:2155  contract TikTrixGame is AccessControl {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/v2/TikTrixGame.sol\":281:2155  contract TikTrixGame is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7d1b4687\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb638d158\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc634b78e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x7d1b4687\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x89b2c8e7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9a19c7b0\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x36568abe\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x47e1d550\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4f0ce4df\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1833fdf9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/v2/TikTrixGame.sol\":2035:2152  function isGameExists(uint256 gameSeq) external view returns (bool) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/v2/TikTrixGame.sol\":1842:2029  function getGameInfo(uint256 gameSeq) external view returns (GameInfo memory) {... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/v2/TikTrixGame.sol\":1442:1619  function gameUpdate(uint256 gameSeq) external onlyRole(ADMIN_ROLE) {... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/v2/TikTrixGame.sol\":325:385  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/v2/TikTrixGame.sol\":494:539  mapping(uint256 => GameInfo) public gameInfos */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/v2/TikTrixGame.sol\":1625:1836  function gameDelete(uint256 gameSeq) external onlyRole(ADMIN_ROLE) {... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_13:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/v2/TikTrixGame.sol\":950:1076  function revokeAdminRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_15:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/v2/TikTrixGame.sol\":1082:1436  function gameRegister(uint256 gameSeq, uint256 memberSeq) external onlyRole(ADMIN_ROLE) {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/v2/TikTrixGame.sol\":820:944  function grantAdminRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2691:2695  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2729:2761  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2714:2725  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_87\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2789:2800  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2765:2788  super.supportsInterface */\n      tag_89\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_88:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2707:2801  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/v2/TikTrixGame.sol\":2035:2152  function isGameExists(uint256 gameSeq) external view returns (bool) {... */\n    tag_31:\n        /* \"contracts/v2/TikTrixGame.sol\":2097:2101  bool */\n      0x00\n        /* \"contracts/v2/TikTrixGame.sol\":2120:2129  gameInfos */\n      0x01\n        /* \"contracts/v2/TikTrixGame.sol\":2120:2138  gameInfos[gameSeq] */\n      0x00\n        /* \"contracts/v2/TikTrixGame.sol\":2130:2137  gameSeq */\n      dup4\n        /* \"contracts/v2/TikTrixGame.sol\":2120:2138  gameInfos[gameSeq] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/v2/TikTrixGame.sol\":2120:2145  gameInfos[gameSeq].exists */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/v2/TikTrixGame.sol\":2113:2145  return gameInfos[gameSeq].exists */\n      swap1\n      pop\n        /* \"contracts/v2/TikTrixGame.sol\":2035:2152  function isGameExists(uint256 gameSeq) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4452:4459  bytes32 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4478:4484  _roles */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4478:4490  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4485:4489  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4478:4490  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4478:4500  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4471:4500  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4886:4904  getRoleAdmin(role) */\n      tag_92\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4899:4903  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4886:4898  getRoleAdmin */\n      tag_36\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4886:4904  getRoleAdmin(role) */\n      jump\t// in\n    tag_92:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_94\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4916:4941  _grantRole(role, account) */\n      tag_97\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4927:4931  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4933:4940  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4916:4926  _grantRole */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4916:4941  _grantRole(role, account) */\n      jump\t// in\n    tag_97:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6018:6030  _msgSender() */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6018:6028  _msgSender */\n      tag_101\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6018:6030  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6007:6030  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6007:6014  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6007:6030  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5999:6082  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6093:6119  _revokeRole(role, account) */\n      tag_105\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6105:6109  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6111:6118  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6093:6104  _revokeRole */\n      tag_106\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6093:6119  _revokeRole(role, account) */\n      jump\t// in\n    tag_105:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/v2/TikTrixGame.sol\":1842:2029  function getGameInfo(uint256 gameSeq) external view returns (GameInfo memory) {... */\n    tag_48:\n        /* \"contracts/v2/TikTrixGame.sol\":1903:1918  GameInfo memory */\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"contracts/v2/TikTrixGame.sol\":1938:1947  gameInfos */\n      0x01\n        /* \"contracts/v2/TikTrixGame.sol\":1938:1956  gameInfos[gameSeq] */\n      0x00\n        /* \"contracts/v2/TikTrixGame.sol\":1948:1955  gameSeq */\n      dup4\n        /* \"contracts/v2/TikTrixGame.sol\":1938:1956  gameInfos[gameSeq] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/v2/TikTrixGame.sol\":1938:1963  gameInfos[gameSeq].exists */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/v2/TikTrixGame.sol\":1930:1987  require(gameInfos[gameSeq].exists, \"Game does not exist\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"contracts/v2/TikTrixGame.sol\":2004:2013  gameInfos */\n      0x01\n        /* \"contracts/v2/TikTrixGame.sol\":2004:2022  gameInfos[gameSeq] */\n      0x00\n        /* \"contracts/v2/TikTrixGame.sol\":2014:2021  gameSeq */\n      dup4\n        /* \"contracts/v2/TikTrixGame.sol\":2004:2022  gameInfos[gameSeq] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/v2/TikTrixGame.sol\":1997:2022  return gameInfos[gameSeq] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/v2/TikTrixGame.sol\":1842:2029  function getGameInfo(uint256 gameSeq) external view returns (GameInfo memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/v2/TikTrixGame.sol\":1442:1619  function gameUpdate(uint256 gameSeq) external onlyRole(ADMIN_ROLE) {... */\n    tag_53:\n        /* \"contracts/v2/TikTrixGame.sol\":362:385  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_114\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/v2/TikTrixGame.sol\":1527:1536  gameInfos */\n      0x01\n        /* \"contracts/v2/TikTrixGame.sol\":1527:1545  gameInfos[gameSeq] */\n      0x00\n        /* \"contracts/v2/TikTrixGame.sol\":1537:1544  gameSeq */\n      dup4\n        /* \"contracts/v2/TikTrixGame.sol\":1527:1545  gameInfos[gameSeq] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/v2/TikTrixGame.sol\":1527:1552  gameInfos[gameSeq].exists */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/v2/TikTrixGame.sol\":1519:1576  require(gameInfos[gameSeq].exists, \"Game does not exist\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_112\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"contracts/v2/TikTrixGame.sol\":1592:1612  GameUpdated(gameSeq) */\n      0x8da554679ce754233202e83b51aefa8be576e0a49851a9ddd4686dfd94ba6093\n        /* \"contracts/v2/TikTrixGame.sol\":1604:1611  gameSeq */\n      dup3\n        /* \"contracts/v2/TikTrixGame.sol\":1592:1612  GameUpdated(gameSeq) */\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/v2/TikTrixGame.sol\":1442:1619  function gameUpdate(uint256 gameSeq) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/v2/TikTrixGame.sol\":325:385  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_55:\n        /* \"contracts/v2/TikTrixGame.sol\":362:385  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/v2/TikTrixGame.sol\":325:385  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/v2/TikTrixGame.sol\":494:539  mapping(uint256 => GameInfo) public gameInfos */\n    tag_59:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/v2/TikTrixGame.sol\":1625:1836  function gameDelete(uint256 gameSeq) external onlyRole(ADMIN_ROLE) {... */\n    tag_64:\n        /* \"contracts/v2/TikTrixGame.sol\":362:385  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_121\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/v2/TikTrixGame.sol\":1710:1719  gameInfos */\n      0x01\n        /* \"contracts/v2/TikTrixGame.sol\":1710:1728  gameInfos[gameSeq] */\n      0x00\n        /* \"contracts/v2/TikTrixGame.sol\":1720:1727  gameSeq */\n      dup4\n        /* \"contracts/v2/TikTrixGame.sol\":1710:1728  gameInfos[gameSeq] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/v2/TikTrixGame.sol\":1710:1735  gameInfos[gameSeq].exists */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/v2/TikTrixGame.sol\":1702:1759  require(gameInfos[gameSeq].exists, \"Game does not exist\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_112\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"contracts/v2/TikTrixGame.sol\":1776:1785  gameInfos */\n      0x01\n        /* \"contracts/v2/TikTrixGame.sol\":1776:1794  gameInfos[gameSeq] */\n      0x00\n        /* \"contracts/v2/TikTrixGame.sol\":1786:1793  gameSeq */\n      dup4\n        /* \"contracts/v2/TikTrixGame.sol\":1776:1794  gameInfos[gameSeq] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/v2/TikTrixGame.sol\":1769:1794  delete gameInfos[gameSeq] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/v2/TikTrixGame.sol\":1821:1828  gameSeq */\n      dup2\n        /* \"contracts/v2/TikTrixGame.sol\":1809:1829  GameDeleted(gameSeq) */\n      0x5ef6221cc1c069a8c723210c08d526c7ca88540ee8d66470cf01844efaae0b94\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/v2/TikTrixGame.sol\":1625:1836  function gameDelete(uint256 gameSeq) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2981:2985  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3010  _roles */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3011:3015  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3025:3032  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/v2/TikTrixGame.sol\":950:1076  function revokeAdminRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"contracts/v2/TikTrixGame.sol\":1008:1026  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_127\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/v2/TikTrixGame.sol\":1038:1069  revokeRole(ADMIN_ROLE, account) */\n      tag_129\n        /* \"contracts/v2/TikTrixGame.sol\":362:385  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/v2/TikTrixGame.sol\":1061:1068  account */\n      dup4\n        /* \"contracts/v2/TikTrixGame.sol\":1038:1048  revokeRole */\n      tag_85\n        /* \"contracts/v2/TikTrixGame.sol\":1038:1069  revokeRole(ADMIN_ROLE, account) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/v2/TikTrixGame.sol\":950:1076  function revokeAdminRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_74:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/v2/TikTrixGame.sol\":1082:1436  function gameRegister(uint256 gameSeq, uint256 memberSeq) external onlyRole(ADMIN_ROLE) {... */\n    tag_79:\n        /* \"contracts/v2/TikTrixGame.sol\":362:385  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_131\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/v2/TikTrixGame.sol\":1189:1198  gameInfos */\n      0x01\n        /* \"contracts/v2/TikTrixGame.sol\":1189:1207  gameInfos[gameSeq] */\n      0x00\n        /* \"contracts/v2/TikTrixGame.sol\":1199:1206  gameSeq */\n      dup5\n        /* \"contracts/v2/TikTrixGame.sol\":1189:1207  gameInfos[gameSeq] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/v2/TikTrixGame.sol\":1189:1214  gameInfos[gameSeq].exists */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/v2/TikTrixGame.sol\":1188:1214  !gameInfos[gameSeq].exists */\n      iszero\n        /* \"contracts/v2/TikTrixGame.sol\":1180:1237  require(!gameInfos[gameSeq].exists, \"Game already exist\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/v2/TikTrixGame.sol\":1269:1379  GameInfo({... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/v2/TikTrixGame.sol\":1301:1308  gameSeq */\n      dup5\n        /* \"contracts/v2/TikTrixGame.sol\":1269:1379  GameInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/v2/TikTrixGame.sol\":1333:1342  memberSeq */\n      dup4\n        /* \"contracts/v2/TikTrixGame.sol\":1269:1379  GameInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/v2/TikTrixGame.sol\":1364:1368  true */\n      0x01\n        /* \"contracts/v2/TikTrixGame.sol\":1269:1379  GameInfo({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/v2/TikTrixGame.sol\":1248:1257  gameInfos */\n      0x01\n        /* \"contracts/v2/TikTrixGame.sol\":1248:1266  gameInfos[gameSeq] */\n      0x00\n        /* \"contracts/v2/TikTrixGame.sol\":1258:1265  gameSeq */\n      dup6\n        /* \"contracts/v2/TikTrixGame.sol\":1248:1266  gameInfos[gameSeq] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/v2/TikTrixGame.sol\":1248:1379  gameInfos[gameSeq] = GameInfo({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/v2/TikTrixGame.sol\":1395:1429  GameRegistered(gameSeq, memberSeq) */\n      0xeeb0a161eda325cefb3f550c18e560490ea78827e2a4c3a9fa9c5e66ce871c3f\n        /* \"contracts/v2/TikTrixGame.sol\":1410:1417  gameSeq */\n      dup4\n        /* \"contracts/v2/TikTrixGame.sol\":1419:1428  memberSeq */\n      dup4\n        /* \"contracts/v2/TikTrixGame.sol\":1395:1429  GameRegistered(gameSeq, memberSeq) */\n      mload(0x40)\n      tag_136\n      swap3\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/v2/TikTrixGame.sol\":1082:1436  function gameRegister(uint256 gameSeq, uint256 memberSeq) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/v2/TikTrixGame.sol\":820:944  function grantAdminRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_82:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"contracts/v2/TikTrixGame.sol\":877:895  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_139\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_139:\n        /* \"contracts/v2/TikTrixGame.sol\":907:937  grantRole(ADMIN_ROLE, account) */\n      tag_141\n        /* \"contracts/v2/TikTrixGame.sol\":362:385  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/v2/TikTrixGame.sol\":929:936  account */\n      dup4\n        /* \"contracts/v2/TikTrixGame.sol\":907:916  grantRole */\n      tag_42\n        /* \"contracts/v2/TikTrixGame.sol\":907:937  grantRole(ADMIN_ROLE, account) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/v2/TikTrixGame.sol\":820:944  function grantAdminRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5312:5330  getRoleAdmin(role) */\n      tag_142\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5325:5329  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5312:5324  getRoleAdmin */\n      tag_36\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5312:5330  getRoleAdmin(role) */\n      jump\t// in\n    tag_142:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_144\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_144:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5342:5368  _revokeRole(role, account) */\n      tag_146\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5354:5358  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5360:5367  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5342:5353  _revokeRole */\n      tag_106\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5342:5368  _revokeRole(role, account) */\n      jump\t// in\n    tag_146:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_89:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_95:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      tag_149\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3411:3415  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      tag_150\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3417:3427  _msgSender */\n      tag_101\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n      tag_151\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_149:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n      tag_153\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7552:7556  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7558:7565  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7544:7551  hasRole */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n      jump\t// in\n    tag_153:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n      tag_154\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7614:7618  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7588  _roles */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7589:7593  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7602  _roles[role].members */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7603:7610  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7618  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n      tag_155\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7664:7674  _msgSender */\n      tag_101\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7655:7662  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7649:7653  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n    tag_154:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_101:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7865:8099  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_106:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7948:7970  hasRole(role, account) */\n      tag_158\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7956:7960  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7962:7969  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7948:7955  hasRole */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7948:7970  hasRole(role, account) */\n      jump\t// in\n    tag_158:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7944:8093  if (hasRole(role, account)) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8018:8023  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7986:7992  _roles */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7986:7998  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7993:7997  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7986:7998  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7986:8006  _roles[role].members */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7986:8015  _roles[role].members[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8007:8014  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7986:8015  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7986:8023  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8069:8081  _msgSender() */\n      tag_160\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8069:8079  _msgSender */\n      tag_101\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8069:8081  _msgSender() */\n      jump\t// in\n    tag_160:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8060:8067  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8054:8058  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7944:8093  if (hasRole(role, account)) {... */\n    tag_159:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7865:8099  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3718:4197  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_151:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      tag_162\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3814:3818  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3820:3827  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3806:3813  hasRole */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      jump\t// in\n    tag_162:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3801:4191  if (!hasRole(role, account)) {... */\n      tag_163\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3989:4017  Strings.toHexString(account) */\n      tag_164\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4009:4016  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n      tag_165\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3989:4017  Strings.toHexString(account) */\n      jump\t// in\n    tag_164:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4088:4126  Strings.toHexString(uint256(role), 32) */\n      tag_166\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4116:4120  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4108:4121  uint256(role) */\n      0x00\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4123:4125  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4088:4107  Strings.toHexString */\n      tag_167\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4088:4126  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_166:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3896:4148  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_168\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3844:4180  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3801:4191  if (!hasRole(role, account)) {... */\n    tag_163:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3718:4197  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2102:2251  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_165:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2160:2173  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_173\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2220:2224  addr */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2204:2226  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":311:313  20 */\n      0x14\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2192:2203  toHexString */\n      tag_167\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_173:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2185:2244  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2102:2251  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1513:1950  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_167:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1588:1601  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1613:1632  bytes memory buffer */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1658:1659  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1649:1655  length */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1645:1646  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1645:1655  2 * length */\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1645:1659  2 * length + 2 */\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1635:1660  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_179\n      jumpi\n      tag_180\n      tag_181\n      jump\t// in\n    tag_180:\n    tag_179:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_182\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_182:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1613:1660  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1670:1685  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1670:1676  buffer */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1677:1678  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1670:1679  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_183\n      jumpi\n      tag_184\n      tag_185\n      jump\t// in\n    tag_184:\n    tag_183:\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1670:1685  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1695:1710  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1695:1701  buffer */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1702:1703  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1695:1704  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_186\n      jumpi\n      tag_187\n      tag_185\n      jump\t// in\n    tag_187:\n    tag_186:\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1695:1710  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1725:1734  uint256 i */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1750:1751  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1741:1747  length */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1737:1738  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1737:1747  2 * length */\n      tag_191\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_191:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1737:1751  2 * length + 1 */\n      tag_192\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_192:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1725:1751  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_188:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1757:1758  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1753:1754  i */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1753:1758  i > 1 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1791:1799  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1808:1811  0xf */\n      0x0f\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1800:1805  value */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1800:1811  value & 0xf */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1791:1812  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_193\n      jumpi\n      tag_194\n      tag_185\n      jump\t// in\n    tag_194:\n    tag_193:\n      byte\n      0xf8\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1779:1785  buffer */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1786:1787  i */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1779:1788  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_195\n      jumpi\n      tag_196\n      tag_185\n      jump\t// in\n    tag_196:\n    tag_195:\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1779:1812  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1836:1837  4 */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1826:1837  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1760:1763  --i */\n      dup1\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_188)\n    tag_189:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1874:1875  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1865:1870  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1865:1875  value == 0 */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1857:1912  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1936:1942  buffer */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1922:1943  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1513:1950  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_108:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_203:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_205:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_206:\n        /* \"#utility.yul\":561:584   */\n      tag_251\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_205\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_252:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_207:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_254\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_206\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_24:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_257\n      tag_203\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":833:952   */\n    tag_256:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_258\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_207\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_208:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_209:\n        /* \"#utility.yul\":1268:1289   */\n      tag_261\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_208\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_27:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_263\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_209\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_210:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_211:\n        /* \"#utility.yul\":1674:1698   */\n      tag_266\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_210\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_267:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_212:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_269\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_211\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_30:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_272\n      tag_203\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1950:2069   */\n    tag_271:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_273\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_212\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2286   */\n    tag_213:\n        /* \"#utility.yul\":2246:2253   */\n      0x00\n        /* \"#utility.yul\":2275:2280   */\n      dup2\n        /* \"#utility.yul\":2264:2280   */\n      swap1\n      pop\n        /* \"#utility.yul\":2209:2286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2292:2414   */\n    tag_214:\n        /* \"#utility.yul\":2365:2389   */\n      tag_276\n        /* \"#utility.yul\":2383:2388   */\n      dup2\n        /* \"#utility.yul\":2365:2389   */\n      tag_213\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2358:2363   */\n      dup2\n        /* \"#utility.yul\":2355:2390   */\n      eq\n        /* \"#utility.yul\":2345:2408   */\n      tag_277\n      jumpi\n        /* \"#utility.yul\":2404:2405   */\n      0x00\n        /* \"#utility.yul\":2401:2402   */\n      dup1\n        /* \"#utility.yul\":2394:2406   */\n      revert\n        /* \"#utility.yul\":2345:2408   */\n    tag_277:\n        /* \"#utility.yul\":2292:2414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2420:2559   */\n    tag_215:\n        /* \"#utility.yul\":2466:2471   */\n      0x00\n        /* \"#utility.yul\":2504:2510   */\n      dup2\n        /* \"#utility.yul\":2491:2511   */\n      calldataload\n        /* \"#utility.yul\":2482:2511   */\n      swap1\n      pop\n        /* \"#utility.yul\":2520:2553   */\n      tag_279\n        /* \"#utility.yul\":2547:2552   */\n      dup2\n        /* \"#utility.yul\":2520:2553   */\n      tag_214\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2420:2559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2894   */\n    tag_35:\n        /* \"#utility.yul\":2624:2630   */\n      0x00\n        /* \"#utility.yul\":2673:2675   */\n      0x20\n        /* \"#utility.yul\":2661:2670   */\n      dup3\n        /* \"#utility.yul\":2652:2659   */\n      dup5\n        /* \"#utility.yul\":2648:2671   */\n      sub\n        /* \"#utility.yul\":2644:2676   */\n      slt\n        /* \"#utility.yul\":2641:2760   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2679:2758   */\n      tag_282\n      tag_203\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2641:2760   */\n    tag_281:\n        /* \"#utility.yul\":2799:2800   */\n      0x00\n        /* \"#utility.yul\":2824:2877   */\n      tag_283\n        /* \"#utility.yul\":2869:2876   */\n      dup5\n        /* \"#utility.yul\":2860:2866   */\n      dup3\n        /* \"#utility.yul\":2849:2858   */\n      dup6\n        /* \"#utility.yul\":2845:2867   */\n      add\n        /* \"#utility.yul\":2824:2877   */\n      tag_215\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2814:2877   */\n      swap2\n      pop\n        /* \"#utility.yul\":2770:2887   */\n      pop\n        /* \"#utility.yul\":2565:2894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2900:3018   */\n    tag_216:\n        /* \"#utility.yul\":2987:3011   */\n      tag_285\n        /* \"#utility.yul\":3005:3010   */\n      dup2\n        /* \"#utility.yul\":2987:3011   */\n      tag_213\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":2982:2985   */\n      dup3\n        /* \"#utility.yul\":2975:3012   */\n      mstore\n        /* \"#utility.yul\":2900:3018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3024:3246   */\n    tag_38:\n        /* \"#utility.yul\":3117:3121   */\n      0x00\n        /* \"#utility.yul\":3155:3157   */\n      0x20\n        /* \"#utility.yul\":3144:3153   */\n      dup3\n        /* \"#utility.yul\":3140:3158   */\n      add\n        /* \"#utility.yul\":3132:3158   */\n      swap1\n      pop\n        /* \"#utility.yul\":3168:3239   */\n      tag_287\n        /* \"#utility.yul\":3236:3237   */\n      0x00\n        /* \"#utility.yul\":3225:3234   */\n      dup4\n        /* \"#utility.yul\":3221:3238   */\n      add\n        /* \"#utility.yul\":3212:3218   */\n      dup5\n        /* \"#utility.yul\":3168:3239   */\n      tag_216\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3024:3246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3252:3378   */\n    tag_217:\n        /* \"#utility.yul\":3289:3296   */\n      0x00\n        /* \"#utility.yul\":3329:3371   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3322:3327   */\n      dup3\n        /* \"#utility.yul\":3318:3372   */\n      and\n        /* \"#utility.yul\":3307:3372   */\n      swap1\n      pop\n        /* \"#utility.yul\":3252:3378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3384:3480   */\n    tag_218:\n        /* \"#utility.yul\":3421:3428   */\n      0x00\n        /* \"#utility.yul\":3450:3474   */\n      tag_290\n        /* \"#utility.yul\":3468:3473   */\n      dup3\n        /* \"#utility.yul\":3450:3474   */\n      tag_217\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3439:3474   */\n      swap1\n      pop\n        /* \"#utility.yul\":3384:3480   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3486:3608   */\n    tag_219:\n        /* \"#utility.yul\":3559:3583   */\n      tag_292\n        /* \"#utility.yul\":3577:3582   */\n      dup2\n        /* \"#utility.yul\":3559:3583   */\n      tag_218\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3552:3557   */\n      dup2\n        /* \"#utility.yul\":3549:3584   */\n      eq\n        /* \"#utility.yul\":3539:3602   */\n      tag_293\n      jumpi\n        /* \"#utility.yul\":3598:3599   */\n      0x00\n        /* \"#utility.yul\":3595:3596   */\n      dup1\n        /* \"#utility.yul\":3588:3600   */\n      revert\n        /* \"#utility.yul\":3539:3602   */\n    tag_293:\n        /* \"#utility.yul\":3486:3608   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3614:3753   */\n    tag_220:\n        /* \"#utility.yul\":3660:3665   */\n      0x00\n        /* \"#utility.yul\":3698:3704   */\n      dup2\n        /* \"#utility.yul\":3685:3705   */\n      calldataload\n        /* \"#utility.yul\":3676:3705   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3747   */\n      tag_295\n        /* \"#utility.yul\":3741:3746   */\n      dup2\n        /* \"#utility.yul\":3714:3747   */\n      tag_219\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3614:3753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3759:4233   */\n    tag_41:\n        /* \"#utility.yul\":3827:3833   */\n      0x00\n        /* \"#utility.yul\":3835:3841   */\n      dup1\n        /* \"#utility.yul\":3884:3886   */\n      0x40\n        /* \"#utility.yul\":3872:3881   */\n      dup4\n        /* \"#utility.yul\":3863:3870   */\n      dup6\n        /* \"#utility.yul\":3859:3882   */\n      sub\n        /* \"#utility.yul\":3855:3887   */\n      slt\n        /* \"#utility.yul\":3852:3971   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":3890:3969   */\n      tag_298\n      tag_203\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3852:3971   */\n    tag_297:\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":4035:4088   */\n      tag_299\n        /* \"#utility.yul\":4080:4087   */\n      dup6\n        /* \"#utility.yul\":4071:4077   */\n      dup3\n        /* \"#utility.yul\":4060:4069   */\n      dup7\n        /* \"#utility.yul\":4056:4078   */\n      add\n        /* \"#utility.yul\":4035:4088   */\n      tag_215\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4025:4088   */\n      swap3\n      pop\n        /* \"#utility.yul\":3981:4098   */\n      pop\n        /* \"#utility.yul\":4137:4139   */\n      0x20\n        /* \"#utility.yul\":4163:4216   */\n      tag_300\n        /* \"#utility.yul\":4208:4215   */\n      dup6\n        /* \"#utility.yul\":4199:4205   */\n      dup3\n        /* \"#utility.yul\":4188:4197   */\n      dup7\n        /* \"#utility.yul\":4184:4206   */\n      add\n        /* \"#utility.yul\":4163:4216   */\n      tag_220\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":4153:4216   */\n      swap2\n      pop\n        /* \"#utility.yul\":4108:4226   */\n      pop\n        /* \"#utility.yul\":3759:4233   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4239:4347   */\n    tag_221:\n        /* \"#utility.yul\":4316:4340   */\n      tag_302\n        /* \"#utility.yul\":4334:4339   */\n      dup2\n        /* \"#utility.yul\":4316:4340   */\n      tag_210\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4311:4314   */\n      dup3\n        /* \"#utility.yul\":4304:4341   */\n      mstore\n        /* \"#utility.yul\":4239:4347   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4353:4452   */\n    tag_222:\n        /* \"#utility.yul\":4424:4445   */\n      tag_304\n        /* \"#utility.yul\":4439:4444   */\n      dup2\n        /* \"#utility.yul\":4424:4445   */\n      tag_208\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4419:4422   */\n      dup3\n        /* \"#utility.yul\":4412:4446   */\n      mstore\n        /* \"#utility.yul\":4353:4452   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4524:5207   */\n    tag_223:\n        /* \"#utility.yul\":4669:4673   */\n      0x60\n        /* \"#utility.yul\":4664:4667   */\n      dup3\n        /* \"#utility.yul\":4660:4674   */\n      add\n        /* \"#utility.yul\":4759:4763   */\n      0x00\n        /* \"#utility.yul\":4752:4757   */\n      dup3\n        /* \"#utility.yul\":4748:4764   */\n      add\n        /* \"#utility.yul\":4742:4765   */\n      mload\n        /* \"#utility.yul\":4778:4841   */\n      tag_306\n        /* \"#utility.yul\":4835:4839   */\n      0x00\n        /* \"#utility.yul\":4830:4833   */\n      dup6\n        /* \"#utility.yul\":4826:4840   */\n      add\n        /* \"#utility.yul\":4812:4824   */\n      dup3\n        /* \"#utility.yul\":4778:4841   */\n      tag_221\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4684:4851   */\n      pop\n        /* \"#utility.yul\":4938:4942   */\n      0x20\n        /* \"#utility.yul\":4931:4936   */\n      dup3\n        /* \"#utility.yul\":4927:4943   */\n      add\n        /* \"#utility.yul\":4921:4944   */\n      mload\n        /* \"#utility.yul\":4957:5020   */\n      tag_307\n        /* \"#utility.yul\":5014:5018   */\n      0x20\n        /* \"#utility.yul\":5009:5012   */\n      dup6\n        /* \"#utility.yul\":5005:5019   */\n      add\n        /* \"#utility.yul\":4991:5003   */\n      dup3\n        /* \"#utility.yul\":4957:5020   */\n      tag_221\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4861:5030   */\n      pop\n        /* \"#utility.yul\":5114:5118   */\n      0x40\n        /* \"#utility.yul\":5107:5112   */\n      dup3\n        /* \"#utility.yul\":5103:5119   */\n      add\n        /* \"#utility.yul\":5097:5120   */\n      mload\n        /* \"#utility.yul\":5133:5190   */\n      tag_308\n        /* \"#utility.yul\":5184:5188   */\n      0x40\n        /* \"#utility.yul\":5179:5182   */\n      dup6\n        /* \"#utility.yul\":5175:5189   */\n      add\n        /* \"#utility.yul\":5161:5173   */\n      dup3\n        /* \"#utility.yul\":5133:5190   */\n      tag_222\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5040:5200   */\n      pop\n        /* \"#utility.yul\":4638:5207   */\n      pop\n        /* \"#utility.yul\":4524:5207   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5213:5531   */\n    tag_50:\n        /* \"#utility.yul\":5354:5358   */\n      0x00\n        /* \"#utility.yul\":5392:5394   */\n      0x60\n        /* \"#utility.yul\":5381:5390   */\n      dup3\n        /* \"#utility.yul\":5377:5395   */\n      add\n        /* \"#utility.yul\":5369:5395   */\n      swap1\n      pop\n        /* \"#utility.yul\":5405:5524   */\n      tag_310\n        /* \"#utility.yul\":5521:5522   */\n      0x00\n        /* \"#utility.yul\":5510:5519   */\n      dup4\n        /* \"#utility.yul\":5506:5523   */\n      add\n        /* \"#utility.yul\":5497:5503   */\n      dup5\n        /* \"#utility.yul\":5405:5524   */\n      tag_223\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":5213:5531   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5537:5655   */\n    tag_224:\n        /* \"#utility.yul\":5624:5648   */\n      tag_312\n        /* \"#utility.yul\":5642:5647   */\n      dup2\n        /* \"#utility.yul\":5624:5648   */\n      tag_210\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5619:5622   */\n      dup3\n        /* \"#utility.yul\":5612:5649   */\n      mstore\n        /* \"#utility.yul\":5537:5655   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5661:6091   */\n    tag_61:\n        /* \"#utility.yul\":5804:5808   */\n      0x00\n        /* \"#utility.yul\":5842:5844   */\n      0x60\n        /* \"#utility.yul\":5831:5840   */\n      dup3\n        /* \"#utility.yul\":5827:5845   */\n      add\n        /* \"#utility.yul\":5819:5845   */\n      swap1\n      pop\n        /* \"#utility.yul\":5855:5926   */\n      tag_314\n        /* \"#utility.yul\":5923:5924   */\n      0x00\n        /* \"#utility.yul\":5912:5921   */\n      dup4\n        /* \"#utility.yul\":5908:5925   */\n      add\n        /* \"#utility.yul\":5899:5905   */\n      dup7\n        /* \"#utility.yul\":5855:5926   */\n      tag_224\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5936:6008   */\n      tag_315\n        /* \"#utility.yul\":6004:6006   */\n      0x20\n        /* \"#utility.yul\":5993:6002   */\n      dup4\n        /* \"#utility.yul\":5989:6007   */\n      add\n        /* \"#utility.yul\":5980:5986   */\n      dup6\n        /* \"#utility.yul\":5936:6008   */\n      tag_224\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":6018:6084   */\n      tag_316\n        /* \"#utility.yul\":6080:6082   */\n      0x40\n        /* \"#utility.yul\":6069:6078   */\n      dup4\n        /* \"#utility.yul\":6065:6083   */\n      add\n        /* \"#utility.yul\":6056:6062   */\n      dup5\n        /* \"#utility.yul\":6018:6084   */\n      tag_209\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5661:6091   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6097:6426   */\n    tag_71:\n        /* \"#utility.yul\":6156:6162   */\n      0x00\n        /* \"#utility.yul\":6205:6207   */\n      0x20\n        /* \"#utility.yul\":6193:6202   */\n      dup3\n        /* \"#utility.yul\":6184:6191   */\n      dup5\n        /* \"#utility.yul\":6180:6203   */\n      sub\n        /* \"#utility.yul\":6176:6208   */\n      slt\n        /* \"#utility.yul\":6173:6292   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":6211:6290   */\n      tag_319\n      tag_203\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":6173:6292   */\n    tag_318:\n        /* \"#utility.yul\":6331:6332   */\n      0x00\n        /* \"#utility.yul\":6356:6409   */\n      tag_320\n        /* \"#utility.yul\":6401:6408   */\n      dup5\n        /* \"#utility.yul\":6392:6398   */\n      dup3\n        /* \"#utility.yul\":6381:6390   */\n      dup6\n        /* \"#utility.yul\":6377:6399   */\n      add\n        /* \"#utility.yul\":6356:6409   */\n      tag_220\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":6346:6409   */\n      swap2\n      pop\n        /* \"#utility.yul\":6302:6419   */\n      pop\n        /* \"#utility.yul\":6097:6426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6432:6906   */\n    tag_78:\n        /* \"#utility.yul\":6500:6506   */\n      0x00\n        /* \"#utility.yul\":6508:6514   */\n      dup1\n        /* \"#utility.yul\":6557:6559   */\n      0x40\n        /* \"#utility.yul\":6545:6554   */\n      dup4\n        /* \"#utility.yul\":6536:6543   */\n      dup6\n        /* \"#utility.yul\":6532:6555   */\n      sub\n        /* \"#utility.yul\":6528:6560   */\n      slt\n        /* \"#utility.yul\":6525:6644   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":6563:6642   */\n      tag_323\n      tag_203\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":6525:6644   */\n    tag_322:\n        /* \"#utility.yul\":6683:6684   */\n      0x00\n        /* \"#utility.yul\":6708:6761   */\n      tag_324\n        /* \"#utility.yul\":6753:6760   */\n      dup6\n        /* \"#utility.yul\":6744:6750   */\n      dup3\n        /* \"#utility.yul\":6733:6742   */\n      dup7\n        /* \"#utility.yul\":6729:6751   */\n      add\n        /* \"#utility.yul\":6708:6761   */\n      tag_212\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":6698:6761   */\n      swap3\n      pop\n        /* \"#utility.yul\":6654:6771   */\n      pop\n        /* \"#utility.yul\":6810:6812   */\n      0x20\n        /* \"#utility.yul\":6836:6889   */\n      tag_325\n        /* \"#utility.yul\":6881:6888   */\n      dup6\n        /* \"#utility.yul\":6872:6878   */\n      dup3\n        /* \"#utility.yul\":6861:6870   */\n      dup7\n        /* \"#utility.yul\":6857:6879   */\n      add\n        /* \"#utility.yul\":6836:6889   */\n      tag_212\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":6826:6889   */\n      swap2\n      pop\n        /* \"#utility.yul\":6781:6899   */\n      pop\n        /* \"#utility.yul\":6432:6906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6912:7081   */\n    tag_225:\n        /* \"#utility.yul\":6996:7007   */\n      0x00\n        /* \"#utility.yul\":7030:7036   */\n      dup3\n        /* \"#utility.yul\":7025:7028   */\n      dup3\n        /* \"#utility.yul\":7018:7037   */\n      mstore\n        /* \"#utility.yul\":7070:7074   */\n      0x20\n        /* \"#utility.yul\":7065:7068   */\n      dup3\n        /* \"#utility.yul\":7061:7075   */\n      add\n        /* \"#utility.yul\":7046:7075   */\n      swap1\n      pop\n        /* \"#utility.yul\":6912:7081   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7087:7321   */\n    tag_226:\n        /* \"#utility.yul\":7227:7261   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":7223:7224   */\n      0x00\n        /* \"#utility.yul\":7215:7221   */\n      dup3\n        /* \"#utility.yul\":7211:7225   */\n      add\n        /* \"#utility.yul\":7204:7262   */\n      mstore\n        /* \"#utility.yul\":7296:7313   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":7291:7293   */\n      0x20\n        /* \"#utility.yul\":7283:7289   */\n      dup3\n        /* \"#utility.yul\":7279:7294   */\n      add\n        /* \"#utility.yul\":7272:7314   */\n      mstore\n        /* \"#utility.yul\":7087:7321   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7327:7693   */\n    tag_227:\n        /* \"#utility.yul\":7469:7472   */\n      0x00\n        /* \"#utility.yul\":7490:7557   */\n      tag_329\n        /* \"#utility.yul\":7554:7556   */\n      0x2f\n        /* \"#utility.yul\":7549:7552   */\n      dup4\n        /* \"#utility.yul\":7490:7557   */\n      tag_225\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":7483:7557   */\n      swap2\n      pop\n        /* \"#utility.yul\":7566:7659   */\n      tag_330\n        /* \"#utility.yul\":7655:7658   */\n      dup3\n        /* \"#utility.yul\":7566:7659   */\n      tag_226\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7684:7686   */\n      0x40\n        /* \"#utility.yul\":7679:7682   */\n      dup3\n        /* \"#utility.yul\":7675:7687   */\n      add\n        /* \"#utility.yul\":7668:7687   */\n      swap1\n      pop\n        /* \"#utility.yul\":7327:7693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7699:8118   */\n    tag_104:\n        /* \"#utility.yul\":7865:7869   */\n      0x00\n        /* \"#utility.yul\":7903:7905   */\n      0x20\n        /* \"#utility.yul\":7892:7901   */\n      dup3\n        /* \"#utility.yul\":7888:7906   */\n      add\n        /* \"#utility.yul\":7880:7906   */\n      swap1\n      pop\n        /* \"#utility.yul\":7952:7961   */\n      dup2\n        /* \"#utility.yul\":7946:7950   */\n      dup2\n        /* \"#utility.yul\":7942:7962   */\n      sub\n        /* \"#utility.yul\":7938:7939   */\n      0x00\n        /* \"#utility.yul\":7927:7936   */\n      dup4\n        /* \"#utility.yul\":7923:7940   */\n      add\n        /* \"#utility.yul\":7916:7963   */\n      mstore\n        /* \"#utility.yul\":7980:8111   */\n      tag_332\n        /* \"#utility.yul\":8106:8110   */\n      dup2\n        /* \"#utility.yul\":7980:8111   */\n      tag_227\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":7972:8111   */\n      swap1\n      pop\n        /* \"#utility.yul\":7699:8118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8124:8293   */\n    tag_228:\n        /* \"#utility.yul\":8264:8285   */\n      0x47616d6520646f6573206e6f7420657869737400000000000000000000000000\n        /* \"#utility.yul\":8260:8261   */\n      0x00\n        /* \"#utility.yul\":8252:8258   */\n      dup3\n        /* \"#utility.yul\":8248:8262   */\n      add\n        /* \"#utility.yul\":8241:8286   */\n      mstore\n        /* \"#utility.yul\":8124:8293   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8299:8665   */\n    tag_229:\n        /* \"#utility.yul\":8441:8444   */\n      0x00\n        /* \"#utility.yul\":8462:8529   */\n      tag_335\n        /* \"#utility.yul\":8526:8528   */\n      0x13\n        /* \"#utility.yul\":8521:8524   */\n      dup4\n        /* \"#utility.yul\":8462:8529   */\n      tag_225\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":8455:8529   */\n      swap2\n      pop\n        /* \"#utility.yul\":8538:8631   */\n      tag_336\n        /* \"#utility.yul\":8627:8630   */\n      dup3\n        /* \"#utility.yul\":8538:8631   */\n      tag_228\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":8656:8658   */\n      0x20\n        /* \"#utility.yul\":8651:8654   */\n      dup3\n        /* \"#utility.yul\":8647:8659   */\n      add\n        /* \"#utility.yul\":8640:8659   */\n      swap1\n      pop\n        /* \"#utility.yul\":8299:8665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8671:9090   */\n    tag_112:\n        /* \"#utility.yul\":8837:8841   */\n      0x00\n        /* \"#utility.yul\":8875:8877   */\n      0x20\n        /* \"#utility.yul\":8864:8873   */\n      dup3\n        /* \"#utility.yul\":8860:8878   */\n      add\n        /* \"#utility.yul\":8852:8878   */\n      swap1\n      pop\n        /* \"#utility.yul\":8924:8933   */\n      dup2\n        /* \"#utility.yul\":8918:8922   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      sub\n        /* \"#utility.yul\":8910:8911   */\n      0x00\n        /* \"#utility.yul\":8899:8908   */\n      dup4\n        /* \"#utility.yul\":8895:8912   */\n      add\n        /* \"#utility.yul\":8888:8935   */\n      mstore\n        /* \"#utility.yul\":8952:9083   */\n      tag_338\n        /* \"#utility.yul\":9078:9082   */\n      dup2\n        /* \"#utility.yul\":8952:9083   */\n      tag_229\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":8944:9083   */\n      swap1\n      pop\n        /* \"#utility.yul\":8671:9090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9096:9318   */\n    tag_119:\n        /* \"#utility.yul\":9189:9193   */\n      0x00\n        /* \"#utility.yul\":9227:9229   */\n      0x20\n        /* \"#utility.yul\":9216:9225   */\n      dup3\n        /* \"#utility.yul\":9212:9230   */\n      add\n        /* \"#utility.yul\":9204:9230   */\n      swap1\n      pop\n        /* \"#utility.yul\":9240:9311   */\n      tag_340\n        /* \"#utility.yul\":9308:9309   */\n      0x00\n        /* \"#utility.yul\":9297:9306   */\n      dup4\n        /* \"#utility.yul\":9293:9310   */\n      add\n        /* \"#utility.yul\":9284:9290   */\n      dup5\n        /* \"#utility.yul\":9240:9311   */\n      tag_224\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":9096:9318   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9324:9492   */\n    tag_230:\n        /* \"#utility.yul\":9464:9484   */\n      0x47616d6520616c72656164792065786973740000000000000000000000000000\n        /* \"#utility.yul\":9460:9461   */\n      0x00\n        /* \"#utility.yul\":9452:9458   */\n      dup3\n        /* \"#utility.yul\":9448:9462   */\n      add\n        /* \"#utility.yul\":9441:9485   */\n      mstore\n        /* \"#utility.yul\":9324:9492   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9498:9864   */\n    tag_231:\n        /* \"#utility.yul\":9640:9643   */\n      0x00\n        /* \"#utility.yul\":9661:9728   */\n      tag_343\n        /* \"#utility.yul\":9725:9727   */\n      0x12\n        /* \"#utility.yul\":9720:9723   */\n      dup4\n        /* \"#utility.yul\":9661:9728   */\n      tag_225\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":9654:9728   */\n      swap2\n      pop\n        /* \"#utility.yul\":9737:9830   */\n      tag_344\n        /* \"#utility.yul\":9826:9829   */\n      dup3\n        /* \"#utility.yul\":9737:9830   */\n      tag_230\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":9855:9857   */\n      0x20\n        /* \"#utility.yul\":9850:9853   */\n      dup3\n        /* \"#utility.yul\":9846:9858   */\n      add\n        /* \"#utility.yul\":9839:9858   */\n      swap1\n      pop\n        /* \"#utility.yul\":9498:9864   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9870:10289   */\n    tag_135:\n        /* \"#utility.yul\":10036:10040   */\n      0x00\n        /* \"#utility.yul\":10074:10076   */\n      0x20\n        /* \"#utility.yul\":10063:10072   */\n      dup3\n        /* \"#utility.yul\":10059:10077   */\n      add\n        /* \"#utility.yul\":10051:10077   */\n      swap1\n      pop\n        /* \"#utility.yul\":10123:10132   */\n      dup2\n        /* \"#utility.yul\":10117:10121   */\n      dup2\n        /* \"#utility.yul\":10113:10133   */\n      sub\n        /* \"#utility.yul\":10109:10110   */\n      0x00\n        /* \"#utility.yul\":10098:10107   */\n      dup4\n        /* \"#utility.yul\":10094:10111   */\n      add\n        /* \"#utility.yul\":10087:10134   */\n      mstore\n        /* \"#utility.yul\":10151:10282   */\n      tag_346\n        /* \"#utility.yul\":10277:10281   */\n      dup2\n        /* \"#utility.yul\":10151:10282   */\n      tag_231\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":10143:10282   */\n      swap1\n      pop\n        /* \"#utility.yul\":9870:10289   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10295:10627   */\n    tag_137:\n        /* \"#utility.yul\":10416:10420   */\n      0x00\n        /* \"#utility.yul\":10454:10456   */\n      0x40\n        /* \"#utility.yul\":10443:10452   */\n      dup3\n        /* \"#utility.yul\":10439:10457   */\n      add\n        /* \"#utility.yul\":10431:10457   */\n      swap1\n      pop\n        /* \"#utility.yul\":10467:10538   */\n      tag_348\n        /* \"#utility.yul\":10535:10536   */\n      0x00\n        /* \"#utility.yul\":10524:10533   */\n      dup4\n        /* \"#utility.yul\":10520:10537   */\n      add\n        /* \"#utility.yul\":10511:10517   */\n      dup6\n        /* \"#utility.yul\":10467:10538   */\n      tag_224\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":10548:10620   */\n      tag_349\n        /* \"#utility.yul\":10616:10618   */\n      0x20\n        /* \"#utility.yul\":10605:10614   */\n      dup4\n        /* \"#utility.yul\":10601:10619   */\n      add\n        /* \"#utility.yul\":10592:10598   */\n      dup5\n        /* \"#utility.yul\":10548:10620   */\n      tag_224\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":10295:10627   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10633:10781   */\n    tag_232:\n        /* \"#utility.yul\":10735:10746   */\n      0x00\n        /* \"#utility.yul\":10772:10775   */\n      dup2\n        /* \"#utility.yul\":10757:10775   */\n      swap1\n      pop\n        /* \"#utility.yul\":10633:10781   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10787:10960   */\n    tag_233:\n        /* \"#utility.yul\":10927:10952   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":10923:10924   */\n      0x00\n        /* \"#utility.yul\":10915:10921   */\n      dup3\n        /* \"#utility.yul\":10911:10925   */\n      add\n        /* \"#utility.yul\":10904:10953   */\n      mstore\n        /* \"#utility.yul\":10787:10960   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10966:11368   */\n    tag_234:\n        /* \"#utility.yul\":11126:11129   */\n      0x00\n        /* \"#utility.yul\":11147:11232   */\n      tag_353\n        /* \"#utility.yul\":11229:11231   */\n      0x17\n        /* \"#utility.yul\":11224:11227   */\n      dup4\n        /* \"#utility.yul\":11147:11232   */\n      tag_232\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":11140:11232   */\n      swap2\n      pop\n        /* \"#utility.yul\":11241:11334   */\n      tag_354\n        /* \"#utility.yul\":11330:11333   */\n      dup3\n        /* \"#utility.yul\":11241:11334   */\n      tag_233\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":11359:11361   */\n      0x17\n        /* \"#utility.yul\":11354:11357   */\n      dup3\n        /* \"#utility.yul\":11350:11362   */\n      add\n        /* \"#utility.yul\":11343:11362   */\n      swap1\n      pop\n        /* \"#utility.yul\":10966:11368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11374:11473   */\n    tag_235:\n        /* \"#utility.yul\":11426:11432   */\n      0x00\n        /* \"#utility.yul\":11460:11465   */\n      dup2\n        /* \"#utility.yul\":11454:11466   */\n      mload\n        /* \"#utility.yul\":11444:11466   */\n      swap1\n      pop\n        /* \"#utility.yul\":11374:11473   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11479:11618   */\n    tag_236:\n        /* \"#utility.yul\":11568:11574   */\n      dup3\n        /* \"#utility.yul\":11563:11566   */\n      dup2\n        /* \"#utility.yul\":11558:11561   */\n      dup4\n        /* \"#utility.yul\":11552:11575   */\n      mcopy\n        /* \"#utility.yul\":11609:11610   */\n      0x00\n        /* \"#utility.yul\":11600:11606   */\n      dup4\n        /* \"#utility.yul\":11595:11598   */\n      dup4\n        /* \"#utility.yul\":11591:11607   */\n      add\n        /* \"#utility.yul\":11584:11611   */\n      mstore\n        /* \"#utility.yul\":11479:11618   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11624:12014   */\n    tag_237:\n        /* \"#utility.yul\":11730:11733   */\n      0x00\n        /* \"#utility.yul\":11758:11797   */\n      tag_358\n        /* \"#utility.yul\":11791:11796   */\n      dup3\n        /* \"#utility.yul\":11758:11797   */\n      tag_235\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":11813:11902   */\n      tag_359\n        /* \"#utility.yul\":11895:11901   */\n      dup2\n        /* \"#utility.yul\":11890:11893   */\n      dup6\n        /* \"#utility.yul\":11813:11902   */\n      tag_232\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":11806:11902   */\n      swap4\n      pop\n        /* \"#utility.yul\":11911:11976   */\n      tag_360\n        /* \"#utility.yul\":11969:11975   */\n      dup2\n        /* \"#utility.yul\":11964:11967   */\n      dup6\n        /* \"#utility.yul\":11957:11961   */\n      0x20\n        /* \"#utility.yul\":11950:11955   */\n      dup7\n        /* \"#utility.yul\":11946:11962   */\n      add\n        /* \"#utility.yul\":11911:11976   */\n      tag_236\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":12001:12007   */\n      dup1\n        /* \"#utility.yul\":11996:11999   */\n      dup5\n        /* \"#utility.yul\":11992:12008   */\n      add\n        /* \"#utility.yul\":11985:12008   */\n      swap2\n      pop\n        /* \"#utility.yul\":11734:12014   */\n      pop\n        /* \"#utility.yul\":11624:12014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12020:12187   */\n    tag_238:\n        /* \"#utility.yul\":12160:12179   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":12156:12157   */\n      0x00\n        /* \"#utility.yul\":12148:12154   */\n      dup3\n        /* \"#utility.yul\":12144:12158   */\n      add\n        /* \"#utility.yul\":12137:12180   */\n      mstore\n        /* \"#utility.yul\":12020:12187   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12193:12595   */\n    tag_239:\n        /* \"#utility.yul\":12353:12356   */\n      0x00\n        /* \"#utility.yul\":12374:12459   */\n      tag_363\n        /* \"#utility.yul\":12456:12458   */\n      0x11\n        /* \"#utility.yul\":12451:12454   */\n      dup4\n        /* \"#utility.yul\":12374:12459   */\n      tag_232\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":12367:12459   */\n      swap2\n      pop\n        /* \"#utility.yul\":12468:12561   */\n      tag_364\n        /* \"#utility.yul\":12557:12560   */\n      dup3\n        /* \"#utility.yul\":12468:12561   */\n      tag_238\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":12586:12588   */\n      0x11\n        /* \"#utility.yul\":12581:12584   */\n      dup3\n        /* \"#utility.yul\":12577:12589   */\n      add\n        /* \"#utility.yul\":12570:12589   */\n      swap1\n      pop\n        /* \"#utility.yul\":12193:12595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12601:13568   */\n    tag_169:\n        /* \"#utility.yul\":12983:12986   */\n      0x00\n        /* \"#utility.yul\":13005:13153   */\n      tag_366\n        /* \"#utility.yul\":13149:13152   */\n      dup3\n        /* \"#utility.yul\":13005:13153   */\n      tag_234\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":12998:13153   */\n      swap2\n      pop\n        /* \"#utility.yul\":13170:13265   */\n      tag_367\n        /* \"#utility.yul\":13261:13264   */\n      dup3\n        /* \"#utility.yul\":13252:13258   */\n      dup6\n        /* \"#utility.yul\":13170:13265   */\n      tag_237\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":13163:13265   */\n      swap2\n      pop\n        /* \"#utility.yul\":13282:13430   */\n      tag_368\n        /* \"#utility.yul\":13426:13429   */\n      dup3\n        /* \"#utility.yul\":13282:13430   */\n      tag_239\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":13275:13430   */\n      swap2\n      pop\n        /* \"#utility.yul\":13447:13542   */\n      tag_369\n        /* \"#utility.yul\":13538:13541   */\n      dup3\n        /* \"#utility.yul\":13529:13535   */\n      dup5\n        /* \"#utility.yul\":13447:13542   */\n      tag_237\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":13440:13542   */\n      swap2\n      pop\n        /* \"#utility.yul\":13559:13562   */\n      dup2\n        /* \"#utility.yul\":13552:13562   */\n      swap1\n      pop\n        /* \"#utility.yul\":12601:13568   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13574:13676   */\n    tag_240:\n        /* \"#utility.yul\":13615:13621   */\n      0x00\n        /* \"#utility.yul\":13666:13668   */\n      0x1f\n        /* \"#utility.yul\":13662:13669   */\n      not\n        /* \"#utility.yul\":13657:13659   */\n      0x1f\n        /* \"#utility.yul\":13650:13655   */\n      dup4\n        /* \"#utility.yul\":13646:13660   */\n      add\n        /* \"#utility.yul\":13642:13670   */\n      and\n        /* \"#utility.yul\":13632:13670   */\n      swap1\n      pop\n        /* \"#utility.yul\":13574:13676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13682:14059   */\n    tag_241:\n        /* \"#utility.yul\":13770:13773   */\n      0x00\n        /* \"#utility.yul\":13798:13837   */\n      tag_372\n        /* \"#utility.yul\":13831:13836   */\n      dup3\n        /* \"#utility.yul\":13798:13837   */\n      tag_235\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":13853:13924   */\n      tag_373\n        /* \"#utility.yul\":13917:13923   */\n      dup2\n        /* \"#utility.yul\":13912:13915   */\n      dup6\n        /* \"#utility.yul\":13853:13924   */\n      tag_225\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":13846:13924   */\n      swap4\n      pop\n        /* \"#utility.yul\":13933:13998   */\n      tag_374\n        /* \"#utility.yul\":13991:13997   */\n      dup2\n        /* \"#utility.yul\":13986:13989   */\n      dup6\n        /* \"#utility.yul\":13979:13983   */\n      0x20\n        /* \"#utility.yul\":13972:13977   */\n      dup7\n        /* \"#utility.yul\":13968:13984   */\n      add\n        /* \"#utility.yul\":13933:13998   */\n      tag_236\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":14023:14052   */\n      tag_375\n        /* \"#utility.yul\":14045:14051   */\n      dup2\n        /* \"#utility.yul\":14023:14052   */\n      tag_240\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":14018:14021   */\n      dup5\n        /* \"#utility.yul\":14014:14053   */\n      add\n        /* \"#utility.yul\":14007:14053   */\n      swap2\n      pop\n        /* \"#utility.yul\":13774:14059   */\n      pop\n        /* \"#utility.yul\":13682:14059   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14065:14378   */\n    tag_171:\n        /* \"#utility.yul\":14178:14182   */\n      0x00\n        /* \"#utility.yul\":14216:14218   */\n      0x20\n        /* \"#utility.yul\":14205:14214   */\n      dup3\n        /* \"#utility.yul\":14201:14219   */\n      add\n        /* \"#utility.yul\":14193:14219   */\n      swap1\n      pop\n        /* \"#utility.yul\":14265:14274   */\n      dup2\n        /* \"#utility.yul\":14259:14263   */\n      dup2\n        /* \"#utility.yul\":14255:14275   */\n      sub\n        /* \"#utility.yul\":14251:14252   */\n      0x00\n        /* \"#utility.yul\":14240:14249   */\n      dup4\n        /* \"#utility.yul\":14236:14253   */\n      add\n        /* \"#utility.yul\":14229:14276   */\n      mstore\n        /* \"#utility.yul\":14293:14371   */\n      tag_377\n        /* \"#utility.yul\":14366:14370   */\n      dup2\n        /* \"#utility.yul\":14357:14363   */\n      dup5\n        /* \"#utility.yul\":14293:14371   */\n      tag_241\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":14285:14371   */\n      swap1\n      pop\n        /* \"#utility.yul\":14065:14378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14384:14564   */\n    tag_242:\n        /* \"#utility.yul\":14432:14509   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14429:14430   */\n      0x00\n        /* \"#utility.yul\":14422:14510   */\n      mstore\n        /* \"#utility.yul\":14529:14533   */\n      0x11\n        /* \"#utility.yul\":14526:14527   */\n      0x04\n        /* \"#utility.yul\":14519:14534   */\n      mstore\n        /* \"#utility.yul\":14553:14557   */\n      0x24\n        /* \"#utility.yul\":14550:14551   */\n      0x00\n        /* \"#utility.yul\":14543:14558   */\n      revert\n        /* \"#utility.yul\":14570:14980   */\n    tag_176:\n        /* \"#utility.yul\":14610:14617   */\n      0x00\n        /* \"#utility.yul\":14633:14653   */\n      tag_380\n        /* \"#utility.yul\":14651:14652   */\n      dup3\n        /* \"#utility.yul\":14633:14653   */\n      tag_210\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":14628:14653   */\n      swap2\n      pop\n        /* \"#utility.yul\":14667:14687   */\n      tag_381\n        /* \"#utility.yul\":14685:14686   */\n      dup4\n        /* \"#utility.yul\":14667:14687   */\n      tag_210\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":14662:14687   */\n      swap3\n      pop\n        /* \"#utility.yul\":14722:14723   */\n      dup3\n        /* \"#utility.yul\":14719:14720   */\n      dup3\n        /* \"#utility.yul\":14715:14724   */\n      mul\n        /* \"#utility.yul\":14744:14774   */\n      tag_382\n        /* \"#utility.yul\":14762:14773   */\n      dup2\n        /* \"#utility.yul\":14744:14774   */\n      tag_210\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":14733:14774   */\n      swap2\n      pop\n        /* \"#utility.yul\":14923:14924   */\n      dup3\n        /* \"#utility.yul\":14914:14921   */\n      dup3\n        /* \"#utility.yul\":14910:14925   */\n      div\n        /* \"#utility.yul\":14907:14908   */\n      dup5\n        /* \"#utility.yul\":14904:14926   */\n      eq\n        /* \"#utility.yul\":14884:14885   */\n      dup4\n        /* \"#utility.yul\":14877:14886   */\n      iszero\n        /* \"#utility.yul\":14857:14940   */\n      or\n        /* \"#utility.yul\":14834:14973   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":14953:14971   */\n      tag_384\n      tag_242\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":14834:14973   */\n    tag_383:\n        /* \"#utility.yul\":14618:14980   */\n      pop\n        /* \"#utility.yul\":14570:14980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14986:15177   */\n    tag_178:\n        /* \"#utility.yul\":15026:15029   */\n      0x00\n        /* \"#utility.yul\":15045:15065   */\n      tag_386\n        /* \"#utility.yul\":15063:15064   */\n      dup3\n        /* \"#utility.yul\":15045:15065   */\n      tag_210\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":15040:15065   */\n      swap2\n      pop\n        /* \"#utility.yul\":15079:15099   */\n      tag_387\n        /* \"#utility.yul\":15097:15098   */\n      dup4\n        /* \"#utility.yul\":15079:15099   */\n      tag_210\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":15074:15099   */\n      swap3\n      pop\n        /* \"#utility.yul\":15122:15123   */\n      dup3\n        /* \"#utility.yul\":15119:15120   */\n      dup3\n        /* \"#utility.yul\":15115:15124   */\n      add\n        /* \"#utility.yul\":15108:15124   */\n      swap1\n      pop\n        /* \"#utility.yul\":15143:15146   */\n      dup1\n        /* \"#utility.yul\":15140:15141   */\n      dup3\n        /* \"#utility.yul\":15137:15147   */\n      gt\n        /* \"#utility.yul\":15134:15170   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":15150:15168   */\n      tag_389\n      tag_242\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":15134:15170   */\n    tag_388:\n        /* \"#utility.yul\":14986:15177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15183:15363   */\n    tag_181:\n        /* \"#utility.yul\":15231:15308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15228:15229   */\n      0x00\n        /* \"#utility.yul\":15221:15309   */\n      mstore\n        /* \"#utility.yul\":15328:15332   */\n      0x41\n        /* \"#utility.yul\":15325:15326   */\n      0x04\n        /* \"#utility.yul\":15318:15333   */\n      mstore\n        /* \"#utility.yul\":15352:15356   */\n      0x24\n        /* \"#utility.yul\":15349:15350   */\n      0x00\n        /* \"#utility.yul\":15342:15357   */\n      revert\n        /* \"#utility.yul\":15369:15549   */\n    tag_185:\n        /* \"#utility.yul\":15417:15494   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15414:15415   */\n      0x00\n        /* \"#utility.yul\":15407:15495   */\n      mstore\n        /* \"#utility.yul\":15514:15518   */\n      0x32\n        /* \"#utility.yul\":15511:15512   */\n      0x04\n        /* \"#utility.yul\":15504:15519   */\n      mstore\n        /* \"#utility.yul\":15538:15542   */\n      0x24\n        /* \"#utility.yul\":15535:15536   */\n      0x00\n        /* \"#utility.yul\":15528:15543   */\n      revert\n        /* \"#utility.yul\":15555:15726   */\n    tag_198:\n        /* \"#utility.yul\":15594:15597   */\n      0x00\n        /* \"#utility.yul\":15617:15641   */\n      tag_393\n        /* \"#utility.yul\":15635:15640   */\n      dup3\n        /* \"#utility.yul\":15617:15641   */\n      tag_210\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":15608:15641   */\n      swap2\n      pop\n        /* \"#utility.yul\":15663:15667   */\n      0x00\n        /* \"#utility.yul\":15656:15661   */\n      dup3\n        /* \"#utility.yul\":15653:15668   */\n      sub\n        /* \"#utility.yul\":15650:15691   */\n      tag_394\n      jumpi\n        /* \"#utility.yul\":15671:15689   */\n      tag_395\n      tag_242\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":15650:15691   */\n    tag_394:\n        /* \"#utility.yul\":15718:15719   */\n      0x01\n        /* \"#utility.yul\":15711:15716   */\n      dup3\n        /* \"#utility.yul\":15707:15720   */\n      sub\n        /* \"#utility.yul\":15700:15720   */\n      swap1\n      pop\n        /* \"#utility.yul\":15555:15726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15732:15914   */\n    tag_243:\n        /* \"#utility.yul\":15872:15906   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":15868:15869   */\n      0x00\n        /* \"#utility.yul\":15860:15866   */\n      dup3\n        /* \"#utility.yul\":15856:15870   */\n      add\n        /* \"#utility.yul\":15849:15907   */\n      mstore\n        /* \"#utility.yul\":15732:15914   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15920:16286   */\n    tag_244:\n        /* \"#utility.yul\":16062:16065   */\n      0x00\n        /* \"#utility.yul\":16083:16150   */\n      tag_398\n        /* \"#utility.yul\":16147:16149   */\n      0x20\n        /* \"#utility.yul\":16142:16145   */\n      dup4\n        /* \"#utility.yul\":16083:16150   */\n      tag_225\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":16076:16150   */\n      swap2\n      pop\n        /* \"#utility.yul\":16159:16252   */\n      tag_399\n        /* \"#utility.yul\":16248:16251   */\n      dup3\n        /* \"#utility.yul\":16159:16252   */\n      tag_243\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":16277:16279   */\n      0x20\n        /* \"#utility.yul\":16272:16275   */\n      dup3\n        /* \"#utility.yul\":16268:16280   */\n      add\n        /* \"#utility.yul\":16261:16280   */\n      swap1\n      pop\n        /* \"#utility.yul\":15920:16286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16292:16711   */\n    tag_201:\n        /* \"#utility.yul\":16458:16462   */\n      0x00\n        /* \"#utility.yul\":16496:16498   */\n      0x20\n        /* \"#utility.yul\":16485:16494   */\n      dup3\n        /* \"#utility.yul\":16481:16499   */\n      add\n        /* \"#utility.yul\":16473:16499   */\n      swap1\n      pop\n        /* \"#utility.yul\":16545:16554   */\n      dup2\n        /* \"#utility.yul\":16539:16543   */\n      dup2\n        /* \"#utility.yul\":16535:16555   */\n      sub\n        /* \"#utility.yul\":16531:16532   */\n      0x00\n        /* \"#utility.yul\":16520:16529   */\n      dup4\n        /* \"#utility.yul\":16516:16533   */\n      add\n        /* \"#utility.yul\":16509:16556   */\n      mstore\n        /* \"#utility.yul\":16573:16704   */\n      tag_401\n        /* \"#utility.yul\":16699:16703   */\n      dup2\n        /* \"#utility.yul\":16573:16704   */\n      tag_244\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":16565:16704   */\n      swap1\n      pop\n        /* \"#utility.yul\":16292:16711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b617243c6cac18e4e709b6acc4d56dbe578787b6dc4b0d0a1a8b80a55d72917864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_52": {
									"entryPoint": null,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_481": {
									"entryPoint": 107,
									"id": 481,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_676": {
									"entryPoint": 436,
									"id": 676,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setupRole_421": {
									"entryPoint": 87,
									"id": 421,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_277": {
									"entryPoint": 337,
									"id": 277,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506100225f801b3361005760201b60201c565b6100527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753361005760201b60201c565b6101bb565b610067828261006b60201b60201c565b5050565b61007b828261015160201b60201c565b61014d5760015f808481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506100f26101b460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b611718806101c85f395ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c80637d1b468711610095578063a217fddf11610064578063a217fddf146102ce578063b638d158146102ec578063c634b78e14610308578063d547741f14610324576100fe565b80637d1b46871461023457806389b2c8e71461026657806391d14854146102825780639a19c7b0146102b2576100fe565b806336568abe116100d157806336568abe146101ae57806347e1d550146101ca5780634f0ce4df146101fa57806375b238fc14610216576100fe565b806301ffc9a7146101025780631833fdf914610132578063248a9ca3146101625780632f2ff15d14610192575b5f80fd5b61011c60048036038101906101179190610f25565b610340565b6040516101299190610f6a565b60405180910390f35b61014c60048036038101906101479190610fb6565b6103b9565b6040516101599190610f6a565b60405180910390f35b61017c60048036038101906101779190611014565b6103e2565b604051610189919061104e565b60405180910390f35b6101ac60048036038101906101a791906110c1565b6103fe565b005b6101c860048036038101906101c391906110c1565b61041f565b005b6101e460048036038101906101df9190610fb6565b6104a2565b6040516101f1919061115d565b60405180910390f35b610214600480360381019061020f9190610fb6565b61055a565b005b61021e61061f565b60405161022b919061104e565b60405180910390f35b61024e60048036038101906102499190610fb6565b610643565b60405161025d93929190611185565b60405180910390f35b610280600480360381019061027b9190610fb6565b610675565b005b61029c600480360381019061029791906110c1565b610764565b6040516102a99190610f6a565b60405180910390f35b6102cc60048036038101906102c791906111ba565b6107c7565b005b6102d6610801565b6040516102e3919061104e565b60405180910390f35b610306600480360381019061030191906111e5565b610807565b005b610322600480360381019061031d91906111ba565b610933565b005b61033e600480360381019061033991906110c1565b61096d565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103b257506103b18261098e565b5b9050919050565b5f60015f8381526020019081526020015f206002015f9054906101000a900460ff169050919050565b5f805f8381526020019081526020015f20600101549050919050565b610407826103e2565b610410816109f7565b61041a8383610a0b565b505050565b610427610ae5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b906112a3565b60405180910390fd5b61049e8282610aec565b5050565b6104aa610eac565b60015f8381526020019081526020015f206002015f9054906101000a900460ff1661050a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105019061130b565b60405180910390fd5b60015f8381526020019081526020015f206040518060600160405290815f820154815260200160018201548152602001600282015f9054906101000a900460ff1615151515815250509050919050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610584816109f7565b60015f8381526020019081526020015f206002015f9054906101000a900460ff166105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db9061130b565b60405180910390fd5b7f8da554679ce754233202e83b51aefa8be576e0a49851a9ddd4686dfd94ba6093826040516106139190611329565b60405180910390a15050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b6001602052805f5260405f205f91509050805f015490806001015490806002015f9054906101000a900460ff16905083565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561069f816109f7565b60015f8381526020019081526020015f206002015f9054906101000a900460ff166106ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f69061130b565b60405180910390fd5b60015f8381526020019081526020015f205f8082015f9055600182015f9055600282015f6101000a81549060ff02191690555050817f5ef6221cc1c069a8c723210c08d526c7ca88540ee8d66470cf01844efaae0b9460405160405180910390a25050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b6107d3816109f7565b6107fd7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758361096d565b5050565b5f801b81565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775610831816109f7565b60015f8481526020019081526020015f206002015f9054906101000a900460ff1615610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108899061138c565b60405180910390fd5b60405180606001604052808481526020018381526020016001151581525060015f8581526020019081526020015f205f820151815f0155602082015181600101556040820151816002015f6101000a81548160ff0219169083151502179055509050507feeb0a161eda325cefb3f550c18e560490ea78827e2a4c3a9fa9c5e66ce871c3f83836040516109269291906113aa565b60405180910390a1505050565b5f801b61093f816109f7565b6109697fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775836103fe565b5050565b610976826103e2565b61097f816109f7565b6109898383610aec565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a0881610a03610ae5565b610bc6565b50565b610a158282610764565b610ae15760015f808481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610a86610ae5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b5f33905090565b610af68282610764565b15610bc2575f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610b67610ae5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b610bd08282610764565b610c4657610bdd81610c4a565b610bea835f1c6020610c77565b604051602001610bfb9291906114b7565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3d9190611538565b60405180910390fd5b5050565b6060610c708273ffffffffffffffffffffffffffffffffffffffff16601460ff16610c77565b9050919050565b60605f6002836002610c899190611585565b610c9391906115c6565b67ffffffffffffffff811115610cac57610cab6115f9565b5b6040519080825280601f01601f191660200182016040528015610cde5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000815f81518110610d1557610d14611626565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610d7857610d77611626565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505f6001846002610db69190611585565b610dc091906115c6565b90505b6001811115610e5f577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610e0257610e01611626565b5b1a60f81b828281518110610e1957610e18611626565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600485901c945080610e5890611653565b9050610dc3565b505f8414610ea2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e99906116c4565b60405180910390fd5b8091505092915050565b60405180606001604052805f81526020015f81526020015f151581525090565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f0481610ed0565b8114610f0e575f80fd5b50565b5f81359050610f1f81610efb565b92915050565b5f60208284031215610f3a57610f39610ecc565b5b5f610f4784828501610f11565b91505092915050565b5f8115159050919050565b610f6481610f50565b82525050565b5f602082019050610f7d5f830184610f5b565b92915050565b5f819050919050565b610f9581610f83565b8114610f9f575f80fd5b50565b5f81359050610fb081610f8c565b92915050565b5f60208284031215610fcb57610fca610ecc565b5b5f610fd884828501610fa2565b91505092915050565b5f819050919050565b610ff381610fe1565b8114610ffd575f80fd5b50565b5f8135905061100e81610fea565b92915050565b5f6020828403121561102957611028610ecc565b5b5f61103684828501611000565b91505092915050565b61104881610fe1565b82525050565b5f6020820190506110615f83018461103f565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61109082611067565b9050919050565b6110a081611086565b81146110aa575f80fd5b50565b5f813590506110bb81611097565b92915050565b5f80604083850312156110d7576110d6610ecc565b5b5f6110e485828601611000565b92505060206110f5858286016110ad565b9150509250929050565b61110881610f83565b82525050565b61111781610f50565b82525050565b606082015f8201516111315f8501826110ff565b50602082015161114460208501826110ff565b506040820151611157604085018261110e565b50505050565b5f6060820190506111705f83018461111d565b92915050565b61117f81610f83565b82525050565b5f6060820190506111985f830186611176565b6111a56020830185611176565b6111b26040830184610f5b565b949350505050565b5f602082840312156111cf576111ce610ecc565b5b5f6111dc848285016110ad565b91505092915050565b5f80604083850312156111fb576111fa610ecc565b5b5f61120885828601610fa2565b925050602061121985828601610fa2565b9150509250929050565b5f82825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e63655f8201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b5f61128d602f83611223565b915061129882611233565b604082019050919050565b5f6020820190508181035f8301526112ba81611281565b9050919050565b7f47616d6520646f6573206e6f74206578697374000000000000000000000000005f82015250565b5f6112f5601383611223565b9150611300826112c1565b602082019050919050565b5f6020820190508181035f830152611322816112e9565b9050919050565b5f60208201905061133c5f830184611176565b92915050565b7f47616d6520616c726561647920657869737400000000000000000000000000005f82015250565b5f611376601283611223565b915061138182611342565b602082019050919050565b5f6020820190508181035f8301526113a38161136a565b9050919050565b5f6040820190506113bd5f830185611176565b6113ca6020830184611176565b9392505050565b5f81905092915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000005f82015250565b5f61140f6017836113d1565b915061141a826113db565b601782019050919050565b5f81519050919050565b8281835e5f83830152505050565b5f61144782611425565b61145181856113d1565b935061146181856020860161142f565b80840191505092915050565b7f206973206d697373696e6720726f6c65200000000000000000000000000000005f82015250565b5f6114a16011836113d1565b91506114ac8261146d565b601182019050919050565b5f6114c182611403565b91506114cd828561143d565b91506114d882611495565b91506114e4828461143d565b91508190509392505050565b5f601f19601f8301169050919050565b5f61150a82611425565b6115148185611223565b935061152481856020860161142f565b61152d816114f0565b840191505092915050565b5f6020820190508181035f8301526115508184611500565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61158f82610f83565b915061159a83610f83565b92508282026115a881610f83565b915082820484148315176115bf576115be611558565b5b5092915050565b5f6115d082610f83565b91506115db83610f83565b92508282019050808211156115f3576115f2611558565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61165d82610f83565b91505f820361166f5761166e611558565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e745f82015250565b5f6116ae602083611223565b91506116b98261167a565b602082019050919050565b5f6020820190508181035f8301526116db816116a2565b905091905056fea2646970667358221220b617243c6cac18e4e709b6acc4d56dbe578787b6dc4b0d0a1a8b80a55d72917864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22 PUSH0 DUP1 SHL CALLER PUSH2 0x57 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x52 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x57 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x67 DUP3 DUP3 PUSH2 0x6B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7B DUP3 DUP3 PUSH2 0x151 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x14D JUMPI PUSH1 0x1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF2 PUSH2 0x1B4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1718 DUP1 PUSH2 0x1C8 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D1B4687 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xB638D158 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xC634B78E EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x324 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x7D1B4687 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x89B2C8E7 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x9A19C7B0 EQ PUSH2 0x2B2 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x47E1D550 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x4F0CE4DF EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x216 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x1833FDF9 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x192 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x1014 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x104E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x10C1 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x10C1 JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x55A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x104E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x675 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x10C1 JUMP JUMPDEST PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D6 PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x104E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x11E5 JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x10C1 JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3B2 JUMPI POP PUSH2 0x3B1 DUP3 PUSH2 0x98E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x407 DUP3 PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x410 DUP2 PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x41A DUP4 DUP4 PUSH2 0xA0B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x427 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x494 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48B SWAP1 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x49E DUP3 DUP3 PUSH2 0xAEC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4AA PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x501 SWAP1 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x584 DUP2 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x8DA554679CE754233202E83B51AEFA8BE576E0A49851A9DDD4686DFD94BA6093 DUP3 PUSH1 0x40 MLOAD PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x69F DUP2 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F6 SWAP1 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP DUP2 PUSH32 0x5EF6221CC1C069A8C723210C08D526C7CA88540EE8D66470CF01844EFAAE0B94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x7D3 DUP2 PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x7FD PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP4 PUSH2 0x96D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x831 DUP2 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x889 SWAP1 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0xEEB0A161EDA325CEFB3F550C18E560490EA78827E2A4C3A9FA9C5E66CE871C3F DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x926 SWAP3 SWAP2 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x93F DUP2 PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x969 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP4 PUSH2 0x3FE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x976 DUP3 PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x97F DUP2 PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x989 DUP4 DUP4 PUSH2 0xAEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA08 DUP2 PUSH2 0xA03 PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA15 DUP3 DUP3 PUSH2 0x764 JUMP JUMPDEST PUSH2 0xAE1 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xA86 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAF6 DUP3 DUP3 PUSH2 0x764 JUMP JUMPDEST ISZERO PUSH2 0xBC2 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB67 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBD0 DUP3 DUP3 PUSH2 0x764 JUMP JUMPDEST PUSH2 0xC46 JUMPI PUSH2 0xBDD DUP2 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0xBEA DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBFB SWAP3 SWAP2 SWAP1 PUSH2 0x14B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x1538 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC70 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xC77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xC89 SWAP2 SWAP1 PUSH2 0x1585 JUMP JUMPDEST PUSH2 0xC93 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCAC JUMPI PUSH2 0xCAB PUSH2 0x15F9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCDE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xD15 JUMPI PUSH2 0xD14 PUSH2 0x1626 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xD78 JUMPI PUSH2 0xD77 PUSH2 0x1626 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xDB6 SWAP2 SWAP1 PUSH2 0x1585 JUMP JUMPDEST PUSH2 0xDC0 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE5F JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xE02 JUMPI PUSH2 0xE01 PUSH2 0x1626 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE19 JUMPI PUSH2 0xE18 PUSH2 0x1626 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xE58 SWAP1 PUSH2 0x1653 JUMP JUMPDEST SWAP1 POP PUSH2 0xDC3 JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0xEA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE99 SWAP1 PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF04 DUP2 PUSH2 0xED0 JUMP JUMPDEST DUP2 EQ PUSH2 0xF0E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF1F DUP2 PUSH2 0xEFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF3A JUMPI PUSH2 0xF39 PUSH2 0xECC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF47 DUP5 DUP3 DUP6 ADD PUSH2 0xF11 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF64 DUP2 PUSH2 0xF50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF7D PUSH0 DUP4 ADD DUP5 PUSH2 0xF5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF95 DUP2 PUSH2 0xF83 JUMP JUMPDEST DUP2 EQ PUSH2 0xF9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB0 DUP2 PUSH2 0xF8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFCB JUMPI PUSH2 0xFCA PUSH2 0xECC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFD8 DUP5 DUP3 DUP6 ADD PUSH2 0xFA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFF3 DUP2 PUSH2 0xFE1 JUMP JUMPDEST DUP2 EQ PUSH2 0xFFD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x100E DUP2 PUSH2 0xFEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1029 JUMPI PUSH2 0x1028 PUSH2 0xECC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1036 DUP5 DUP3 DUP6 ADD PUSH2 0x1000 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1048 DUP2 PUSH2 0xFE1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1061 PUSH0 DUP4 ADD DUP5 PUSH2 0x103F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1090 DUP3 PUSH2 0x1067 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A0 DUP2 PUSH2 0x1086 JUMP JUMPDEST DUP2 EQ PUSH2 0x10AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10BB DUP2 PUSH2 0x1097 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10D7 JUMPI PUSH2 0x10D6 PUSH2 0xECC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10E4 DUP6 DUP3 DUP7 ADD PUSH2 0x1000 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10F5 DUP6 DUP3 DUP7 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1108 DUP2 PUSH2 0xF83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1117 DUP2 PUSH2 0xF50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1131 PUSH0 DUP6 ADD DUP3 PUSH2 0x10FF JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1144 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x10FF JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1157 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x110E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1170 PUSH0 DUP4 ADD DUP5 PUSH2 0x111D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x117F DUP2 PUSH2 0xF83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1198 PUSH0 DUP4 ADD DUP7 PUSH2 0x1176 JUMP JUMPDEST PUSH2 0x11A5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1176 JUMP JUMPDEST PUSH2 0x11B2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF5B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11CF JUMPI PUSH2 0x11CE PUSH2 0xECC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11DC DUP5 DUP3 DUP6 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11FB JUMPI PUSH2 0x11FA PUSH2 0xECC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1208 DUP6 DUP3 DUP7 ADD PUSH2 0xFA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1219 DUP6 DUP3 DUP7 ADD PUSH2 0xFA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x128D PUSH1 0x2F DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x1298 DUP3 PUSH2 0x1233 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12BA DUP2 PUSH2 0x1281 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D6520646F6573206E6F7420657869737400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12F5 PUSH1 0x13 DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x1300 DUP3 PUSH2 0x12C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1322 DUP2 PUSH2 0x12E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x133C PUSH0 DUP4 ADD DUP5 PUSH2 0x1176 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x47616D6520616C72656164792065786973740000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1376 PUSH1 0x12 DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x1381 DUP3 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13A3 DUP2 PUSH2 0x136A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13BD PUSH0 DUP4 ADD DUP6 PUSH2 0x1176 JUMP JUMPDEST PUSH2 0x13CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1176 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x140F PUSH1 0x17 DUP4 PUSH2 0x13D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x141A DUP3 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1447 DUP3 PUSH2 0x1425 JUMP JUMPDEST PUSH2 0x1451 DUP2 DUP6 PUSH2 0x13D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1461 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x142F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14A1 PUSH1 0x11 DUP4 PUSH2 0x13D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x14AC DUP3 PUSH2 0x146D JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14C1 DUP3 PUSH2 0x1403 JUMP JUMPDEST SWAP2 POP PUSH2 0x14CD DUP3 DUP6 PUSH2 0x143D JUMP JUMPDEST SWAP2 POP PUSH2 0x14D8 DUP3 PUSH2 0x1495 JUMP JUMPDEST SWAP2 POP PUSH2 0x14E4 DUP3 DUP5 PUSH2 0x143D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x150A DUP3 PUSH2 0x1425 JUMP JUMPDEST PUSH2 0x1514 DUP2 DUP6 PUSH2 0x1223 JUMP JUMPDEST SWAP4 POP PUSH2 0x1524 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x142F JUMP JUMPDEST PUSH2 0x152D DUP2 PUSH2 0x14F0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1550 DUP2 DUP5 PUSH2 0x1500 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x158F DUP3 PUSH2 0xF83 JUMP JUMPDEST SWAP2 POP PUSH2 0x159A DUP4 PUSH2 0xF83 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x15A8 DUP2 PUSH2 0xF83 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x15BF JUMPI PUSH2 0x15BE PUSH2 0x1558 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15D0 DUP3 PUSH2 0xF83 JUMP JUMPDEST SWAP2 POP PUSH2 0x15DB DUP4 PUSH2 0xF83 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15F3 JUMPI PUSH2 0x15F2 PUSH2 0x1558 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x165D DUP3 PUSH2 0xF83 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x166F JUMPI PUSH2 0x166E PUSH2 0x1558 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16AE PUSH1 0x20 DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x16B9 DUP3 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16DB DUP2 PUSH2 0x16A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 OR 0x24 EXTCODECOPY PUSH13 0xAC18E4E709B6ACC4D56DBE5787 DUP8 0xB6 0xDC 0x4B 0xD EXP BYTE DUP12 DUP1 0xA5 TSTORE PUSH19 0x917864736F6C634300081A0033000000000000 ",
							"sourceMap": "281:1874:0:-:0;;;697:117;;;;;;;;;;721:42;2072:4:1;732:18:0;;752:10;721;;;:42;;:::i;:::-;773:34;362:23;796:10;773;;;:34;;:::i;:::-;281:1874;;6811:110:1;6889:25;6900:4;6906:7;6889:10;;;:25;;:::i;:::-;6811:110;;:::o;7461:233::-;7544:22;7552:4;7558:7;7544;;;:22;;:::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;;;:12;;:::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;2895:145::-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;281:1874:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_10": {
									"entryPoint": 1567,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_225": {
									"entryPoint": 2049,
									"id": 225,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_290": {
									"entryPoint": 2551,
									"id": 290,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_329": {
									"entryPoint": 3014,
									"id": 329,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_481": {
									"entryPoint": 2571,
									"id": 481,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_676": {
									"entryPoint": 2789,
									"id": 676,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_512": {
									"entryPoint": 2796,
									"id": 512,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@gameDelete_162": {
									"entryPoint": 1653,
									"id": 162,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@gameInfos_22": {
									"entryPoint": 1603,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@gameRegister_115": {
									"entryPoint": 2055,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@gameUpdate_136": {
									"entryPoint": 1370,
									"id": 136,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getGameInfo_183": {
									"entryPoint": 1186,
									"id": 183,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_344": {
									"entryPoint": 994,
									"id": 344,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantAdminRole_66": {
									"entryPoint": 2355,
									"id": 66,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@grantRole_364": {
									"entryPoint": 1022,
									"id": 364,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_277": {
									"entryPoint": 1892,
									"id": 277,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isGameExists_196": {
									"entryPoint": 953,
									"id": 196,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceRole_407": {
									"entryPoint": 1055,
									"id": 407,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeAdminRole_80": {
									"entryPoint": 1991,
									"id": 80,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@revokeRole_384": {
									"entryPoint": 2413,
									"id": 384,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_258": {
									"entryPoint": 832,
									"id": 258,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_884": {
									"entryPoint": 2446,
									"id": 884,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_840": {
									"entryPoint": 3191,
									"id": 840,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_860": {
									"entryPoint": 3146,
									"id": 860,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 3857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 4116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 4289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 4366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 4159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c6926f1ebfa5ea8a7186ba2a57037cf093b0cb4f86e0150c483f8b4083a3d9d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_GameInfo_$17_memory_ptr_to_t_struct$_GameInfo_$17_memory_ptr_fromStack": {
									"entryPoint": 4381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5303,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 4174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6926f1ebfa5ea8a7186ba2a57037cf093b0cb4f86e0150c483f8b4083a3d9d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_GameInfo_$17_memory_ptr__to_t_struct$_GameInfo_$17_memory_ptr__fromStack_reversed": {
									"entryPoint": 4445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5034,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 4485,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5167,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 5715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5464,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5670,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5625,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3788,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a": {
									"entryPoint": 4801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c6926f1ebfa5ea8a7186ba2a57037cf093b0cb4f86e0150c483f8b4083a3d9d3": {
									"entryPoint": 4930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 5083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 5229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 4659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 4074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16714:9",
										"nodeType": "YulBlock",
										"src": "0:16714:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "378:105:9",
													"nodeType": "YulBlock",
													"src": "378:105:9",
													"statements": [
														{
															"nativeSrc": "388:89:9",
															"nodeType": "YulAssignment",
															"src": "388:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:9",
																		"nodeType": "YulLiteral",
																		"src": "410:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:9"
																},
																"nativeSrc": "399:78:9",
																"nodeType": "YulFunctionCall",
																"src": "399:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:9",
														"nodeType": "YulTypedName",
														"src": "360:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:9",
														"nodeType": "YulTypedName",
														"src": "370:7:9",
														"type": ""
													}
												],
												"src": "334:149:9"
											},
											{
												"body": {
													"nativeSrc": "531:78:9",
													"nodeType": "YulBlock",
													"src": "531:78:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:9",
																"nodeType": "YulBlock",
																"src": "587:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:9",
																					"nodeType": "YulLiteral",
																					"src": "596:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:9",
																					"nodeType": "YulLiteral",
																					"src": "599:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:9"
																			},
																			"nativeSrc": "589:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:9"
																		},
																		"nativeSrc": "589:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:9",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:9"
																				},
																				"nativeSrc": "561:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:9"
																		},
																		"nativeSrc": "551:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:9"
																},
																"nativeSrc": "544:42:9",
																"nodeType": "YulFunctionCall",
																"src": "544:42:9"
															},
															"nativeSrc": "541:62:9",
															"nodeType": "YulIf",
															"src": "541:62:9"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:9",
														"nodeType": "YulTypedName",
														"src": "524:5:9",
														"type": ""
													}
												],
												"src": "489:120:9"
											},
											{
												"body": {
													"nativeSrc": "666:86:9",
													"nodeType": "YulBlock",
													"src": "666:86:9",
													"statements": [
														{
															"nativeSrc": "676:29:9",
															"nodeType": "YulAssignment",
															"src": "676:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:9"
																},
																"nativeSrc": "685:20:9",
																"nodeType": "YulFunctionCall",
																"src": "685:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:9"
																},
																"nativeSrc": "714:32:9",
																"nodeType": "YulFunctionCall",
																"src": "714:32:9"
															},
															"nativeSrc": "714:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:9",
														"nodeType": "YulTypedName",
														"src": "644:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:9",
														"nodeType": "YulTypedName",
														"src": "652:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:9",
														"nodeType": "YulTypedName",
														"src": "660:5:9",
														"type": ""
													}
												],
												"src": "615:137:9"
											},
											{
												"body": {
													"nativeSrc": "823:262:9",
													"nodeType": "YulBlock",
													"src": "823:262:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:9",
																"nodeType": "YulBlock",
																"src": "869:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:9"
																			},
																			"nativeSrc": "871:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:9"
																		},
																		"nativeSrc": "871:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:9"
																		},
																		"nativeSrc": "840:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:9",
																		"nodeType": "YulLiteral",
																		"src": "865:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:9"
																},
																"nativeSrc": "836:32:9",
																"nodeType": "YulFunctionCall",
																"src": "836:32:9"
															},
															"nativeSrc": "833:119:9",
															"nodeType": "YulIf",
															"src": "833:119:9"
														},
														{
															"nativeSrc": "962:116:9",
															"nodeType": "YulBlock",
															"src": "962:116:9",
															"statements": [
																{
																	"nativeSrc": "977:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:9",
																		"nodeType": "YulLiteral",
																		"src": "991:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:9",
																			"nodeType": "YulTypedName",
																			"src": "981:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:9",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:9"
																				},
																				"nativeSrc": "1036:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:9",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:9"
																		},
																		"nativeSrc": "1016:52:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:9",
														"nodeType": "YulTypedName",
														"src": "793:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:9",
														"nodeType": "YulTypedName",
														"src": "804:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:9",
														"nodeType": "YulTypedName",
														"src": "816:6:9",
														"type": ""
													}
												],
												"src": "758:327:9"
											},
											{
												"body": {
													"nativeSrc": "1133:48:9",
													"nodeType": "YulBlock",
													"src": "1133:48:9",
													"statements": [
														{
															"nativeSrc": "1143:32:9",
															"nodeType": "YulAssignment",
															"src": "1143:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:9"
																		},
																		"nativeSrc": "1161:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:9"
																},
																"nativeSrc": "1154:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:9",
														"nodeType": "YulTypedName",
														"src": "1115:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:9",
														"nodeType": "YulTypedName",
														"src": "1125:7:9",
														"type": ""
													}
												],
												"src": "1091:90:9"
											},
											{
												"body": {
													"nativeSrc": "1246:50:9",
													"nodeType": "YulBlock",
													"src": "1246:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:9"
																		},
																		"nativeSrc": "1268:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:9"
																},
																"nativeSrc": "1256:34:9",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:9"
															},
															"nativeSrc": "1256:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:9",
														"nodeType": "YulTypedName",
														"src": "1234:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:9",
														"nodeType": "YulTypedName",
														"src": "1241:3:9",
														"type": ""
													}
												],
												"src": "1187:109:9"
											},
											{
												"body": {
													"nativeSrc": "1394:118:9",
													"nodeType": "YulBlock",
													"src": "1394:118:9",
													"statements": [
														{
															"nativeSrc": "1404:26:9",
															"nodeType": "YulAssignment",
															"src": "1404:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:9"
																},
																"nativeSrc": "1412:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:9"
																		},
																		"nativeSrc": "1487:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:9"
																},
																"nativeSrc": "1440:65:9",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:9"
															},
															"nativeSrc": "1440:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:9",
														"nodeType": "YulTypedName",
														"src": "1366:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:9",
														"nodeType": "YulTypedName",
														"src": "1378:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:9",
														"nodeType": "YulTypedName",
														"src": "1389:4:9",
														"type": ""
													}
												],
												"src": "1302:210:9"
											},
											{
												"body": {
													"nativeSrc": "1563:32:9",
													"nodeType": "YulBlock",
													"src": "1563:32:9",
													"statements": [
														{
															"nativeSrc": "1573:16:9",
															"nodeType": "YulAssignment",
															"src": "1573:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:9",
																"nodeType": "YulIdentifier",
																"src": "1584:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1518:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:9",
														"nodeType": "YulTypedName",
														"src": "1545:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:9",
														"nodeType": "YulTypedName",
														"src": "1555:7:9",
														"type": ""
													}
												],
												"src": "1518:77:9"
											},
											{
												"body": {
													"nativeSrc": "1644:79:9",
													"nodeType": "YulBlock",
													"src": "1644:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:9",
																"nodeType": "YulBlock",
																"src": "1701:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:9"
																			},
																			"nativeSrc": "1703:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:9"
																		},
																		"nativeSrc": "1703:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1674:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:9"
																				},
																				"nativeSrc": "1674:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:9"
																		},
																		"nativeSrc": "1664:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:9"
																},
																"nativeSrc": "1657:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:9"
															},
															"nativeSrc": "1654:63:9",
															"nodeType": "YulIf",
															"src": "1654:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1601:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:9",
														"nodeType": "YulTypedName",
														"src": "1637:5:9",
														"type": ""
													}
												],
												"src": "1601:122:9"
											},
											{
												"body": {
													"nativeSrc": "1781:87:9",
													"nodeType": "YulBlock",
													"src": "1781:87:9",
													"statements": [
														{
															"nativeSrc": "1791:29:9",
															"nodeType": "YulAssignment",
															"src": "1791:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:9"
																},
																"nativeSrc": "1800:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1829:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:9"
																},
																"nativeSrc": "1829:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:9"
															},
															"nativeSrc": "1829:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1729:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:9",
														"nodeType": "YulTypedName",
														"src": "1759:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:9",
														"nodeType": "YulTypedName",
														"src": "1767:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:9",
														"nodeType": "YulTypedName",
														"src": "1775:5:9",
														"type": ""
													}
												],
												"src": "1729:139:9"
											},
											{
												"body": {
													"nativeSrc": "1940:263:9",
													"nodeType": "YulBlock",
													"src": "1940:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1986:83:9",
																"nodeType": "YulBlock",
																"src": "1986:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1988:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:9"
																			},
																			"nativeSrc": "1988:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:9"
																		},
																		"nativeSrc": "1988:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1961:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1970:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1957:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:9"
																		},
																		"nativeSrc": "1957:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1953:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:9"
																},
																"nativeSrc": "1953:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1953:32:9"
															},
															"nativeSrc": "1950:119:9",
															"nodeType": "YulIf",
															"src": "1950:119:9"
														},
														{
															"nativeSrc": "2079:117:9",
															"nodeType": "YulBlock",
															"src": "2079:117:9",
															"statements": [
																{
																	"nativeSrc": "2094:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:9"
																				},
																				"nativeSrc": "2154:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2133:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:9"
																		},
																		"nativeSrc": "2133:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2123:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1874:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1910:9:9",
														"nodeType": "YulTypedName",
														"src": "1910:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1921:7:9",
														"nodeType": "YulTypedName",
														"src": "1921:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1933:6:9",
														"nodeType": "YulTypedName",
														"src": "1933:6:9",
														"type": ""
													}
												],
												"src": "1874:329:9"
											},
											{
												"body": {
													"nativeSrc": "2254:32:9",
													"nodeType": "YulBlock",
													"src": "2254:32:9",
													"statements": [
														{
															"nativeSrc": "2264:16:9",
															"nodeType": "YulAssignment",
															"src": "2264:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2275:5:9",
																"nodeType": "YulIdentifier",
																"src": "2275:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2264:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2264:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "2209:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2236:5:9",
														"nodeType": "YulTypedName",
														"src": "2236:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2246:7:9",
														"nodeType": "YulTypedName",
														"src": "2246:7:9",
														"type": ""
													}
												],
												"src": "2209:77:9"
											},
											{
												"body": {
													"nativeSrc": "2335:79:9",
													"nodeType": "YulBlock",
													"src": "2335:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2392:16:9",
																"nodeType": "YulBlock",
																"src": "2392:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2401:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2401:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2404:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2404:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2394:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2394:6:9"
																			},
																			"nativeSrc": "2394:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2394:12:9"
																		},
																		"nativeSrc": "2394:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2394:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2358:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2358:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2383:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2383:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "2365:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2365:17:9"
																				},
																				"nativeSrc": "2365:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2365:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2355:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2355:2:9"
																		},
																		"nativeSrc": "2355:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2355:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2348:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2348:6:9"
																},
																"nativeSrc": "2348:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2348:43:9"
															},
															"nativeSrc": "2345:63:9",
															"nodeType": "YulIf",
															"src": "2345:63:9"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "2292:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2328:5:9",
														"nodeType": "YulTypedName",
														"src": "2328:5:9",
														"type": ""
													}
												],
												"src": "2292:122:9"
											},
											{
												"body": {
													"nativeSrc": "2472:87:9",
													"nodeType": "YulBlock",
													"src": "2472:87:9",
													"statements": [
														{
															"nativeSrc": "2482:29:9",
															"nodeType": "YulAssignment",
															"src": "2482:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2504:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2504:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2491:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2491:12:9"
																},
																"nativeSrc": "2491:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2491:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2482:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2482:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2547:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2547:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "2520:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2520:26:9"
																},
																"nativeSrc": "2520:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2520:33:9"
															},
															"nativeSrc": "2520:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2520:33:9"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "2420:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2450:6:9",
														"nodeType": "YulTypedName",
														"src": "2450:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2458:3:9",
														"nodeType": "YulTypedName",
														"src": "2458:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2466:5:9",
														"nodeType": "YulTypedName",
														"src": "2466:5:9",
														"type": ""
													}
												],
												"src": "2420:139:9"
											},
											{
												"body": {
													"nativeSrc": "2631:263:9",
													"nodeType": "YulBlock",
													"src": "2631:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2677:83:9",
																"nodeType": "YulBlock",
																"src": "2677:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2679:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2679:77:9"
																			},
																			"nativeSrc": "2679:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2679:79:9"
																		},
																		"nativeSrc": "2679:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2679:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2652:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2661:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2661:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2648:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:9"
																		},
																		"nativeSrc": "2648:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2648:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2673:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2673:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2644:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:9"
																},
																"nativeSrc": "2644:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2644:32:9"
															},
															"nativeSrc": "2641:119:9",
															"nodeType": "YulIf",
															"src": "2641:119:9"
														},
														{
															"nativeSrc": "2770:117:9",
															"nodeType": "YulBlock",
															"src": "2770:117:9",
															"statements": [
																{
																	"nativeSrc": "2785:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2785:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2799:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2799:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2789:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2789:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2814:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2814:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2849:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2849:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2860:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2860:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2845:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2845:3:9"
																				},
																				"nativeSrc": "2845:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2845:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2869:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2869:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2824:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2824:20:9"
																		},
																		"nativeSrc": "2824:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2824:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2814:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2814:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "2565:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2601:9:9",
														"nodeType": "YulTypedName",
														"src": "2601:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2612:7:9",
														"nodeType": "YulTypedName",
														"src": "2612:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2624:6:9",
														"nodeType": "YulTypedName",
														"src": "2624:6:9",
														"type": ""
													}
												],
												"src": "2565:329:9"
											},
											{
												"body": {
													"nativeSrc": "2965:53:9",
													"nodeType": "YulBlock",
													"src": "2965:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2982:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2982:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3005:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3005:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2987:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "2987:17:9"
																		},
																		"nativeSrc": "2987:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2987:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2975:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:9"
																},
																"nativeSrc": "2975:37:9",
																"nodeType": "YulFunctionCall",
																"src": "2975:37:9"
															},
															"nativeSrc": "2975:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "2975:37:9"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2900:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2953:5:9",
														"nodeType": "YulTypedName",
														"src": "2953:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2960:3:9",
														"nodeType": "YulTypedName",
														"src": "2960:3:9",
														"type": ""
													}
												],
												"src": "2900:118:9"
											},
											{
												"body": {
													"nativeSrc": "3122:124:9",
													"nodeType": "YulBlock",
													"src": "3122:124:9",
													"statements": [
														{
															"nativeSrc": "3132:26:9",
															"nodeType": "YulAssignment",
															"src": "3132:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3144:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3144:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3155:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3155:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3140:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3140:3:9"
																},
																"nativeSrc": "3140:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3140:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3132:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3132:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3212:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3212:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3225:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3225:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3236:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3236:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3221:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3221:3:9"
																		},
																		"nativeSrc": "3221:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3221:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3168:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3168:43:9"
																},
																"nativeSrc": "3168:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3168:71:9"
															},
															"nativeSrc": "3168:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3168:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3024:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3094:9:9",
														"nodeType": "YulTypedName",
														"src": "3094:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3106:6:9",
														"nodeType": "YulTypedName",
														"src": "3106:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3117:4:9",
														"nodeType": "YulTypedName",
														"src": "3117:4:9",
														"type": ""
													}
												],
												"src": "3024:222:9"
											},
											{
												"body": {
													"nativeSrc": "3297:81:9",
													"nodeType": "YulBlock",
													"src": "3297:81:9",
													"statements": [
														{
															"nativeSrc": "3307:65:9",
															"nodeType": "YulAssignment",
															"src": "3307:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3322:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3322:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3329:42:9",
																		"nodeType": "YulLiteral",
																		"src": "3329:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3318:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3318:3:9"
																},
																"nativeSrc": "3318:54:9",
																"nodeType": "YulFunctionCall",
																"src": "3318:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3307:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3307:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3252:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3279:5:9",
														"nodeType": "YulTypedName",
														"src": "3279:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3289:7:9",
														"nodeType": "YulTypedName",
														"src": "3289:7:9",
														"type": ""
													}
												],
												"src": "3252:126:9"
											},
											{
												"body": {
													"nativeSrc": "3429:51:9",
													"nodeType": "YulBlock",
													"src": "3429:51:9",
													"statements": [
														{
															"nativeSrc": "3439:35:9",
															"nodeType": "YulAssignment",
															"src": "3439:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3468:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3468:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3450:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "3450:17:9"
																},
																"nativeSrc": "3450:24:9",
																"nodeType": "YulFunctionCall",
																"src": "3450:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3439:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3439:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3384:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3411:5:9",
														"nodeType": "YulTypedName",
														"src": "3411:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3421:7:9",
														"nodeType": "YulTypedName",
														"src": "3421:7:9",
														"type": ""
													}
												],
												"src": "3384:96:9"
											},
											{
												"body": {
													"nativeSrc": "3529:79:9",
													"nodeType": "YulBlock",
													"src": "3529:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3586:16:9",
																"nodeType": "YulBlock",
																"src": "3586:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3595:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3595:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3598:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3598:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3588:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3588:6:9"
																			},
																			"nativeSrc": "3588:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3588:12:9"
																		},
																		"nativeSrc": "3588:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3588:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3552:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3552:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3577:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3577:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3559:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3559:17:9"
																				},
																				"nativeSrc": "3559:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3559:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3549:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3549:2:9"
																		},
																		"nativeSrc": "3549:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3549:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3542:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3542:6:9"
																},
																"nativeSrc": "3542:43:9",
																"nodeType": "YulFunctionCall",
																"src": "3542:43:9"
															},
															"nativeSrc": "3539:63:9",
															"nodeType": "YulIf",
															"src": "3539:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3486:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3522:5:9",
														"nodeType": "YulTypedName",
														"src": "3522:5:9",
														"type": ""
													}
												],
												"src": "3486:122:9"
											},
											{
												"body": {
													"nativeSrc": "3666:87:9",
													"nodeType": "YulBlock",
													"src": "3666:87:9",
													"statements": [
														{
															"nativeSrc": "3676:29:9",
															"nodeType": "YulAssignment",
															"src": "3676:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3698:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3698:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3685:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3685:12:9"
																},
																"nativeSrc": "3685:20:9",
																"nodeType": "YulFunctionCall",
																"src": "3685:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3676:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3676:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3741:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3741:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3714:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3714:26:9"
																},
																"nativeSrc": "3714:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3714:33:9"
															},
															"nativeSrc": "3714:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3714:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3614:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3644:6:9",
														"nodeType": "YulTypedName",
														"src": "3644:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3652:3:9",
														"nodeType": "YulTypedName",
														"src": "3652:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3660:5:9",
														"nodeType": "YulTypedName",
														"src": "3660:5:9",
														"type": ""
													}
												],
												"src": "3614:139:9"
											},
											{
												"body": {
													"nativeSrc": "3842:391:9",
													"nodeType": "YulBlock",
													"src": "3842:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3888:83:9",
																"nodeType": "YulBlock",
																"src": "3888:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3890:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3890:77:9"
																			},
																			"nativeSrc": "3890:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3890:79:9"
																		},
																		"nativeSrc": "3890:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3890:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3863:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3863:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3872:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3872:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3859:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:9"
																		},
																		"nativeSrc": "3859:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3859:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3884:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3884:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3855:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3855:3:9"
																},
																"nativeSrc": "3855:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3855:32:9"
															},
															"nativeSrc": "3852:119:9",
															"nodeType": "YulIf",
															"src": "3852:119:9"
														},
														{
															"nativeSrc": "3981:117:9",
															"nodeType": "YulBlock",
															"src": "3981:117:9",
															"statements": [
																{
																	"nativeSrc": "3996:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3996:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4010:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4010:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4000:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4000:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4025:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4025:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4060:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4060:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4071:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4071:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4056:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4056:3:9"
																				},
																				"nativeSrc": "4056:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4056:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4080:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4080:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4035:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4035:20:9"
																		},
																		"nativeSrc": "4035:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4035:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4025:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4025:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4108:118:9",
															"nodeType": "YulBlock",
															"src": "4108:118:9",
															"statements": [
																{
																	"nativeSrc": "4123:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4123:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4137:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4137:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4127:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4127:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4153:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4153:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4188:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4188:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4199:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4199:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4184:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4184:3:9"
																				},
																				"nativeSrc": "4184:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4184:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4208:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4208:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4163:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4163:20:9"
																		},
																		"nativeSrc": "4163:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4163:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4153:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4153:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3759:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3804:9:9",
														"nodeType": "YulTypedName",
														"src": "3804:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3815:7:9",
														"nodeType": "YulTypedName",
														"src": "3815:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3827:6:9",
														"nodeType": "YulTypedName",
														"src": "3827:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3835:6:9",
														"nodeType": "YulTypedName",
														"src": "3835:6:9",
														"type": ""
													}
												],
												"src": "3759:474:9"
											},
											{
												"body": {
													"nativeSrc": "4294:53:9",
													"nodeType": "YulBlock",
													"src": "4294:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4311:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4311:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4334:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4334:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4316:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "4316:17:9"
																		},
																		"nativeSrc": "4316:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4316:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4304:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4304:6:9"
																},
																"nativeSrc": "4304:37:9",
																"nodeType": "YulFunctionCall",
																"src": "4304:37:9"
															},
															"nativeSrc": "4304:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "4304:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "4239:108:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4282:5:9",
														"nodeType": "YulTypedName",
														"src": "4282:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4289:3:9",
														"nodeType": "YulTypedName",
														"src": "4289:3:9",
														"type": ""
													}
												],
												"src": "4239:108:9"
											},
											{
												"body": {
													"nativeSrc": "4402:50:9",
													"nodeType": "YulBlock",
													"src": "4402:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4419:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4419:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4439:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4439:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4424:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "4424:14:9"
																		},
																		"nativeSrc": "4424:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4424:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4412:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4412:6:9"
																},
																"nativeSrc": "4412:34:9",
																"nodeType": "YulFunctionCall",
																"src": "4412:34:9"
															},
															"nativeSrc": "4412:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "4412:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "4353:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4390:5:9",
														"nodeType": "YulTypedName",
														"src": "4390:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4397:3:9",
														"nodeType": "YulTypedName",
														"src": "4397:3:9",
														"type": ""
													}
												],
												"src": "4353:99:9"
											},
											{
												"body": {
													"nativeSrc": "4638:569:9",
													"nodeType": "YulBlock",
													"src": "4638:569:9",
													"statements": [
														{
															"nativeSrc": "4648:26:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4648:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4664:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4664:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4669:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4669:4:9",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4660:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4660:3:9"
																},
																"nativeSrc": "4660:14:9",
																"nodeType": "YulFunctionCall",
																"src": "4660:14:9"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "4652:4:9",
																	"nodeType": "YulTypedName",
																	"src": "4652:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4684:167:9",
															"nodeType": "YulBlock",
															"src": "4684:167:9",
															"statements": [
																{
																	"nativeSrc": "4722:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4722:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4752:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4752:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4759:4:9",
																						"nodeType": "YulLiteral",
																						"src": "4759:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4748:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4748:3:9"
																				},
																				"nativeSrc": "4748:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4748:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4742:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4742:5:9"
																		},
																		"nativeSrc": "4742:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4742:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4726:12:9",
																			"nodeType": "YulTypedName",
																			"src": "4726:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4812:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "4812:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4830:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "4830:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4835:4:9",
																						"nodeType": "YulLiteral",
																						"src": "4835:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4826:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4826:3:9"
																				},
																				"nativeSrc": "4826:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4826:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4778:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "4778:33:9"
																		},
																		"nativeSrc": "4778:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4778:63:9"
																	},
																	"nativeSrc": "4778:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "4778:63:9"
																}
															]
														},
														{
															"nativeSrc": "4861:169:9",
															"nodeType": "YulBlock",
															"src": "4861:169:9",
															"statements": [
																{
																	"nativeSrc": "4901:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4901:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4931:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4931:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4938:4:9",
																						"nodeType": "YulLiteral",
																						"src": "4938:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4927:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4927:3:9"
																				},
																				"nativeSrc": "4927:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4927:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4921:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4921:5:9"
																		},
																		"nativeSrc": "4921:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4921:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4905:12:9",
																			"nodeType": "YulTypedName",
																			"src": "4905:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4991:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "4991:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5009:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5009:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5014:4:9",
																						"nodeType": "YulLiteral",
																						"src": "5014:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5005:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5005:3:9"
																				},
																				"nativeSrc": "5005:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5005:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4957:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "4957:33:9"
																		},
																		"nativeSrc": "4957:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4957:63:9"
																	},
																	"nativeSrc": "4957:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "4957:63:9"
																}
															]
														},
														{
															"nativeSrc": "5040:160:9",
															"nodeType": "YulBlock",
															"src": "5040:160:9",
															"statements": [
																{
																	"nativeSrc": "5077:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5077:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5107:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5107:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5114:4:9",
																						"nodeType": "YulLiteral",
																						"src": "5114:4:9",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5103:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5103:3:9"
																				},
																				"nativeSrc": "5103:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5103:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5097:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5097:5:9"
																		},
																		"nativeSrc": "5097:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5097:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5081:12:9",
																			"nodeType": "YulTypedName",
																			"src": "5081:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5161:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "5161:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5179:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5179:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5184:4:9",
																						"nodeType": "YulLiteral",
																						"src": "5184:4:9",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5175:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5175:3:9"
																				},
																				"nativeSrc": "5175:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5175:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "5133:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "5133:27:9"
																		},
																		"nativeSrc": "5133:57:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5133:57:9"
																	},
																	"nativeSrc": "5133:57:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "5133:57:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_GameInfo_$17_memory_ptr_to_t_struct$_GameInfo_$17_memory_ptr_fromStack",
												"nativeSrc": "4524:683:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4625:5:9",
														"nodeType": "YulTypedName",
														"src": "4625:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4632:3:9",
														"nodeType": "YulTypedName",
														"src": "4632:3:9",
														"type": ""
													}
												],
												"src": "4524:683:9"
											},
											{
												"body": {
													"nativeSrc": "5359:172:9",
													"nodeType": "YulBlock",
													"src": "5359:172:9",
													"statements": [
														{
															"nativeSrc": "5369:26:9",
															"nodeType": "YulAssignment",
															"src": "5369:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5381:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5381:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5392:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5392:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5377:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5377:3:9"
																},
																"nativeSrc": "5377:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5377:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5369:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5369:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5497:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5497:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5510:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5510:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5521:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5521:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5506:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5506:3:9"
																		},
																		"nativeSrc": "5506:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5506:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_GameInfo_$17_memory_ptr_to_t_struct$_GameInfo_$17_memory_ptr_fromStack",
																	"nativeSrc": "5405:91:9",
																	"nodeType": "YulIdentifier",
																	"src": "5405:91:9"
																},
																"nativeSrc": "5405:119:9",
																"nodeType": "YulFunctionCall",
																"src": "5405:119:9"
															},
															"nativeSrc": "5405:119:9",
															"nodeType": "YulExpressionStatement",
															"src": "5405:119:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_GameInfo_$17_memory_ptr__to_t_struct$_GameInfo_$17_memory_ptr__fromStack_reversed",
												"nativeSrc": "5213:318:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5331:9:9",
														"nodeType": "YulTypedName",
														"src": "5331:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5343:6:9",
														"nodeType": "YulTypedName",
														"src": "5343:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5354:4:9",
														"nodeType": "YulTypedName",
														"src": "5354:4:9",
														"type": ""
													}
												],
												"src": "5213:318:9"
											},
											{
												"body": {
													"nativeSrc": "5602:53:9",
													"nodeType": "YulBlock",
													"src": "5602:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5619:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5619:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5642:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5642:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5624:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5624:17:9"
																		},
																		"nativeSrc": "5624:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5624:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5612:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5612:6:9"
																},
																"nativeSrc": "5612:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5612:37:9"
															},
															"nativeSrc": "5612:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5612:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5537:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5590:5:9",
														"nodeType": "YulTypedName",
														"src": "5590:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5597:3:9",
														"nodeType": "YulTypedName",
														"src": "5597:3:9",
														"type": ""
													}
												],
												"src": "5537:118:9"
											},
											{
												"body": {
													"nativeSrc": "5809:282:9",
													"nodeType": "YulBlock",
													"src": "5809:282:9",
													"statements": [
														{
															"nativeSrc": "5819:26:9",
															"nodeType": "YulAssignment",
															"src": "5819:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5831:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5831:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5842:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5842:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5827:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5827:3:9"
																},
																"nativeSrc": "5827:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5827:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5819:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5819:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5899:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5899:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5912:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5912:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5923:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5923:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5908:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5908:3:9"
																		},
																		"nativeSrc": "5908:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5908:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5855:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5855:43:9"
																},
																"nativeSrc": "5855:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5855:71:9"
															},
															"nativeSrc": "5855:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5855:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5980:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5980:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5993:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5993:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6004:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6004:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5989:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5989:3:9"
																		},
																		"nativeSrc": "5989:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5989:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5936:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5936:43:9"
																},
																"nativeSrc": "5936:72:9",
																"nodeType": "YulFunctionCall",
																"src": "5936:72:9"
															},
															"nativeSrc": "5936:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "5936:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6056:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6056:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6069:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6069:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6080:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6080:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6065:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6065:3:9"
																		},
																		"nativeSrc": "6065:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6065:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "6018:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "6018:37:9"
																},
																"nativeSrc": "6018:66:9",
																"nodeType": "YulFunctionCall",
																"src": "6018:66:9"
															},
															"nativeSrc": "6018:66:9",
															"nodeType": "YulExpressionStatement",
															"src": "6018:66:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "5661:430:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5765:9:9",
														"nodeType": "YulTypedName",
														"src": "5765:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5777:6:9",
														"nodeType": "YulTypedName",
														"src": "5777:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5785:6:9",
														"nodeType": "YulTypedName",
														"src": "5785:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5793:6:9",
														"nodeType": "YulTypedName",
														"src": "5793:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5804:4:9",
														"nodeType": "YulTypedName",
														"src": "5804:4:9",
														"type": ""
													}
												],
												"src": "5661:430:9"
											},
											{
												"body": {
													"nativeSrc": "6163:263:9",
													"nodeType": "YulBlock",
													"src": "6163:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6209:83:9",
																"nodeType": "YulBlock",
																"src": "6209:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6211:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6211:77:9"
																			},
																			"nativeSrc": "6211:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6211:79:9"
																		},
																		"nativeSrc": "6211:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6211:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6184:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6184:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6193:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6193:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6180:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6180:3:9"
																		},
																		"nativeSrc": "6180:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6180:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6205:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6205:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6176:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6176:3:9"
																},
																"nativeSrc": "6176:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6176:32:9"
															},
															"nativeSrc": "6173:119:9",
															"nodeType": "YulIf",
															"src": "6173:119:9"
														},
														{
															"nativeSrc": "6302:117:9",
															"nodeType": "YulBlock",
															"src": "6302:117:9",
															"statements": [
																{
																	"nativeSrc": "6317:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6317:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6331:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6331:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6321:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6321:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6346:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6346:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6381:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6381:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6392:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6392:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6377:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6377:3:9"
																				},
																				"nativeSrc": "6377:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6377:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6401:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6401:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6356:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6356:20:9"
																		},
																		"nativeSrc": "6356:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6356:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6346:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6346:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6097:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6133:9:9",
														"nodeType": "YulTypedName",
														"src": "6133:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6144:7:9",
														"nodeType": "YulTypedName",
														"src": "6144:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6156:6:9",
														"nodeType": "YulTypedName",
														"src": "6156:6:9",
														"type": ""
													}
												],
												"src": "6097:329:9"
											},
											{
												"body": {
													"nativeSrc": "6515:391:9",
													"nodeType": "YulBlock",
													"src": "6515:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6561:83:9",
																"nodeType": "YulBlock",
																"src": "6561:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6563:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6563:77:9"
																			},
																			"nativeSrc": "6563:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6563:79:9"
																		},
																		"nativeSrc": "6563:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6563:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6536:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6536:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6545:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6545:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6532:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6532:3:9"
																		},
																		"nativeSrc": "6532:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6532:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6557:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6557:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6528:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6528:3:9"
																},
																"nativeSrc": "6528:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6528:32:9"
															},
															"nativeSrc": "6525:119:9",
															"nodeType": "YulIf",
															"src": "6525:119:9"
														},
														{
															"nativeSrc": "6654:117:9",
															"nodeType": "YulBlock",
															"src": "6654:117:9",
															"statements": [
																{
																	"nativeSrc": "6669:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6669:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6683:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6683:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6673:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6673:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6698:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6698:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6733:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6733:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6744:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6744:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6729:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6729:3:9"
																				},
																				"nativeSrc": "6729:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6729:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6753:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6753:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6708:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6708:20:9"
																		},
																		"nativeSrc": "6708:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6708:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6698:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6698:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6781:118:9",
															"nodeType": "YulBlock",
															"src": "6781:118:9",
															"statements": [
																{
																	"nativeSrc": "6796:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6796:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6810:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6810:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6800:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6800:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6826:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6826:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6861:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6861:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6872:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6872:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6857:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6857:3:9"
																				},
																				"nativeSrc": "6857:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6857:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6881:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6881:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6836:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6836:20:9"
																		},
																		"nativeSrc": "6836:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6836:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6826:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6826:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "6432:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6477:9:9",
														"nodeType": "YulTypedName",
														"src": "6477:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6488:7:9",
														"nodeType": "YulTypedName",
														"src": "6488:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6500:6:9",
														"nodeType": "YulTypedName",
														"src": "6500:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6508:6:9",
														"nodeType": "YulTypedName",
														"src": "6508:6:9",
														"type": ""
													}
												],
												"src": "6432:474:9"
											},
											{
												"body": {
													"nativeSrc": "7008:73:9",
													"nodeType": "YulBlock",
													"src": "7008:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7025:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7025:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7030:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7030:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7018:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7018:6:9"
																},
																"nativeSrc": "7018:19:9",
																"nodeType": "YulFunctionCall",
																"src": "7018:19:9"
															},
															"nativeSrc": "7018:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "7018:19:9"
														},
														{
															"nativeSrc": "7046:29:9",
															"nodeType": "YulAssignment",
															"src": "7046:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7065:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7065:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7070:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7070:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7061:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7061:3:9"
																},
																"nativeSrc": "7061:14:9",
																"nodeType": "YulFunctionCall",
																"src": "7061:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7046:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "7046:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6912:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6980:3:9",
														"nodeType": "YulTypedName",
														"src": "6980:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6985:6:9",
														"nodeType": "YulTypedName",
														"src": "6985:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6996:11:9",
														"nodeType": "YulTypedName",
														"src": "6996:11:9",
														"type": ""
													}
												],
												"src": "6912:169:9"
											},
											{
												"body": {
													"nativeSrc": "7193:128:9",
													"nodeType": "YulBlock",
													"src": "7193:128:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7215:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7215:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7223:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7223:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7211:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7211:3:9"
																		},
																		"nativeSrc": "7211:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7211:14:9"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nativeSrc": "7227:34:9",
																		"nodeType": "YulLiteral",
																		"src": "7227:34:9",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7204:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7204:6:9"
																},
																"nativeSrc": "7204:58:9",
																"nodeType": "YulFunctionCall",
																"src": "7204:58:9"
															},
															"nativeSrc": "7204:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "7204:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7283:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7283:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7291:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7291:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7279:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7279:3:9"
																		},
																		"nativeSrc": "7279:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7279:15:9"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nativeSrc": "7296:17:9",
																		"nodeType": "YulLiteral",
																		"src": "7296:17:9",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7272:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7272:6:9"
																},
																"nativeSrc": "7272:42:9",
																"nodeType": "YulFunctionCall",
																"src": "7272:42:9"
															},
															"nativeSrc": "7272:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "7272:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nativeSrc": "7087:234:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7185:6:9",
														"nodeType": "YulTypedName",
														"src": "7185:6:9",
														"type": ""
													}
												],
												"src": "7087:234:9"
											},
											{
												"body": {
													"nativeSrc": "7473:220:9",
													"nodeType": "YulBlock",
													"src": "7473:220:9",
													"statements": [
														{
															"nativeSrc": "7483:74:9",
															"nodeType": "YulAssignment",
															"src": "7483:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7549:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7549:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7554:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7554:2:9",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7490:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "7490:58:9"
																},
																"nativeSrc": "7490:67:9",
																"nodeType": "YulFunctionCall",
																"src": "7490:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7483:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7483:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7655:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7655:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nativeSrc": "7566:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "7566:88:9"
																},
																"nativeSrc": "7566:93:9",
																"nodeType": "YulFunctionCall",
																"src": "7566:93:9"
															},
															"nativeSrc": "7566:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "7566:93:9"
														},
														{
															"nativeSrc": "7668:19:9",
															"nodeType": "YulAssignment",
															"src": "7668:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7679:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7679:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7684:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7684:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7675:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7675:3:9"
																},
																"nativeSrc": "7675:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7675:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7668:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7668:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7327:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7461:3:9",
														"nodeType": "YulTypedName",
														"src": "7461:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7469:3:9",
														"nodeType": "YulTypedName",
														"src": "7469:3:9",
														"type": ""
													}
												],
												"src": "7327:366:9"
											},
											{
												"body": {
													"nativeSrc": "7870:248:9",
													"nodeType": "YulBlock",
													"src": "7870:248:9",
													"statements": [
														{
															"nativeSrc": "7880:26:9",
															"nodeType": "YulAssignment",
															"src": "7880:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7892:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7892:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7903:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7903:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7888:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7888:3:9"
																},
																"nativeSrc": "7888:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7888:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7880:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7880:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7927:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7927:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7938:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7938:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7923:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7923:3:9"
																		},
																		"nativeSrc": "7923:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7923:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7946:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7946:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7952:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7952:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7942:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7942:3:9"
																		},
																		"nativeSrc": "7942:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7942:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7916:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7916:6:9"
																},
																"nativeSrc": "7916:47:9",
																"nodeType": "YulFunctionCall",
																"src": "7916:47:9"
															},
															"nativeSrc": "7916:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "7916:47:9"
														},
														{
															"nativeSrc": "7972:139:9",
															"nodeType": "YulAssignment",
															"src": "7972:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8106:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8106:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7980:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "7980:124:9"
																},
																"nativeSrc": "7980:131:9",
																"nodeType": "YulFunctionCall",
																"src": "7980:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7972:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7972:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7699:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7850:9:9",
														"nodeType": "YulTypedName",
														"src": "7850:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7865:4:9",
														"nodeType": "YulTypedName",
														"src": "7865:4:9",
														"type": ""
													}
												],
												"src": "7699:419:9"
											},
											{
												"body": {
													"nativeSrc": "8230:63:9",
													"nodeType": "YulBlock",
													"src": "8230:63:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8252:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8252:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8260:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8260:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8248:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8248:3:9"
																		},
																		"nativeSrc": "8248:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8248:14:9"
																	},
																	{
																		"hexValue": "47616d6520646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "8264:21:9",
																		"nodeType": "YulLiteral",
																		"src": "8264:21:9",
																		"type": "",
																		"value": "Game does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8241:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8241:6:9"
																},
																"nativeSrc": "8241:45:9",
																"nodeType": "YulFunctionCall",
																"src": "8241:45:9"
															},
															"nativeSrc": "8241:45:9",
															"nodeType": "YulExpressionStatement",
															"src": "8241:45:9"
														}
													]
												},
												"name": "store_literal_in_memory_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a",
												"nativeSrc": "8124:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8222:6:9",
														"nodeType": "YulTypedName",
														"src": "8222:6:9",
														"type": ""
													}
												],
												"src": "8124:169:9"
											},
											{
												"body": {
													"nativeSrc": "8445:220:9",
													"nodeType": "YulBlock",
													"src": "8445:220:9",
													"statements": [
														{
															"nativeSrc": "8455:74:9",
															"nodeType": "YulAssignment",
															"src": "8455:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8521:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8521:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8526:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8526:2:9",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8462:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "8462:58:9"
																},
																"nativeSrc": "8462:67:9",
																"nodeType": "YulFunctionCall",
																"src": "8462:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8455:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8455:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8627:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8627:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a",
																	"nativeSrc": "8538:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "8538:88:9"
																},
																"nativeSrc": "8538:93:9",
																"nodeType": "YulFunctionCall",
																"src": "8538:93:9"
															},
															"nativeSrc": "8538:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "8538:93:9"
														},
														{
															"nativeSrc": "8640:19:9",
															"nodeType": "YulAssignment",
															"src": "8640:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8651:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8651:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8656:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8656:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8647:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8647:3:9"
																},
																"nativeSrc": "8647:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8647:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8640:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8640:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8299:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8433:3:9",
														"nodeType": "YulTypedName",
														"src": "8433:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8441:3:9",
														"nodeType": "YulTypedName",
														"src": "8441:3:9",
														"type": ""
													}
												],
												"src": "8299:366:9"
											},
											{
												"body": {
													"nativeSrc": "8842:248:9",
													"nodeType": "YulBlock",
													"src": "8842:248:9",
													"statements": [
														{
															"nativeSrc": "8852:26:9",
															"nodeType": "YulAssignment",
															"src": "8852:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8864:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8864:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8875:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8875:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8860:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8860:3:9"
																},
																"nativeSrc": "8860:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8860:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8852:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8852:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8899:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8899:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8910:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8910:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8895:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8895:3:9"
																		},
																		"nativeSrc": "8895:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8895:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8918:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8918:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8924:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8924:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8914:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8914:3:9"
																		},
																		"nativeSrc": "8914:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8914:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8888:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8888:6:9"
																},
																"nativeSrc": "8888:47:9",
																"nodeType": "YulFunctionCall",
																"src": "8888:47:9"
															},
															"nativeSrc": "8888:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "8888:47:9"
														},
														{
															"nativeSrc": "8944:139:9",
															"nodeType": "YulAssignment",
															"src": "8944:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9078:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9078:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8952:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "8952:124:9"
																},
																"nativeSrc": "8952:131:9",
																"nodeType": "YulFunctionCall",
																"src": "8952:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8944:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8944:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8671:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8822:9:9",
														"nodeType": "YulTypedName",
														"src": "8822:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8837:4:9",
														"nodeType": "YulTypedName",
														"src": "8837:4:9",
														"type": ""
													}
												],
												"src": "8671:419:9"
											},
											{
												"body": {
													"nativeSrc": "9194:124:9",
													"nodeType": "YulBlock",
													"src": "9194:124:9",
													"statements": [
														{
															"nativeSrc": "9204:26:9",
															"nodeType": "YulAssignment",
															"src": "9204:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9216:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9216:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9227:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9227:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9212:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9212:3:9"
																},
																"nativeSrc": "9212:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9212:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9204:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9204:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9284:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9284:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9297:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9297:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9308:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9308:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9293:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9293:3:9"
																		},
																		"nativeSrc": "9293:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9293:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9240:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9240:43:9"
																},
																"nativeSrc": "9240:71:9",
																"nodeType": "YulFunctionCall",
																"src": "9240:71:9"
															},
															"nativeSrc": "9240:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "9240:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9096:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9166:9:9",
														"nodeType": "YulTypedName",
														"src": "9166:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9178:6:9",
														"nodeType": "YulTypedName",
														"src": "9178:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9189:4:9",
														"nodeType": "YulTypedName",
														"src": "9189:4:9",
														"type": ""
													}
												],
												"src": "9096:222:9"
											},
											{
												"body": {
													"nativeSrc": "9430:62:9",
													"nodeType": "YulBlock",
													"src": "9430:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9452:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9452:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9460:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9460:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9448:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9448:3:9"
																		},
																		"nativeSrc": "9448:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9448:14:9"
																	},
																	{
																		"hexValue": "47616d6520616c7265616479206578697374",
																		"kind": "string",
																		"nativeSrc": "9464:20:9",
																		"nodeType": "YulLiteral",
																		"src": "9464:20:9",
																		"type": "",
																		"value": "Game already exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9441:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9441:6:9"
																},
																"nativeSrc": "9441:44:9",
																"nodeType": "YulFunctionCall",
																"src": "9441:44:9"
															},
															"nativeSrc": "9441:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "9441:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_c6926f1ebfa5ea8a7186ba2a57037cf093b0cb4f86e0150c483f8b4083a3d9d3",
												"nativeSrc": "9324:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9422:6:9",
														"nodeType": "YulTypedName",
														"src": "9422:6:9",
														"type": ""
													}
												],
												"src": "9324:168:9"
											},
											{
												"body": {
													"nativeSrc": "9644:220:9",
													"nodeType": "YulBlock",
													"src": "9644:220:9",
													"statements": [
														{
															"nativeSrc": "9654:74:9",
															"nodeType": "YulAssignment",
															"src": "9654:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9720:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9720:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9725:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9725:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9661:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9661:58:9"
																},
																"nativeSrc": "9661:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9661:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9654:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9654:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9826:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9826:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c6926f1ebfa5ea8a7186ba2a57037cf093b0cb4f86e0150c483f8b4083a3d9d3",
																	"nativeSrc": "9737:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "9737:88:9"
																},
																"nativeSrc": "9737:93:9",
																"nodeType": "YulFunctionCall",
																"src": "9737:93:9"
															},
															"nativeSrc": "9737:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "9737:93:9"
														},
														{
															"nativeSrc": "9839:19:9",
															"nodeType": "YulAssignment",
															"src": "9839:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9850:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9850:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9855:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9855:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9846:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9846:3:9"
																},
																"nativeSrc": "9846:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9846:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9839:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9839:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c6926f1ebfa5ea8a7186ba2a57037cf093b0cb4f86e0150c483f8b4083a3d9d3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9498:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9632:3:9",
														"nodeType": "YulTypedName",
														"src": "9632:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9640:3:9",
														"nodeType": "YulTypedName",
														"src": "9640:3:9",
														"type": ""
													}
												],
												"src": "9498:366:9"
											},
											{
												"body": {
													"nativeSrc": "10041:248:9",
													"nodeType": "YulBlock",
													"src": "10041:248:9",
													"statements": [
														{
															"nativeSrc": "10051:26:9",
															"nodeType": "YulAssignment",
															"src": "10051:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10063:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10063:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10074:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10074:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10059:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10059:3:9"
																},
																"nativeSrc": "10059:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10059:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10051:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10051:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10098:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10098:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10109:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10109:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10094:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10094:3:9"
																		},
																		"nativeSrc": "10094:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10094:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10117:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10117:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10123:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10123:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10113:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10113:3:9"
																		},
																		"nativeSrc": "10113:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10113:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10087:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10087:6:9"
																},
																"nativeSrc": "10087:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10087:47:9"
															},
															"nativeSrc": "10087:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10087:47:9"
														},
														{
															"nativeSrc": "10143:139:9",
															"nodeType": "YulAssignment",
															"src": "10143:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10277:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10277:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c6926f1ebfa5ea8a7186ba2a57037cf093b0cb4f86e0150c483f8b4083a3d9d3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10151:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "10151:124:9"
																},
																"nativeSrc": "10151:131:9",
																"nodeType": "YulFunctionCall",
																"src": "10151:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10143:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10143:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6926f1ebfa5ea8a7186ba2a57037cf093b0cb4f86e0150c483f8b4083a3d9d3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9870:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10021:9:9",
														"nodeType": "YulTypedName",
														"src": "10021:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10036:4:9",
														"nodeType": "YulTypedName",
														"src": "10036:4:9",
														"type": ""
													}
												],
												"src": "9870:419:9"
											},
											{
												"body": {
													"nativeSrc": "10421:206:9",
													"nodeType": "YulBlock",
													"src": "10421:206:9",
													"statements": [
														{
															"nativeSrc": "10431:26:9",
															"nodeType": "YulAssignment",
															"src": "10431:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10443:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10443:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10454:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10454:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10439:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10439:3:9"
																},
																"nativeSrc": "10439:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10439:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10431:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10431:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10511:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10511:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10524:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10524:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10535:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10535:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10520:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10520:3:9"
																		},
																		"nativeSrc": "10520:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10520:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10467:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10467:43:9"
																},
																"nativeSrc": "10467:71:9",
																"nodeType": "YulFunctionCall",
																"src": "10467:71:9"
															},
															"nativeSrc": "10467:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "10467:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10592:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10592:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10605:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10605:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10616:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10616:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10601:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10601:3:9"
																		},
																		"nativeSrc": "10601:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10601:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10548:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10548:43:9"
																},
																"nativeSrc": "10548:72:9",
																"nodeType": "YulFunctionCall",
																"src": "10548:72:9"
															},
															"nativeSrc": "10548:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "10548:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10295:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10385:9:9",
														"nodeType": "YulTypedName",
														"src": "10385:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10397:6:9",
														"nodeType": "YulTypedName",
														"src": "10397:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10405:6:9",
														"nodeType": "YulTypedName",
														"src": "10405:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10416:4:9",
														"nodeType": "YulTypedName",
														"src": "10416:4:9",
														"type": ""
													}
												],
												"src": "10295:332:9"
											},
											{
												"body": {
													"nativeSrc": "10747:34:9",
													"nodeType": "YulBlock",
													"src": "10747:34:9",
													"statements": [
														{
															"nativeSrc": "10757:18:9",
															"nodeType": "YulAssignment",
															"src": "10757:18:9",
															"value": {
																"name": "pos",
																"nativeSrc": "10772:3:9",
																"nodeType": "YulIdentifier",
																"src": "10772:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10757:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "10757:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10633:148:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10719:3:9",
														"nodeType": "YulTypedName",
														"src": "10719:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10724:6:9",
														"nodeType": "YulTypedName",
														"src": "10724:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10735:11:9",
														"nodeType": "YulTypedName",
														"src": "10735:11:9",
														"type": ""
													}
												],
												"src": "10633:148:9"
											},
											{
												"body": {
													"nativeSrc": "10893:67:9",
													"nodeType": "YulBlock",
													"src": "10893:67:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10915:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10915:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10923:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10923:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10911:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10911:3:9"
																		},
																		"nativeSrc": "10911:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10911:14:9"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nativeSrc": "10927:25:9",
																		"nodeType": "YulLiteral",
																		"src": "10927:25:9",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10904:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10904:6:9"
																},
																"nativeSrc": "10904:49:9",
																"nodeType": "YulFunctionCall",
																"src": "10904:49:9"
															},
															"nativeSrc": "10904:49:9",
															"nodeType": "YulExpressionStatement",
															"src": "10904:49:9"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nativeSrc": "10787:173:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10885:6:9",
														"nodeType": "YulTypedName",
														"src": "10885:6:9",
														"type": ""
													}
												],
												"src": "10787:173:9"
											},
											{
												"body": {
													"nativeSrc": "11130:238:9",
													"nodeType": "YulBlock",
													"src": "11130:238:9",
													"statements": [
														{
															"nativeSrc": "11140:92:9",
															"nodeType": "YulAssignment",
															"src": "11140:92:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11224:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11224:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11229:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11229:2:9",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11147:76:9",
																	"nodeType": "YulIdentifier",
																	"src": "11147:76:9"
																},
																"nativeSrc": "11147:85:9",
																"nodeType": "YulFunctionCall",
																"src": "11147:85:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11140:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11140:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11330:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11330:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nativeSrc": "11241:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11241:88:9"
																},
																"nativeSrc": "11241:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11241:93:9"
															},
															"nativeSrc": "11241:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11241:93:9"
														},
														{
															"nativeSrc": "11343:19:9",
															"nodeType": "YulAssignment",
															"src": "11343:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11354:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11354:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11359:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11359:2:9",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11350:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11350:3:9"
																},
																"nativeSrc": "11350:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11350:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11343:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11343:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10966:402:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11118:3:9",
														"nodeType": "YulTypedName",
														"src": "11118:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11126:3:9",
														"nodeType": "YulTypedName",
														"src": "11126:3:9",
														"type": ""
													}
												],
												"src": "10966:402:9"
											},
											{
												"body": {
													"nativeSrc": "11433:40:9",
													"nodeType": "YulBlock",
													"src": "11433:40:9",
													"statements": [
														{
															"nativeSrc": "11444:22:9",
															"nodeType": "YulAssignment",
															"src": "11444:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11460:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11460:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11454:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11454:5:9"
																},
																"nativeSrc": "11454:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11454:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11444:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11444:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "11374:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11416:5:9",
														"nodeType": "YulTypedName",
														"src": "11416:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11426:6:9",
														"nodeType": "YulTypedName",
														"src": "11426:6:9",
														"type": ""
													}
												],
												"src": "11374:99:9"
											},
											{
												"body": {
													"nativeSrc": "11541:77:9",
													"nodeType": "YulBlock",
													"src": "11541:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "11558:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11558:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "11563:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11563:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11568:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11568:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "11552:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11552:5:9"
																},
																"nativeSrc": "11552:23:9",
																"nodeType": "YulFunctionCall",
																"src": "11552:23:9"
															},
															"nativeSrc": "11552:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "11552:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "11595:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "11595:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11600:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11600:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11591:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11591:3:9"
																		},
																		"nativeSrc": "11591:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11591:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11609:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11609:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11584:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11584:6:9"
																},
																"nativeSrc": "11584:27:9",
																"nodeType": "YulFunctionCall",
																"src": "11584:27:9"
															},
															"nativeSrc": "11584:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "11584:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "11479:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "11523:3:9",
														"nodeType": "YulTypedName",
														"src": "11523:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "11528:3:9",
														"nodeType": "YulTypedName",
														"src": "11528:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11533:6:9",
														"nodeType": "YulTypedName",
														"src": "11533:6:9",
														"type": ""
													}
												],
												"src": "11479:139:9"
											},
											{
												"body": {
													"nativeSrc": "11734:280:9",
													"nodeType": "YulBlock",
													"src": "11734:280:9",
													"statements": [
														{
															"nativeSrc": "11744:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "11744:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11791:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11791:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "11758:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "11758:32:9"
																},
																"nativeSrc": "11758:39:9",
																"nodeType": "YulFunctionCall",
																"src": "11758:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11748:6:9",
																	"nodeType": "YulTypedName",
																	"src": "11748:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11806:96:9",
															"nodeType": "YulAssignment",
															"src": "11806:96:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11890:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11890:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11895:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11895:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11813:76:9",
																	"nodeType": "YulIdentifier",
																	"src": "11813:76:9"
																},
																"nativeSrc": "11813:89:9",
																"nodeType": "YulFunctionCall",
																"src": "11813:89:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11806:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11806:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11950:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "11950:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11957:4:9",
																				"nodeType": "YulLiteral",
																				"src": "11957:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11946:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11946:3:9"
																		},
																		"nativeSrc": "11946:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11946:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11964:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11964:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11969:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11969:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11911:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "11911:34:9"
																},
																"nativeSrc": "11911:65:9",
																"nodeType": "YulFunctionCall",
																"src": "11911:65:9"
															},
															"nativeSrc": "11911:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "11911:65:9"
														},
														{
															"nativeSrc": "11985:23:9",
															"nodeType": "YulAssignment",
															"src": "11985:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11996:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11996:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12001:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12001:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11992:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11992:3:9"
																},
																"nativeSrc": "11992:16:9",
																"nodeType": "YulFunctionCall",
																"src": "11992:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11985:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11985:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11624:390:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11715:5:9",
														"nodeType": "YulTypedName",
														"src": "11715:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11722:3:9",
														"nodeType": "YulTypedName",
														"src": "11722:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11730:3:9",
														"nodeType": "YulTypedName",
														"src": "11730:3:9",
														"type": ""
													}
												],
												"src": "11624:390:9"
											},
											{
												"body": {
													"nativeSrc": "12126:61:9",
													"nodeType": "YulBlock",
													"src": "12126:61:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12148:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12148:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12156:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12156:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12144:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12144:3:9"
																		},
																		"nativeSrc": "12144:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12144:14:9"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nativeSrc": "12160:19:9",
																		"nodeType": "YulLiteral",
																		"src": "12160:19:9",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12137:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12137:6:9"
																},
																"nativeSrc": "12137:43:9",
																"nodeType": "YulFunctionCall",
																"src": "12137:43:9"
															},
															"nativeSrc": "12137:43:9",
															"nodeType": "YulExpressionStatement",
															"src": "12137:43:9"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nativeSrc": "12020:167:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12118:6:9",
														"nodeType": "YulTypedName",
														"src": "12118:6:9",
														"type": ""
													}
												],
												"src": "12020:167:9"
											},
											{
												"body": {
													"nativeSrc": "12357:238:9",
													"nodeType": "YulBlock",
													"src": "12357:238:9",
													"statements": [
														{
															"nativeSrc": "12367:92:9",
															"nodeType": "YulAssignment",
															"src": "12367:92:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12451:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12451:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12456:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12456:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12374:76:9",
																	"nodeType": "YulIdentifier",
																	"src": "12374:76:9"
																},
																"nativeSrc": "12374:85:9",
																"nodeType": "YulFunctionCall",
																"src": "12374:85:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12367:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12367:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12557:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12557:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nativeSrc": "12468:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "12468:88:9"
																},
																"nativeSrc": "12468:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12468:93:9"
															},
															"nativeSrc": "12468:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "12468:93:9"
														},
														{
															"nativeSrc": "12570:19:9",
															"nodeType": "YulAssignment",
															"src": "12570:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12581:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12581:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12586:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12586:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12577:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12577:3:9"
																},
																"nativeSrc": "12577:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12577:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12570:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12570:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12193:402:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12345:3:9",
														"nodeType": "YulTypedName",
														"src": "12345:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12353:3:9",
														"nodeType": "YulTypedName",
														"src": "12353:3:9",
														"type": ""
													}
												],
												"src": "12193:402:9"
											},
											{
												"body": {
													"nativeSrc": "12987:581:9",
													"nodeType": "YulBlock",
													"src": "12987:581:9",
													"statements": [
														{
															"nativeSrc": "12998:155:9",
															"nodeType": "YulAssignment",
															"src": "12998:155:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13149:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13149:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13005:142:9",
																	"nodeType": "YulIdentifier",
																	"src": "13005:142:9"
																},
																"nativeSrc": "13005:148:9",
																"nodeType": "YulFunctionCall",
																"src": "13005:148:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12998:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12998:3:9"
																}
															]
														},
														{
															"nativeSrc": "13163:102:9",
															"nodeType": "YulAssignment",
															"src": "13163:102:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13252:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13252:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13261:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13261:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13170:81:9",
																	"nodeType": "YulIdentifier",
																	"src": "13170:81:9"
																},
																"nativeSrc": "13170:95:9",
																"nodeType": "YulFunctionCall",
																"src": "13170:95:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13163:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13163:3:9"
																}
															]
														},
														{
															"nativeSrc": "13275:155:9",
															"nodeType": "YulAssignment",
															"src": "13275:155:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13426:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13426:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13282:142:9",
																	"nodeType": "YulIdentifier",
																	"src": "13282:142:9"
																},
																"nativeSrc": "13282:148:9",
																"nodeType": "YulFunctionCall",
																"src": "13282:148:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13275:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13275:3:9"
																}
															]
														},
														{
															"nativeSrc": "13440:102:9",
															"nodeType": "YulAssignment",
															"src": "13440:102:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13529:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13529:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13538:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13538:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13447:81:9",
																	"nodeType": "YulIdentifier",
																	"src": "13447:81:9"
																},
																"nativeSrc": "13447:95:9",
																"nodeType": "YulFunctionCall",
																"src": "13447:95:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13440:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13440:3:9"
																}
															]
														},
														{
															"nativeSrc": "13552:10:9",
															"nodeType": "YulAssignment",
															"src": "13552:10:9",
															"value": {
																"name": "pos",
																"nativeSrc": "13559:3:9",
																"nodeType": "YulIdentifier",
																"src": "13559:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13552:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13552:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12601:967:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12958:3:9",
														"nodeType": "YulTypedName",
														"src": "12958:3:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12964:6:9",
														"nodeType": "YulTypedName",
														"src": "12964:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12972:6:9",
														"nodeType": "YulTypedName",
														"src": "12972:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12983:3:9",
														"nodeType": "YulTypedName",
														"src": "12983:3:9",
														"type": ""
													}
												],
												"src": "12601:967:9"
											},
											{
												"body": {
													"nativeSrc": "13622:54:9",
													"nodeType": "YulBlock",
													"src": "13622:54:9",
													"statements": [
														{
															"nativeSrc": "13632:38:9",
															"nodeType": "YulAssignment",
															"src": "13632:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13650:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "13650:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13657:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13657:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13646:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13646:3:9"
																		},
																		"nativeSrc": "13646:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13646:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13666:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13666:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "13662:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13662:3:9"
																		},
																		"nativeSrc": "13662:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13662:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13642:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13642:3:9"
																},
																"nativeSrc": "13642:28:9",
																"nodeType": "YulFunctionCall",
																"src": "13642:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "13632:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13632:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "13574:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13605:5:9",
														"nodeType": "YulTypedName",
														"src": "13605:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "13615:6:9",
														"nodeType": "YulTypedName",
														"src": "13615:6:9",
														"type": ""
													}
												],
												"src": "13574:102:9"
											},
											{
												"body": {
													"nativeSrc": "13774:285:9",
													"nodeType": "YulBlock",
													"src": "13774:285:9",
													"statements": [
														{
															"nativeSrc": "13784:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "13784:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13831:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "13831:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "13798:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "13798:32:9"
																},
																"nativeSrc": "13798:39:9",
																"nodeType": "YulFunctionCall",
																"src": "13798:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13788:6:9",
																	"nodeType": "YulTypedName",
																	"src": "13788:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13846:78:9",
															"nodeType": "YulAssignment",
															"src": "13846:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13912:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13912:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13917:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13917:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13853:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13853:58:9"
																},
																"nativeSrc": "13853:71:9",
																"nodeType": "YulFunctionCall",
																"src": "13853:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13846:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13846:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13972:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "13972:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13979:4:9",
																				"nodeType": "YulLiteral",
																				"src": "13979:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13968:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13968:3:9"
																		},
																		"nativeSrc": "13968:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13968:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13986:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13986:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13991:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13991:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13933:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "13933:34:9"
																},
																"nativeSrc": "13933:65:9",
																"nodeType": "YulFunctionCall",
																"src": "13933:65:9"
															},
															"nativeSrc": "13933:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "13933:65:9"
														},
														{
															"nativeSrc": "14007:46:9",
															"nodeType": "YulAssignment",
															"src": "14007:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14018:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14018:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14045:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14045:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "14023:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "14023:21:9"
																		},
																		"nativeSrc": "14023:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14023:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14014:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14014:3:9"
																},
																"nativeSrc": "14014:39:9",
																"nodeType": "YulFunctionCall",
																"src": "14014:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14007:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14007:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13682:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13755:5:9",
														"nodeType": "YulTypedName",
														"src": "13755:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13762:3:9",
														"nodeType": "YulTypedName",
														"src": "13762:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13770:3:9",
														"nodeType": "YulTypedName",
														"src": "13770:3:9",
														"type": ""
													}
												],
												"src": "13682:377:9"
											},
											{
												"body": {
													"nativeSrc": "14183:195:9",
													"nodeType": "YulBlock",
													"src": "14183:195:9",
													"statements": [
														{
															"nativeSrc": "14193:26:9",
															"nodeType": "YulAssignment",
															"src": "14193:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14205:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14205:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14216:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14216:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14201:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14201:3:9"
																},
																"nativeSrc": "14201:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14201:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14193:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14193:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14240:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14240:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14251:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14251:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14236:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14236:3:9"
																		},
																		"nativeSrc": "14236:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14236:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14259:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14259:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14265:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14265:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14255:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14255:3:9"
																		},
																		"nativeSrc": "14255:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14255:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14229:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14229:6:9"
																},
																"nativeSrc": "14229:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14229:47:9"
															},
															"nativeSrc": "14229:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14229:47:9"
														},
														{
															"nativeSrc": "14285:86:9",
															"nodeType": "YulAssignment",
															"src": "14285:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14357:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14357:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14366:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14366:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14293:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "14293:63:9"
																},
																"nativeSrc": "14293:78:9",
																"nodeType": "YulFunctionCall",
																"src": "14293:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14285:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14285:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14065:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14155:9:9",
														"nodeType": "YulTypedName",
														"src": "14155:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14167:6:9",
														"nodeType": "YulTypedName",
														"src": "14167:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14178:4:9",
														"nodeType": "YulTypedName",
														"src": "14178:4:9",
														"type": ""
													}
												],
												"src": "14065:313:9"
											},
											{
												"body": {
													"nativeSrc": "14412:152:9",
													"nodeType": "YulBlock",
													"src": "14412:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14429:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14429:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14432:77:9",
																		"nodeType": "YulLiteral",
																		"src": "14432:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14422:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14422:6:9"
																},
																"nativeSrc": "14422:88:9",
																"nodeType": "YulFunctionCall",
																"src": "14422:88:9"
															},
															"nativeSrc": "14422:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "14422:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14526:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14526:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14529:4:9",
																		"nodeType": "YulLiteral",
																		"src": "14529:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14519:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14519:6:9"
																},
																"nativeSrc": "14519:15:9",
																"nodeType": "YulFunctionCall",
																"src": "14519:15:9"
															},
															"nativeSrc": "14519:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "14519:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14550:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14550:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14553:4:9",
																		"nodeType": "YulLiteral",
																		"src": "14553:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14543:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14543:6:9"
																},
																"nativeSrc": "14543:15:9",
																"nodeType": "YulFunctionCall",
																"src": "14543:15:9"
															},
															"nativeSrc": "14543:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "14543:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14384:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "14384:180:9"
											},
											{
												"body": {
													"nativeSrc": "14618:362:9",
													"nodeType": "YulBlock",
													"src": "14618:362:9",
													"statements": [
														{
															"nativeSrc": "14628:25:9",
															"nodeType": "YulAssignment",
															"src": "14628:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14651:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14651:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14633:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14633:17:9"
																},
																"nativeSrc": "14633:20:9",
																"nodeType": "YulFunctionCall",
																"src": "14633:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14628:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14628:1:9"
																}
															]
														},
														{
															"nativeSrc": "14662:25:9",
															"nodeType": "YulAssignment",
															"src": "14662:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14685:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14685:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14667:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14667:17:9"
																},
																"nativeSrc": "14667:20:9",
																"nodeType": "YulFunctionCall",
																"src": "14667:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14662:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14662:1:9"
																}
															]
														},
														{
															"nativeSrc": "14696:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "14696:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14719:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14719:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14722:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14722:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14715:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14715:3:9"
																},
																"nativeSrc": "14715:9:9",
																"nodeType": "YulFunctionCall",
																"src": "14715:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "14700:11:9",
																	"nodeType": "YulTypedName",
																	"src": "14700:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14733:41:9",
															"nodeType": "YulAssignment",
															"src": "14733:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14762:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "14762:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14744:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14744:17:9"
																},
																"nativeSrc": "14744:30:9",
																"nodeType": "YulFunctionCall",
																"src": "14744:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14733:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "14733:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14951:22:9",
																"nodeType": "YulBlock",
																"src": "14951:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14953:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "14953:16:9"
																			},
																			"nativeSrc": "14953:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14953:18:9"
																		},
																		"nativeSrc": "14953:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14953:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14884:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "14884:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14877:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "14877:6:9"
																				},
																				"nativeSrc": "14877:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "14877:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14907:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "14907:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14914:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "14914:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14923:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "14923:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14910:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "14910:3:9"
																						},
																						"nativeSrc": "14910:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "14910:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14904:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "14904:2:9"
																				},
																				"nativeSrc": "14904:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "14904:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14857:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "14857:2:9"
																		},
																		"nativeSrc": "14857:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14857:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14837:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14837:6:9"
																},
																"nativeSrc": "14837:113:9",
																"nodeType": "YulFunctionCall",
																"src": "14837:113:9"
															},
															"nativeSrc": "14834:139:9",
															"nodeType": "YulIf",
															"src": "14834:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14570:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14601:1:9",
														"nodeType": "YulTypedName",
														"src": "14601:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14604:1:9",
														"nodeType": "YulTypedName",
														"src": "14604:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14610:7:9",
														"nodeType": "YulTypedName",
														"src": "14610:7:9",
														"type": ""
													}
												],
												"src": "14570:410:9"
											},
											{
												"body": {
													"nativeSrc": "15030:147:9",
													"nodeType": "YulBlock",
													"src": "15030:147:9",
													"statements": [
														{
															"nativeSrc": "15040:25:9",
															"nodeType": "YulAssignment",
															"src": "15040:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15063:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15063:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15045:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "15045:17:9"
																},
																"nativeSrc": "15045:20:9",
																"nodeType": "YulFunctionCall",
																"src": "15045:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15040:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "15040:1:9"
																}
															]
														},
														{
															"nativeSrc": "15074:25:9",
															"nodeType": "YulAssignment",
															"src": "15074:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15097:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15097:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15079:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "15079:17:9"
																},
																"nativeSrc": "15079:20:9",
																"nodeType": "YulFunctionCall",
																"src": "15079:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15074:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "15074:1:9"
																}
															]
														},
														{
															"nativeSrc": "15108:16:9",
															"nodeType": "YulAssignment",
															"src": "15108:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15119:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15119:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15122:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15122:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15115:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15115:3:9"
																},
																"nativeSrc": "15115:9:9",
																"nodeType": "YulFunctionCall",
																"src": "15115:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15108:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15108:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15148:22:9",
																"nodeType": "YulBlock",
																"src": "15148:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15150:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "15150:16:9"
																			},
																			"nativeSrc": "15150:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "15150:18:9"
																		},
																		"nativeSrc": "15150:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "15150:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15140:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15140:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15143:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15143:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15137:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "15137:2:9"
																},
																"nativeSrc": "15137:10:9",
																"nodeType": "YulFunctionCall",
																"src": "15137:10:9"
															},
															"nativeSrc": "15134:36:9",
															"nodeType": "YulIf",
															"src": "15134:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14986:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15017:1:9",
														"nodeType": "YulTypedName",
														"src": "15017:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15020:1:9",
														"nodeType": "YulTypedName",
														"src": "15020:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15026:3:9",
														"nodeType": "YulTypedName",
														"src": "15026:3:9",
														"type": ""
													}
												],
												"src": "14986:191:9"
											},
											{
												"body": {
													"nativeSrc": "15211:152:9",
													"nodeType": "YulBlock",
													"src": "15211:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15228:1:9",
																		"nodeType": "YulLiteral",
																		"src": "15228:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15231:77:9",
																		"nodeType": "YulLiteral",
																		"src": "15231:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15221:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15221:6:9"
																},
																"nativeSrc": "15221:88:9",
																"nodeType": "YulFunctionCall",
																"src": "15221:88:9"
															},
															"nativeSrc": "15221:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "15221:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15325:1:9",
																		"nodeType": "YulLiteral",
																		"src": "15325:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15328:4:9",
																		"nodeType": "YulLiteral",
																		"src": "15328:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15318:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15318:6:9"
																},
																"nativeSrc": "15318:15:9",
																"nodeType": "YulFunctionCall",
																"src": "15318:15:9"
															},
															"nativeSrc": "15318:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "15318:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15349:1:9",
																		"nodeType": "YulLiteral",
																		"src": "15349:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15352:4:9",
																		"nodeType": "YulLiteral",
																		"src": "15352:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15342:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15342:6:9"
																},
																"nativeSrc": "15342:15:9",
																"nodeType": "YulFunctionCall",
																"src": "15342:15:9"
															},
															"nativeSrc": "15342:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "15342:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "15183:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "15183:180:9"
											},
											{
												"body": {
													"nativeSrc": "15397:152:9",
													"nodeType": "YulBlock",
													"src": "15397:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15414:1:9",
																		"nodeType": "YulLiteral",
																		"src": "15414:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15417:77:9",
																		"nodeType": "YulLiteral",
																		"src": "15417:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15407:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15407:6:9"
																},
																"nativeSrc": "15407:88:9",
																"nodeType": "YulFunctionCall",
																"src": "15407:88:9"
															},
															"nativeSrc": "15407:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "15407:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15511:1:9",
																		"nodeType": "YulLiteral",
																		"src": "15511:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15514:4:9",
																		"nodeType": "YulLiteral",
																		"src": "15514:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15504:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15504:6:9"
																},
																"nativeSrc": "15504:15:9",
																"nodeType": "YulFunctionCall",
																"src": "15504:15:9"
															},
															"nativeSrc": "15504:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "15504:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15535:1:9",
																		"nodeType": "YulLiteral",
																		"src": "15535:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15538:4:9",
																		"nodeType": "YulLiteral",
																		"src": "15538:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15528:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15528:6:9"
																},
																"nativeSrc": "15528:15:9",
																"nodeType": "YulFunctionCall",
																"src": "15528:15:9"
															},
															"nativeSrc": "15528:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "15528:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "15369:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "15369:180:9"
											},
											{
												"body": {
													"nativeSrc": "15598:128:9",
													"nodeType": "YulBlock",
													"src": "15598:128:9",
													"statements": [
														{
															"nativeSrc": "15608:33:9",
															"nodeType": "YulAssignment",
															"src": "15608:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15635:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "15635:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15617:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "15617:17:9"
																},
																"nativeSrc": "15617:24:9",
																"nodeType": "YulFunctionCall",
																"src": "15617:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15608:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "15608:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15669:22:9",
																"nodeType": "YulBlock",
																"src": "15669:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15671:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "15671:16:9"
																			},
																			"nativeSrc": "15671:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "15671:18:9"
																		},
																		"nativeSrc": "15671:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "15671:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15656:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "15656:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15663:4:9",
																		"nodeType": "YulLiteral",
																		"src": "15663:4:9",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "15653:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "15653:2:9"
																},
																"nativeSrc": "15653:15:9",
																"nodeType": "YulFunctionCall",
																"src": "15653:15:9"
															},
															"nativeSrc": "15650:41:9",
															"nodeType": "YulIf",
															"src": "15650:41:9"
														},
														{
															"nativeSrc": "15700:20:9",
															"nodeType": "YulAssignment",
															"src": "15700:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15711:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "15711:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15718:1:9",
																		"nodeType": "YulLiteral",
																		"src": "15718:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "15707:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15707:3:9"
																},
																"nativeSrc": "15707:13:9",
																"nodeType": "YulFunctionCall",
																"src": "15707:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15700:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15700:3:9"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "15555:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15584:5:9",
														"nodeType": "YulTypedName",
														"src": "15584:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15594:3:9",
														"nodeType": "YulTypedName",
														"src": "15594:3:9",
														"type": ""
													}
												],
												"src": "15555:171:9"
											},
											{
												"body": {
													"nativeSrc": "15838:76:9",
													"nodeType": "YulBlock",
													"src": "15838:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15860:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15860:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15868:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15868:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15856:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15856:3:9"
																		},
																		"nativeSrc": "15856:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15856:14:9"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nativeSrc": "15872:34:9",
																		"nodeType": "YulLiteral",
																		"src": "15872:34:9",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15849:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15849:6:9"
																},
																"nativeSrc": "15849:58:9",
																"nodeType": "YulFunctionCall",
																"src": "15849:58:9"
															},
															"nativeSrc": "15849:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "15849:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nativeSrc": "15732:182:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15830:6:9",
														"nodeType": "YulTypedName",
														"src": "15830:6:9",
														"type": ""
													}
												],
												"src": "15732:182:9"
											},
											{
												"body": {
													"nativeSrc": "16066:220:9",
													"nodeType": "YulBlock",
													"src": "16066:220:9",
													"statements": [
														{
															"nativeSrc": "16076:74:9",
															"nodeType": "YulAssignment",
															"src": "16076:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16142:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16142:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16147:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16147:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16083:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "16083:58:9"
																},
																"nativeSrc": "16083:67:9",
																"nodeType": "YulFunctionCall",
																"src": "16083:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16076:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16076:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16248:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16248:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nativeSrc": "16159:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "16159:88:9"
																},
																"nativeSrc": "16159:93:9",
																"nodeType": "YulFunctionCall",
																"src": "16159:93:9"
															},
															"nativeSrc": "16159:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "16159:93:9"
														},
														{
															"nativeSrc": "16261:19:9",
															"nodeType": "YulAssignment",
															"src": "16261:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16272:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16272:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16277:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16277:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16268:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16268:3:9"
																},
																"nativeSrc": "16268:12:9",
																"nodeType": "YulFunctionCall",
																"src": "16268:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16261:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15920:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16054:3:9",
														"nodeType": "YulTypedName",
														"src": "16054:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16062:3:9",
														"nodeType": "YulTypedName",
														"src": "16062:3:9",
														"type": ""
													}
												],
												"src": "15920:366:9"
											},
											{
												"body": {
													"nativeSrc": "16463:248:9",
													"nodeType": "YulBlock",
													"src": "16463:248:9",
													"statements": [
														{
															"nativeSrc": "16473:26:9",
															"nodeType": "YulAssignment",
															"src": "16473:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16485:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16485:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16496:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16496:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16481:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16481:3:9"
																},
																"nativeSrc": "16481:18:9",
																"nodeType": "YulFunctionCall",
																"src": "16481:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16473:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16473:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16520:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16520:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16531:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16531:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16516:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16516:3:9"
																		},
																		"nativeSrc": "16516:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16516:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16539:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "16539:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16545:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16545:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16535:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16535:3:9"
																		},
																		"nativeSrc": "16535:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16535:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16509:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16509:6:9"
																},
																"nativeSrc": "16509:47:9",
																"nodeType": "YulFunctionCall",
																"src": "16509:47:9"
															},
															"nativeSrc": "16509:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "16509:47:9"
														},
														{
															"nativeSrc": "16565:139:9",
															"nodeType": "YulAssignment",
															"src": "16565:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16699:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16699:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16573:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "16573:124:9"
																},
																"nativeSrc": "16573:131:9",
																"nodeType": "YulFunctionCall",
																"src": "16573:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16565:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16565:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16292:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16443:9:9",
														"nodeType": "YulTypedName",
														"src": "16443:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16458:4:9",
														"nodeType": "YulTypedName",
														"src": "16458:4:9",
														"type": ""
													}
												],
												"src": "16292:419:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct TikTrixGame.GameInfo -> struct TikTrixGame.GameInfo\n    function abi_encode_t_struct$_GameInfo_$17_memory_ptr_to_t_struct$_GameInfo_$17_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // gameSeq\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // memberSeq\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // exists\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_GameInfo_$17_memory_ptr__to_t_struct$_GameInfo_$17_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_struct$_GameInfo_$17_memory_ptr_to_t_struct$_GameInfo_$17_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Game does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_c6926f1ebfa5ea8a7186ba2a57037cf093b0cb4f86e0150c483f8b4083a3d9d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Game already exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6926f1ebfa5ea8a7186ba2a57037cf093b0cb4f86e0150c483f8b4083a3d9d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_c6926f1ebfa5ea8a7186ba2a57037cf093b0cb4f86e0150c483f8b4083a3d9d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6926f1ebfa5ea8a7186ba2a57037cf093b0cb4f86e0150c483f8b4083a3d9d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6926f1ebfa5ea8a7186ba2a57037cf093b0cb4f86e0150c483f8b4083a3d9d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D1B4687 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xB638D158 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xC634B78E EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x324 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x7D1B4687 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x89B2C8E7 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x9A19C7B0 EQ PUSH2 0x2B2 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x47E1D550 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x4F0CE4DF EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x216 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x1833FDF9 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x192 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x1014 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x104E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x10C1 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x10C1 JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x55A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x104E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x675 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x10C1 JUMP JUMPDEST PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D6 PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x104E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x11E5 JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x11BA JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x10C1 JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3B2 JUMPI POP PUSH2 0x3B1 DUP3 PUSH2 0x98E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x407 DUP3 PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x410 DUP2 PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x41A DUP4 DUP4 PUSH2 0xA0B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x427 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x494 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48B SWAP1 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x49E DUP3 DUP3 PUSH2 0xAEC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4AA PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x501 SWAP1 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x584 DUP2 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x8DA554679CE754233202E83B51AEFA8BE576E0A49851A9DDD4686DFD94BA6093 DUP3 PUSH1 0x40 MLOAD PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x69F DUP2 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F6 SWAP1 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP DUP2 PUSH32 0x5EF6221CC1C069A8C723210C08D526C7CA88540EE8D66470CF01844EFAAE0B94 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x7D3 DUP2 PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x7FD PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP4 PUSH2 0x96D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x831 DUP2 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x889 SWAP1 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0xEEB0A161EDA325CEFB3F550C18E560490EA78827E2A4C3A9FA9C5E66CE871C3F DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x926 SWAP3 SWAP2 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x93F DUP2 PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x969 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP4 PUSH2 0x3FE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x976 DUP3 PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x97F DUP2 PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x989 DUP4 DUP4 PUSH2 0xAEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA08 DUP2 PUSH2 0xA03 PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA15 DUP3 DUP3 PUSH2 0x764 JUMP JUMPDEST PUSH2 0xAE1 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xA86 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAF6 DUP3 DUP3 PUSH2 0x764 JUMP JUMPDEST ISZERO PUSH2 0xBC2 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB67 PUSH2 0xAE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBD0 DUP3 DUP3 PUSH2 0x764 JUMP JUMPDEST PUSH2 0xC46 JUMPI PUSH2 0xBDD DUP2 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0xBEA DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBFB SWAP3 SWAP2 SWAP1 PUSH2 0x14B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x1538 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC70 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xC77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xC89 SWAP2 SWAP1 PUSH2 0x1585 JUMP JUMPDEST PUSH2 0xC93 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCAC JUMPI PUSH2 0xCAB PUSH2 0x15F9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCDE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xD15 JUMPI PUSH2 0xD14 PUSH2 0x1626 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xD78 JUMPI PUSH2 0xD77 PUSH2 0x1626 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xDB6 SWAP2 SWAP1 PUSH2 0x1585 JUMP JUMPDEST PUSH2 0xDC0 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE5F JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xE02 JUMPI PUSH2 0xE01 PUSH2 0x1626 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE19 JUMPI PUSH2 0xE18 PUSH2 0x1626 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xE58 SWAP1 PUSH2 0x1653 JUMP JUMPDEST SWAP1 POP PUSH2 0xDC3 JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0xEA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE99 SWAP1 PUSH2 0x16C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF04 DUP2 PUSH2 0xED0 JUMP JUMPDEST DUP2 EQ PUSH2 0xF0E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF1F DUP2 PUSH2 0xEFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF3A JUMPI PUSH2 0xF39 PUSH2 0xECC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF47 DUP5 DUP3 DUP6 ADD PUSH2 0xF11 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF64 DUP2 PUSH2 0xF50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF7D PUSH0 DUP4 ADD DUP5 PUSH2 0xF5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF95 DUP2 PUSH2 0xF83 JUMP JUMPDEST DUP2 EQ PUSH2 0xF9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB0 DUP2 PUSH2 0xF8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFCB JUMPI PUSH2 0xFCA PUSH2 0xECC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFD8 DUP5 DUP3 DUP6 ADD PUSH2 0xFA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFF3 DUP2 PUSH2 0xFE1 JUMP JUMPDEST DUP2 EQ PUSH2 0xFFD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x100E DUP2 PUSH2 0xFEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1029 JUMPI PUSH2 0x1028 PUSH2 0xECC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1036 DUP5 DUP3 DUP6 ADD PUSH2 0x1000 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1048 DUP2 PUSH2 0xFE1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1061 PUSH0 DUP4 ADD DUP5 PUSH2 0x103F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1090 DUP3 PUSH2 0x1067 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A0 DUP2 PUSH2 0x1086 JUMP JUMPDEST DUP2 EQ PUSH2 0x10AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10BB DUP2 PUSH2 0x1097 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10D7 JUMPI PUSH2 0x10D6 PUSH2 0xECC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10E4 DUP6 DUP3 DUP7 ADD PUSH2 0x1000 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10F5 DUP6 DUP3 DUP7 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1108 DUP2 PUSH2 0xF83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1117 DUP2 PUSH2 0xF50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1131 PUSH0 DUP6 ADD DUP3 PUSH2 0x10FF JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1144 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x10FF JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1157 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x110E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1170 PUSH0 DUP4 ADD DUP5 PUSH2 0x111D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x117F DUP2 PUSH2 0xF83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1198 PUSH0 DUP4 ADD DUP7 PUSH2 0x1176 JUMP JUMPDEST PUSH2 0x11A5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1176 JUMP JUMPDEST PUSH2 0x11B2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF5B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11CF JUMPI PUSH2 0x11CE PUSH2 0xECC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11DC DUP5 DUP3 DUP6 ADD PUSH2 0x10AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11FB JUMPI PUSH2 0x11FA PUSH2 0xECC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1208 DUP6 DUP3 DUP7 ADD PUSH2 0xFA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1219 DUP6 DUP3 DUP7 ADD PUSH2 0xFA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x128D PUSH1 0x2F DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x1298 DUP3 PUSH2 0x1233 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12BA DUP2 PUSH2 0x1281 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D6520646F6573206E6F7420657869737400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12F5 PUSH1 0x13 DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x1300 DUP3 PUSH2 0x12C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1322 DUP2 PUSH2 0x12E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x133C PUSH0 DUP4 ADD DUP5 PUSH2 0x1176 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x47616D6520616C72656164792065786973740000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1376 PUSH1 0x12 DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x1381 DUP3 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13A3 DUP2 PUSH2 0x136A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13BD PUSH0 DUP4 ADD DUP6 PUSH2 0x1176 JUMP JUMPDEST PUSH2 0x13CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1176 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x140F PUSH1 0x17 DUP4 PUSH2 0x13D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x141A DUP3 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1447 DUP3 PUSH2 0x1425 JUMP JUMPDEST PUSH2 0x1451 DUP2 DUP6 PUSH2 0x13D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1461 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x142F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14A1 PUSH1 0x11 DUP4 PUSH2 0x13D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x14AC DUP3 PUSH2 0x146D JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14C1 DUP3 PUSH2 0x1403 JUMP JUMPDEST SWAP2 POP PUSH2 0x14CD DUP3 DUP6 PUSH2 0x143D JUMP JUMPDEST SWAP2 POP PUSH2 0x14D8 DUP3 PUSH2 0x1495 JUMP JUMPDEST SWAP2 POP PUSH2 0x14E4 DUP3 DUP5 PUSH2 0x143D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x150A DUP3 PUSH2 0x1425 JUMP JUMPDEST PUSH2 0x1514 DUP2 DUP6 PUSH2 0x1223 JUMP JUMPDEST SWAP4 POP PUSH2 0x1524 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x142F JUMP JUMPDEST PUSH2 0x152D DUP2 PUSH2 0x14F0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1550 DUP2 DUP5 PUSH2 0x1500 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x158F DUP3 PUSH2 0xF83 JUMP JUMPDEST SWAP2 POP PUSH2 0x159A DUP4 PUSH2 0xF83 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x15A8 DUP2 PUSH2 0xF83 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x15BF JUMPI PUSH2 0x15BE PUSH2 0x1558 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15D0 DUP3 PUSH2 0xF83 JUMP JUMPDEST SWAP2 POP PUSH2 0x15DB DUP4 PUSH2 0xF83 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15F3 JUMPI PUSH2 0x15F2 PUSH2 0x1558 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x165D DUP3 PUSH2 0xF83 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x166F JUMPI PUSH2 0x166E PUSH2 0x1558 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16AE PUSH1 0x20 DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x16B9 DUP3 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16DB DUP2 PUSH2 0x16A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 OR 0x24 EXTCODECOPY PUSH13 0xAC18E4E709B6ACC4D56DBE5787 DUP8 0xB6 0xDC 0x4B 0xD EXP BYTE DUP12 DUP1 0xA5 TSTORE PUSH19 0x917864736F6C634300081A0033000000000000 ",
							"sourceMap": "281:1874:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:202:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2035:117:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4378:129:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4803:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5912:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1842:187:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1442:177;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;325:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;494:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1625:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2895:145:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;950:126:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2027:49:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1082:354:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;820:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5228:147:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2606:202;2691:4;2729:32;2714:47;;;:11;:47;;;;:87;;;;2765:36;2789:11;2765:23;:36::i;:::-;2714:87;2707:94;;2606:202;;;:::o;2035:117:0:-;2097:4;2120:9;:18;2130:7;2120:18;;;;;;;;;;;:25;;;;;;;;;;;;2113:32;;2035:117;;;:::o;4378:129:1:-;4452:7;4478:6;:12;4485:4;4478:12;;;;;;;;;;;:22;;;4471:29;;4378:129;;;:::o;4803:145::-;4886:18;4899:4;4886:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;4916:25:::1;4927:4;4933:7;4916:10;:25::i;:::-;4803:145:::0;;;:::o;5912:214::-;6018:12;:10;:12::i;:::-;6007:23;;:7;:23;;;5999:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6093:26;6105:4;6111:7;6093:11;:26::i;:::-;5912:214;;:::o;1842:187:0:-;1903:15;;:::i;:::-;1938:9;:18;1948:7;1938:18;;;;;;;;;;;:25;;;;;;;;;;;;1930:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2004:9;:18;2014:7;2004:18;;;;;;;;;;;1997:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1842:187;;;:::o;1442:177::-;362:23;2505:16:1;2516:4;2505:10;:16::i;:::-;1527:9:0::1;:18;1537:7;1527:18;;;;;;;;;;;:25;;;;;;;;;;;;1519:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;1592:20;1604:7;1592:20;;;;;;:::i;:::-;;;;;;;;1442:177:::0;;:::o;325:60::-;362:23;325:60;:::o;494:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1625:211::-;362:23;2505:16:1;2516:4;2505:10;:16::i;:::-;1710:9:0::1;:18;1720:7;1710:18;;;;;;;;;;;:25;;;;;;;;;;;;1702:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;1776:9;:18;1786:7;1776:18;;;;;;;;;;;;1769:25:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1821:7;1809:20;;;;;;;;;;1625:211:::0;;:::o;2895:145:1:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;950:126:0:-;2072:4:1;1008:18:0;;2505:16:1;2516:4;2505:10;:16::i;:::-;1038:31:0::1;362:23;1061:7;1038:10;:31::i;:::-;950:126:::0;;:::o;2027:49:1:-;2072:4;2027:49;;;:::o;1082:354:0:-;362:23;2505:16:1;2516:4;2505:10;:16::i;:::-;1189:9:0::1;:18;1199:7;1189:18;;;;;;;;;;;:25;;;;;;;;;;;;1188:26;1180:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;1269:110;;;;;;;;1301:7;1269:110;;;;1333:9;1269:110;;;;1364:4;1269:110;;;;::::0;1248:9:::1;:18;1258:7;1248:18;;;;;;;;;;;:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1395:34;1410:7;1419:9;1395:34;;;;;;;:::i;:::-;;;;;;;;1082:354:::0;;;:::o;820:124::-;2072:4:1;877:18:0;;2505:16:1;2516:4;2505:10;:16::i;:::-;907:30:0::1;362:23;929:7;907:9;:30::i;:::-;820:124:::0;;:::o;5228:147:1:-;5312:18;5325:4;5312:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;5342:26:::1;5354:4;5360:7;5342:11;:26::i;:::-;5228:147:::0;;;:::o;829:155:6:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3334:103:1:-;3400:30;3411:4;3417:12;:10;:12::i;:::-;3400:10;:30::i;:::-;3334:103;:::o;7461:233::-;7544:22;7552:4;7558:7;7544;:22::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;:12::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;7865:234:1:-;7948:22;7956:4;7962:7;7948;:22::i;:::-;7944:149;;;8018:5;7986:6;:12;7993:4;7986:12;;;;;;;;;;;:20;;:29;8007:7;7986:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8069:12;:10;:12::i;:::-;8042:40;;8060:7;8042:40;;8054:4;8042:40;;;;;;;;;;7944:149;7865:234;;:::o;3718:479::-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:390;;3989:28;4009:7;3989:19;:28::i;:::-;4088:38;4116:4;4108:13;;4123:2;4088:19;:38::i;:::-;3896:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3844:336;;;;;;;;;;;:::i;:::-;;;;;;;;3801:390;3718:479;;:::o;2102:149:5:-;2160:13;2192:52;2220:4;2204:22;;311:2;2192:52;;:11;:52::i;:::-;2185:59;;2102:149;;;:::o;1513:437::-;1588:13;1613:19;1658:1;1649:6;1645:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:47;;1670:15;:6;1677:1;1670:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1695;:6;1702:1;1695:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1725:9;1750:1;1741:6;1737:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;1791:8;1808:3;1800:5;:11;1791:21;;;;;;;:::i;:::-;;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;1836:1;1826:11;;;;;1760:3;;;;:::i;:::-;;;1720:128;;;;1874:1;1865:5;:10;1857:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1936:6;1922:21;;;1513:437;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:9:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:77::-;2246:7;2275:5;2264:16;;2209:77;;;:::o;2292:122::-;2365:24;2383:5;2365:24;:::i;:::-;2358:5;2355:35;2345:63;;2404:1;2401;2394:12;2345:63;2292:122;:::o;2420:139::-;2466:5;2504:6;2491:20;2482:29;;2520:33;2547:5;2520:33;:::i;:::-;2420:139;;;;:::o;2565:329::-;2624:6;2673:2;2661:9;2652:7;2648:23;2644:32;2641:119;;;2679:79;;:::i;:::-;2641:119;2799:1;2824:53;2869:7;2860:6;2849:9;2845:22;2824:53;:::i;:::-;2814:63;;2770:117;2565:329;;;;:::o;2900:118::-;2987:24;3005:5;2987:24;:::i;:::-;2982:3;2975:37;2900:118;;:::o;3024:222::-;3117:4;3155:2;3144:9;3140:18;3132:26;;3168:71;3236:1;3225:9;3221:17;3212:6;3168:71;:::i;:::-;3024:222;;;;:::o;3252:126::-;3289:7;3329:42;3322:5;3318:54;3307:65;;3252:126;;;:::o;3384:96::-;3421:7;3450:24;3468:5;3450:24;:::i;:::-;3439:35;;3384:96;;;:::o;3486:122::-;3559:24;3577:5;3559:24;:::i;:::-;3552:5;3549:35;3539:63;;3598:1;3595;3588:12;3539:63;3486:122;:::o;3614:139::-;3660:5;3698:6;3685:20;3676:29;;3714:33;3741:5;3714:33;:::i;:::-;3614:139;;;;:::o;3759:474::-;3827:6;3835;3884:2;3872:9;3863:7;3859:23;3855:32;3852:119;;;3890:79;;:::i;:::-;3852:119;4010:1;4035:53;4080:7;4071:6;4060:9;4056:22;4035:53;:::i;:::-;4025:63;;3981:117;4137:2;4163:53;4208:7;4199:6;4188:9;4184:22;4163:53;:::i;:::-;4153:63;;4108:118;3759:474;;;;;:::o;4239:108::-;4316:24;4334:5;4316:24;:::i;:::-;4311:3;4304:37;4239:108;;:::o;4353:99::-;4424:21;4439:5;4424:21;:::i;:::-;4419:3;4412:34;4353:99;;:::o;4524:683::-;4669:4;4664:3;4660:14;4759:4;4752:5;4748:16;4742:23;4778:63;4835:4;4830:3;4826:14;4812:12;4778:63;:::i;:::-;4684:167;4938:4;4931:5;4927:16;4921:23;4957:63;5014:4;5009:3;5005:14;4991:12;4957:63;:::i;:::-;4861:169;5114:4;5107:5;5103:16;5097:23;5133:57;5184:4;5179:3;5175:14;5161:12;5133:57;:::i;:::-;5040:160;4638:569;4524:683;;:::o;5213:318::-;5354:4;5392:2;5381:9;5377:18;5369:26;;5405:119;5521:1;5510:9;5506:17;5497:6;5405:119;:::i;:::-;5213:318;;;;:::o;5537:118::-;5624:24;5642:5;5624:24;:::i;:::-;5619:3;5612:37;5537:118;;:::o;5661:430::-;5804:4;5842:2;5831:9;5827:18;5819:26;;5855:71;5923:1;5912:9;5908:17;5899:6;5855:71;:::i;:::-;5936:72;6004:2;5993:9;5989:18;5980:6;5936:72;:::i;:::-;6018:66;6080:2;6069:9;6065:18;6056:6;6018:66;:::i;:::-;5661:430;;;;;;:::o;6097:329::-;6156:6;6205:2;6193:9;6184:7;6180:23;6176:32;6173:119;;;6211:79;;:::i;:::-;6173:119;6331:1;6356:53;6401:7;6392:6;6381:9;6377:22;6356:53;:::i;:::-;6346:63;;6302:117;6097:329;;;;:::o;6432:474::-;6500:6;6508;6557:2;6545:9;6536:7;6532:23;6528:32;6525:119;;;6563:79;;:::i;:::-;6525:119;6683:1;6708:53;6753:7;6744:6;6733:9;6729:22;6708:53;:::i;:::-;6698:63;;6654:117;6810:2;6836:53;6881:7;6872:6;6861:9;6857:22;6836:53;:::i;:::-;6826:63;;6781:118;6432:474;;;;;:::o;6912:169::-;6996:11;7030:6;7025:3;7018:19;7070:4;7065:3;7061:14;7046:29;;6912:169;;;;:::o;7087:234::-;7227:34;7223:1;7215:6;7211:14;7204:58;7296:17;7291:2;7283:6;7279:15;7272:42;7087:234;:::o;7327:366::-;7469:3;7490:67;7554:2;7549:3;7490:67;:::i;:::-;7483:74;;7566:93;7655:3;7566:93;:::i;:::-;7684:2;7679:3;7675:12;7668:19;;7327:366;;;:::o;7699:419::-;7865:4;7903:2;7892:9;7888:18;7880:26;;7952:9;7946:4;7942:20;7938:1;7927:9;7923:17;7916:47;7980:131;8106:4;7980:131;:::i;:::-;7972:139;;7699:419;;;:::o;8124:169::-;8264:21;8260:1;8252:6;8248:14;8241:45;8124:169;:::o;8299:366::-;8441:3;8462:67;8526:2;8521:3;8462:67;:::i;:::-;8455:74;;8538:93;8627:3;8538:93;:::i;:::-;8656:2;8651:3;8647:12;8640:19;;8299:366;;;:::o;8671:419::-;8837:4;8875:2;8864:9;8860:18;8852:26;;8924:9;8918:4;8914:20;8910:1;8899:9;8895:17;8888:47;8952:131;9078:4;8952:131;:::i;:::-;8944:139;;8671:419;;;:::o;9096:222::-;9189:4;9227:2;9216:9;9212:18;9204:26;;9240:71;9308:1;9297:9;9293:17;9284:6;9240:71;:::i;:::-;9096:222;;;;:::o;9324:168::-;9464:20;9460:1;9452:6;9448:14;9441:44;9324:168;:::o;9498:366::-;9640:3;9661:67;9725:2;9720:3;9661:67;:::i;:::-;9654:74;;9737:93;9826:3;9737:93;:::i;:::-;9855:2;9850:3;9846:12;9839:19;;9498:366;;;:::o;9870:419::-;10036:4;10074:2;10063:9;10059:18;10051:26;;10123:9;10117:4;10113:20;10109:1;10098:9;10094:17;10087:47;10151:131;10277:4;10151:131;:::i;:::-;10143:139;;9870:419;;;:::o;10295:332::-;10416:4;10454:2;10443:9;10439:18;10431:26;;10467:71;10535:1;10524:9;10520:17;10511:6;10467:71;:::i;:::-;10548:72;10616:2;10605:9;10601:18;10592:6;10548:72;:::i;:::-;10295:332;;;;;:::o;10633:148::-;10735:11;10772:3;10757:18;;10633:148;;;;:::o;10787:173::-;10927:25;10923:1;10915:6;10911:14;10904:49;10787:173;:::o;10966:402::-;11126:3;11147:85;11229:2;11224:3;11147:85;:::i;:::-;11140:92;;11241:93;11330:3;11241:93;:::i;:::-;11359:2;11354:3;11350:12;11343:19;;10966:402;;;:::o;11374:99::-;11426:6;11460:5;11454:12;11444:22;;11374:99;;;:::o;11479:139::-;11568:6;11563:3;11558;11552:23;11609:1;11600:6;11595:3;11591:16;11584:27;11479:139;;;:::o;11624:390::-;11730:3;11758:39;11791:5;11758:39;:::i;:::-;11813:89;11895:6;11890:3;11813:89;:::i;:::-;11806:96;;11911:65;11969:6;11964:3;11957:4;11950:5;11946:16;11911:65;:::i;:::-;12001:6;11996:3;11992:16;11985:23;;11734:280;11624:390;;;;:::o;12020:167::-;12160:19;12156:1;12148:6;12144:14;12137:43;12020:167;:::o;12193:402::-;12353:3;12374:85;12456:2;12451:3;12374:85;:::i;:::-;12367:92;;12468:93;12557:3;12468:93;:::i;:::-;12586:2;12581:3;12577:12;12570:19;;12193:402;;;:::o;12601:967::-;12983:3;13005:148;13149:3;13005:148;:::i;:::-;12998:155;;13170:95;13261:3;13252:6;13170:95;:::i;:::-;13163:102;;13282:148;13426:3;13282:148;:::i;:::-;13275:155;;13447:95;13538:3;13529:6;13447:95;:::i;:::-;13440:102;;13559:3;13552:10;;12601:967;;;;;:::o;13574:102::-;13615:6;13666:2;13662:7;13657:2;13650:5;13646:14;13642:28;13632:38;;13574:102;;;:::o;13682:377::-;13770:3;13798:39;13831:5;13798:39;:::i;:::-;13853:71;13917:6;13912:3;13853:71;:::i;:::-;13846:78;;13933:65;13991:6;13986:3;13979:4;13972:5;13968:16;13933:65;:::i;:::-;14023:29;14045:6;14023:29;:::i;:::-;14018:3;14014:39;14007:46;;13774:285;13682:377;;;;:::o;14065:313::-;14178:4;14216:2;14205:9;14201:18;14193:26;;14265:9;14259:4;14255:20;14251:1;14240:9;14236:17;14229:47;14293:78;14366:4;14357:6;14293:78;:::i;:::-;14285:86;;14065:313;;;;:::o;14384:180::-;14432:77;14429:1;14422:88;14529:4;14526:1;14519:15;14553:4;14550:1;14543:15;14570:410;14610:7;14633:20;14651:1;14633:20;:::i;:::-;14628:25;;14667:20;14685:1;14667:20;:::i;:::-;14662:25;;14722:1;14719;14715:9;14744:30;14762:11;14744:30;:::i;:::-;14733:41;;14923:1;14914:7;14910:15;14907:1;14904:22;14884:1;14877:9;14857:83;14834:139;;14953:18;;:::i;:::-;14834:139;14618:362;14570:410;;;;:::o;14986:191::-;15026:3;15045:20;15063:1;15045:20;:::i;:::-;15040:25;;15079:20;15097:1;15079:20;:::i;:::-;15074:25;;15122:1;15119;15115:9;15108:16;;15143:3;15140:1;15137:10;15134:36;;;15150:18;;:::i;:::-;15134:36;14986:191;;;;:::o;15183:180::-;15231:77;15228:1;15221:88;15328:4;15325:1;15318:15;15352:4;15349:1;15342:15;15369:180;15417:77;15414:1;15407:88;15514:4;15511:1;15504:15;15538:4;15535:1;15528:15;15555:171;15594:3;15617:24;15635:5;15617:24;:::i;:::-;15608:33;;15663:4;15656:5;15653:15;15650:41;;15671:18;;:::i;:::-;15650:41;15718:1;15711:5;15707:13;15700:20;;15555:171;;;:::o;15732:182::-;15872:34;15868:1;15860:6;15856:14;15849:58;15732:182;:::o;15920:366::-;16062:3;16083:67;16147:2;16142:3;16083:67;:::i;:::-;16076:74;;16159:93;16248:3;16159:93;:::i;:::-;16277:2;16272:3;16268:12;16261:19;;15920:366;;;:::o;16292:419::-;16458:4;16496:2;16485:9;16481:18;16473:26;;16545:9;16539:4;16535:20;16531:1;16520:9;16516:17;16509:47;16573:131;16699:4;16573:131;:::i;:::-;16565:139;;16292:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1182400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "414",
								"DEFAULT_ADMIN_ROLE()": "352",
								"gameDelete(uint256)": "infinite",
								"gameInfos(uint256)": "infinite",
								"gameRegister(uint256,uint256)": "infinite",
								"gameUpdate(uint256)": "infinite",
								"getGameInfo(uint256)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantAdminRole(address)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3189",
								"isGameExists(uint256)": "2862",
								"renounceRole(bytes32,address)": "infinite",
								"revokeAdminRole(address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 2155,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 281,
									"end": 2155,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 281,
									"end": 2155,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 697,
									"end": 814,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 697,
									"end": 814,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 697,
									"end": 814,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 697,
									"end": 814,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 697,
									"end": 814,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 697,
									"end": 814,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 697,
									"end": 814,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 697,
									"end": 814,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 697,
									"end": 814,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 697,
									"end": 814,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 697,
									"end": 814,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 721,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 732,
									"end": 750,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 732,
									"end": 750,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 752,
									"end": 762,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 721,
									"end": 731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 721,
									"end": 731,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 721,
									"end": 731,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 721,
									"end": 763,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 721,
									"end": 763,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 721,
									"end": 763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 721,
									"end": 763,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 721,
									"end": 763,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 773,
									"end": 807,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 362,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 796,
									"end": 806,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 773,
									"end": 783,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 773,
									"end": 783,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 773,
									"end": 783,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 773,
									"end": 807,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 773,
									"end": 807,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 773,
									"end": 807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 773,
									"end": 807,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 773,
									"end": 807,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 281,
									"end": 2155,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 281,
									"end": 2155,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6811,
									"end": 6921,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 6811,
									"end": 6921,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6889,
									"end": 6914,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 6900,
									"end": 6904,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 6913,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6889,
									"end": 6899,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 6889,
									"end": 6899,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6889,
									"end": 6899,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6889,
									"end": 6914,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6889,
									"end": 6914,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6889,
									"end": 6914,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6889,
									"end": 6914,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 6889,
									"end": 6914,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6811,
									"end": 6921,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6811,
									"end": 6921,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6811,
									"end": 6921,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 7552,
									"end": 7556,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7558,
									"end": 7565,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7544,
									"end": 7566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7614,
									"end": 7618,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7582,
									"end": 7588,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7589,
									"end": 7593,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7602,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7602,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7603,
									"end": 7610,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7664,
									"end": 7676,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7655,
									"end": 7662,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7649,
									"end": 7653,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 1,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3011,
									"end": 3015,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3025,
									"end": 3032,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 281,
									"end": 2155,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 281,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 281,
									"end": 2155,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 2155,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 281,
									"end": 2155,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 2155,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 2155,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 281,
									"end": 2155,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 2155,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b617243c6cac18e4e709b6acc4d56dbe578787b6dc4b0d0a1a8b80a55d72917864736f6c634300081a0033",
									".code": [
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "7D1B4687"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "B638D158"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "C634B78E"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "7D1B4687"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "89B2C8E7"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "9A19C7B0"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "47E1D550"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "4F0CE4DF"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "75B238FC"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "1833FDF9"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 2155,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2035,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2035,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2035,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1842,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1842,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1842,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1442,
											"end": 1619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1442,
											"end": 1619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 325,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 325,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 325,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 325,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 325,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 325,
											"end": 385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 325,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 325,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 325,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 325,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 325,
											"end": 385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 325,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 385,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 494,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 494,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 494,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1625,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1625,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 950,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 950,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1082,
											"end": 1436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1082,
											"end": 1436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 820,
											"end": 944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 820,
											"end": 944,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 820,
											"end": 944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 820,
											"end": 944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 820,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 820,
											"end": 944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 820,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 820,
											"end": 944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2789,
											"end": 2800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2765,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2120,
											"end": 2138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2137,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2120,
											"end": 2138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2120,
											"end": 2138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2138,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2145,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2120,
											"end": 2145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2145,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2120,
											"end": 2145,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2145,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2145,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2120,
											"end": 2145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2113,
											"end": 2145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2113,
											"end": 2145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2035,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4899,
											"end": 4903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4886,
											"end": 4904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4927,
											"end": 4931,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4940,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4916,
											"end": 4941,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6018,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6018,
											"end": 6030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5999,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6111,
											"end": 6118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 6093,
											"end": 6119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1903,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1903,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1903,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 1955,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1956,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1963,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1938,
											"end": 1963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1963,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1938,
											"end": 1963,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1963,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1963,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1938,
											"end": 1963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1930,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1930,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2004,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2022,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 2029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1527,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1544,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1545,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1545,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1545,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1545,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1545,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1545,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1545,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1527,
											"end": 1552,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1519,
											"end": 1576,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1519,
											"end": 1576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8DA554679CE754233202E83B51AEFA8BE576E0A49851A9DDD4686DFD94BA6093"
										},
										{
											"begin": 1604,
											"end": 1611,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1612,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1592,
											"end": 1612,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1592,
											"end": 1612,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1592,
											"end": 1612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1612,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1612,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1612,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1612,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1612,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 325,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 325,
											"end": 385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 325,
											"end": 385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 494,
											"end": 539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 494,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1727,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1728,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1728,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1728,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1728,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1728,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1728,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1728,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1710,
											"end": 1735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1735,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1735,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1735,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1710,
											"end": 1735,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1702,
											"end": 1759,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1702,
											"end": 1759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1776,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1793,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1794,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1794,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1794,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1794,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1828,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5EF6221CC1C069A8C723210C08D526C7CA88540EE8D66470CF01844EFAAE0B94"
										},
										{
											"begin": 1809,
											"end": 1829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1829,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1829,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1829,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1829,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1829,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 1829,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3015,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1026,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 362,
											"end": 385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 1061,
											"end": 1068,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1038,
											"end": 1069,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1069,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1038,
											"end": 1069,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 950,
											"end": 1076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 950,
											"end": 1076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1189,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1206,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1207,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1189,
											"end": 1207,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1207,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1207,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1189,
											"end": 1207,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1207,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1189,
											"end": 1214,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1214,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1189,
											"end": 1214,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1214,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1189,
											"end": 1214,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1214,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1180,
											"end": 1237,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1180,
											"end": 1237,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1308,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1342,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1379,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1248,
											"end": 1266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1265,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1266,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1266,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1266,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1266,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1266,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1266,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1266,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1266,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "EEB0A161EDA325CEFB3F550C18E560490EA78827E2A4C3A9FA9C5E66CE871C3F"
										},
										{
											"begin": 1410,
											"end": 1417,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1428,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1429,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1429,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1395,
											"end": 1429,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1429,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1429,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1429,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1395,
											"end": 1429,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1429,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1395,
											"end": 1429,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1429,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1429,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1429,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1429,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1429,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1429,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 820,
											"end": 944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 895,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 907,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 362,
											"end": 385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 929,
											"end": 936,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 907,
											"end": 916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 907,
											"end": 937,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 907,
											"end": 937,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 907,
											"end": 937,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 820,
											"end": 944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5325,
											"end": 5329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5312,
											"end": 5330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5354,
											"end": 5358,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5360,
											"end": 5367,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5342,
											"end": 5368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3417,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3417,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3400,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 7552,
											"end": 7556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7558,
											"end": 7565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 7544,
											"end": 7566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7593,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7603,
											"end": 7610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7664,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7664,
											"end": 7676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7655,
											"end": 7662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7653,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7962,
											"end": 7969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 7948,
											"end": 7970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8018,
											"end": 8023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7993,
											"end": 7997,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8007,
											"end": 8014,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 8069,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8069,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 8099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3806,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4009,
											"end": 4016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 3989,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4116,
											"end": 4120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 4123,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4088,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4088,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 3896,
											"end": 4148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 3844,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2173,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2220,
											"end": 2224,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 311,
											"end": 313,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2192,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 1601,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1613,
											"end": 1632,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1649,
											"end": 1655,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1645,
											"end": 1655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1645,
											"end": 1659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1635,
											"end": 1660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 5,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1670,
											"end": 1676,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1670,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 5,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1695,
											"end": 1701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1695,
											"end": 1704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1737,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1737,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1757,
											"end": 1758,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1753,
											"end": 1754,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1753,
											"end": 1758,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1799,
											"name": "PUSH",
											"source": 5,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 1800,
											"end": 1805,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1791,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1786,
											"end": 1787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1779,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1837,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1760,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1865,
											"end": 1875,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1857,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1942,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "108"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2246,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2414,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2292,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2383,
											"end": 2388,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2365,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2355,
											"end": 2390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2406,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2414,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2510,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2491,
											"end": 2511,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2482,
											"end": 2511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2482,
											"end": 2511,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2520,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2553,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 2520,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2420,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 2630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2670,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2671,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2644,
											"end": 2676,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2679,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2799,
											"end": 2800,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 2869,
											"end": 2876,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2867,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2824,
											"end": 2877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2814,
											"end": 2877,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2814,
											"end": 2877,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2900,
											"end": 3018,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2900,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 3005,
											"end": 3010,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2987,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 3012,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2900,
											"end": 3018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2900,
											"end": 3018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2900,
											"end": 3018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3117,
											"end": 3121,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3157,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3144,
											"end": 3153,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3140,
											"end": 3158,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3132,
											"end": 3158,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3132,
											"end": 3158,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3168,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 3236,
											"end": 3237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3234,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3221,
											"end": 3238,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3168,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 3168,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3168,
											"end": 3239,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 3168,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3289,
											"end": 3296,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3371,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3372,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3252,
											"end": 3378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3428,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 3468,
											"end": 3473,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 3450,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3439,
											"end": 3474,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3439,
											"end": 3474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3608,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3486,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 3559,
											"end": 3583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3557,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3584,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3598,
											"end": 3599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3596,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3588,
											"end": 3600,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3608,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3705,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3705,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 3741,
											"end": 3746,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3714,
											"end": 3747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3614,
											"end": 3753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3827,
											"end": 3833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3884,
											"end": 3886,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3872,
											"end": 3881,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3863,
											"end": 3870,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3859,
											"end": 3882,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3855,
											"end": 3887,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 3890,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 4080,
											"end": 4087,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4071,
											"end": 4077,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4060,
											"end": 4069,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4056,
											"end": 4078,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 4035,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4025,
											"end": 4088,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4025,
											"end": 4088,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 4098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4139,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 4208,
											"end": 4215,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4205,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4188,
											"end": 4197,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 4163,
											"end": 4216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4216,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4216,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 4233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4239,
											"end": 4347,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 4239,
											"end": 4347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 4334,
											"end": 4339,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 4316,
											"end": 4340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4340,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 4316,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4314,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4341,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4239,
											"end": 4347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4239,
											"end": 4347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4239,
											"end": 4347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4452,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 4353,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 4439,
											"end": 4444,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 4424,
											"end": 4445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4445,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 4424,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4419,
											"end": 4422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4412,
											"end": 4446,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4524,
											"end": 5207,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 4524,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4669,
											"end": 4673,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4664,
											"end": 4667,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4660,
											"end": 4674,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4759,
											"end": 4763,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4752,
											"end": 4757,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4748,
											"end": 4764,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4742,
											"end": 4765,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4778,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 4835,
											"end": 4839,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4830,
											"end": 4833,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4812,
											"end": 4824,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4778,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 4778,
											"end": 4841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4778,
											"end": 4841,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 4778,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4684,
											"end": 4851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 4942,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4927,
											"end": 4943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4921,
											"end": 4944,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4957,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5014,
											"end": 5018,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5009,
											"end": 5012,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4991,
											"end": 5003,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4957,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 4957,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4957,
											"end": 5020,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 4957,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5114,
											"end": 5118,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5107,
											"end": 5112,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5103,
											"end": 5119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5097,
											"end": 5120,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5179,
											"end": 5182,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5175,
											"end": 5189,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 5133,
											"end": 5190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5190,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 5133,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4638,
											"end": 5207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4524,
											"end": 5207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4524,
											"end": 5207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4524,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5213,
											"end": 5531,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 5213,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5354,
											"end": 5358,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5394,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5381,
											"end": 5390,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5377,
											"end": 5395,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5369,
											"end": 5395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5369,
											"end": 5395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5510,
											"end": 5519,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5506,
											"end": 5523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 5405,
											"end": 5524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5524,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 5405,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5213,
											"end": 5531,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5213,
											"end": 5531,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5213,
											"end": 5531,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5213,
											"end": 5531,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5213,
											"end": 5531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5655,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 5537,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5624,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5642,
											"end": 5647,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5624,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 5624,
											"end": 5648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5624,
											"end": 5648,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5624,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5619,
											"end": 5622,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5612,
											"end": 5649,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5537,
											"end": 5655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 6091,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 5661,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5804,
											"end": 5808,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5842,
											"end": 5844,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5831,
											"end": 5840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5827,
											"end": 5845,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5819,
											"end": 5845,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5819,
											"end": 5845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5855,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 5923,
											"end": 5924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5912,
											"end": 5921,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5908,
											"end": 5925,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 5905,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5855,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 5855,
											"end": 5926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5855,
											"end": 5926,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 5855,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5936,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 6004,
											"end": 6006,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5993,
											"end": 6002,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 6007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5980,
											"end": 5986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5936,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 5936,
											"end": 6008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5936,
											"end": 6008,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5936,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6018,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 6080,
											"end": 6082,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6065,
											"end": 6083,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6056,
											"end": 6062,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6018,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 6018,
											"end": 6084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6018,
											"end": 6084,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 6018,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 6091,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 6091,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 6091,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 6091,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 6091,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 6091,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 6091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6426,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 6097,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6162,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6205,
											"end": 6207,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6193,
											"end": 6202,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6184,
											"end": 6191,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6203,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6176,
											"end": 6208,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6292,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 6173,
											"end": 6292,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 6211,
											"end": 6290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6292,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 6173,
											"end": 6292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6331,
											"end": 6332,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6356,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 6401,
											"end": 6408,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6392,
											"end": 6398,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6381,
											"end": 6390,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6399,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6356,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 6356,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6356,
											"end": 6409,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 6356,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6346,
											"end": 6409,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6346,
											"end": 6409,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6302,
											"end": 6419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6426,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6432,
											"end": 6906,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 6432,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6500,
											"end": 6506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6508,
											"end": 6514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6559,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6545,
											"end": 6554,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6536,
											"end": 6543,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6532,
											"end": 6555,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6560,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6644,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 6525,
											"end": 6644,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 6563,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 6563,
											"end": 6642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6642,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 6563,
											"end": 6642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6644,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 6525,
											"end": 6644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6683,
											"end": 6684,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6708,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 6753,
											"end": 6760,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6744,
											"end": 6750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6742,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6708,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 6708,
											"end": 6761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6708,
											"end": 6761,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 6708,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6698,
											"end": 6761,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6698,
											"end": 6761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6654,
											"end": 6771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6810,
											"end": 6812,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6836,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 6881,
											"end": 6888,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6872,
											"end": 6878,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6861,
											"end": 6870,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6857,
											"end": 6879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 6836,
											"end": 6889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6889,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 6836,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6781,
											"end": 6899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6432,
											"end": 6906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6432,
											"end": 6906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6432,
											"end": 6906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6432,
											"end": 6906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6432,
											"end": 6906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6432,
											"end": 6906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6912,
											"end": 7081,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 6912,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6996,
											"end": 7007,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7030,
											"end": 7036,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7025,
											"end": 7028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7018,
											"end": 7037,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7070,
											"end": 7074,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7065,
											"end": 7068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7061,
											"end": 7075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7046,
											"end": 7075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7046,
											"end": 7075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6912,
											"end": 7081,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6912,
											"end": 7081,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6912,
											"end": 7081,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6912,
											"end": 7081,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6912,
											"end": 7081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7321,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 7087,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7227,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 7223,
											"end": 7224,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7215,
											"end": 7221,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7225,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7204,
											"end": 7262,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7296,
											"end": 7313,
											"name": "PUSH",
											"source": 9,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 7291,
											"end": 7293,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7283,
											"end": 7289,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7279,
											"end": 7294,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7272,
											"end": 7314,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7087,
											"end": 7321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7693,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 7327,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7469,
											"end": 7472,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7490,
											"end": 7557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 7554,
											"end": 7556,
											"name": "PUSH",
											"source": 9,
											"value": "2F"
										},
										{
											"begin": 7549,
											"end": 7552,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7490,
											"end": 7557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 7490,
											"end": 7557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7490,
											"end": 7557,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 7490,
											"end": 7557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7557,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7566,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 7655,
											"end": 7658,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7566,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 7566,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7566,
											"end": 7659,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 7566,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7684,
											"end": 7686,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7682,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7675,
											"end": 7687,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7668,
											"end": 7687,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7668,
											"end": 7687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7693,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7699,
											"end": 8118,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 7699,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7865,
											"end": 7869,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7903,
											"end": 7905,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7892,
											"end": 7901,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7888,
											"end": 7906,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7880,
											"end": 7906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7880,
											"end": 7906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7952,
											"end": 7961,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7946,
											"end": 7950,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7942,
											"end": 7962,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7938,
											"end": 7939,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7927,
											"end": 7936,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7923,
											"end": 7940,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7916,
											"end": 7963,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7980,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 8106,
											"end": 8110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7980,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 7980,
											"end": 8111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7980,
											"end": 8111,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 7980,
											"end": 8111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7972,
											"end": 8111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7972,
											"end": 8111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7699,
											"end": 8118,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7699,
											"end": 8118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7699,
											"end": 8118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7699,
											"end": 8118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8293,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 8124,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8264,
											"end": 8285,
											"name": "PUSH",
											"source": 9,
											"value": "47616D6520646F6573206E6F7420657869737400000000000000000000000000"
										},
										{
											"begin": 8260,
											"end": 8261,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8252,
											"end": 8258,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8248,
											"end": 8262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8241,
											"end": 8286,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8665,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 8299,
											"end": 8665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8441,
											"end": 8444,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8462,
											"end": 8529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 8526,
											"end": 8528,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 8521,
											"end": 8524,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8462,
											"end": 8529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 8462,
											"end": 8529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8462,
											"end": 8529,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 8462,
											"end": 8529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8455,
											"end": 8529,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8455,
											"end": 8529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8538,
											"end": 8631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 8627,
											"end": 8630,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8538,
											"end": 8631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 8538,
											"end": 8631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8538,
											"end": 8631,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 8538,
											"end": 8631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8656,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8651,
											"end": 8654,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8647,
											"end": 8659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8640,
											"end": 8659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8665,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8665,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8671,
											"end": 9090,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 8671,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8841,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8875,
											"end": 8877,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8864,
											"end": 8873,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8860,
											"end": 8878,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8852,
											"end": 8878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8852,
											"end": 8878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8924,
											"end": 8933,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8918,
											"end": 8922,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8910,
											"end": 8911,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8908,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8895,
											"end": 8912,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8888,
											"end": 8935,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 9078,
											"end": 9082,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 8952,
											"end": 9083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 9083,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8952,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8944,
											"end": 9083,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8944,
											"end": 9083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8671,
											"end": 9090,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8671,
											"end": 9090,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8671,
											"end": 9090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8671,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9096,
											"end": 9318,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 9096,
											"end": 9318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9189,
											"end": 9193,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9227,
											"end": 9229,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9216,
											"end": 9225,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9212,
											"end": 9230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9204,
											"end": 9230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9204,
											"end": 9230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9240,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 9308,
											"end": 9309,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9297,
											"end": 9306,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9293,
											"end": 9310,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9284,
											"end": 9290,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9240,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 9240,
											"end": 9311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9240,
											"end": 9311,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 9240,
											"end": 9311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9096,
											"end": 9318,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9096,
											"end": 9318,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9096,
											"end": 9318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9096,
											"end": 9318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9096,
											"end": 9318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9324,
											"end": 9492,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 9324,
											"end": 9492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9464,
											"end": 9484,
											"name": "PUSH",
											"source": 9,
											"value": "47616D6520616C72656164792065786973740000000000000000000000000000"
										},
										{
											"begin": 9460,
											"end": 9461,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9452,
											"end": 9458,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9448,
											"end": 9462,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9441,
											"end": 9485,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9324,
											"end": 9492,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9324,
											"end": 9492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9498,
											"end": 9864,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 9498,
											"end": 9864,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9640,
											"end": 9643,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9661,
											"end": 9728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 9725,
											"end": 9727,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 9720,
											"end": 9723,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9661,
											"end": 9728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 9661,
											"end": 9728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9661,
											"end": 9728,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 9661,
											"end": 9728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9728,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9728,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9737,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 9826,
											"end": 9829,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9737,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 9737,
											"end": 9830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9737,
											"end": 9830,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 9737,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9855,
											"end": 9857,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9850,
											"end": 9853,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9846,
											"end": 9858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9839,
											"end": 9858,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9839,
											"end": 9858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9498,
											"end": 9864,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9498,
											"end": 9864,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9498,
											"end": 9864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9498,
											"end": 9864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9870,
											"end": 10289,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 9870,
											"end": 10289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10036,
											"end": 10040,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10074,
											"end": 10076,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10063,
											"end": 10072,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10059,
											"end": 10077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10051,
											"end": 10077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10051,
											"end": 10077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10123,
											"end": 10132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10117,
											"end": 10121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10133,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10109,
											"end": 10110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10098,
											"end": 10107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10094,
											"end": 10111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10087,
											"end": 10134,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 10277,
											"end": 10281,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 10151,
											"end": 10282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10282,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 10151,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10143,
											"end": 10282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10143,
											"end": 10282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9870,
											"end": 10289,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9870,
											"end": 10289,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9870,
											"end": 10289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9870,
											"end": 10289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10295,
											"end": 10627,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 10295,
											"end": 10627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10420,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10454,
											"end": 10456,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10443,
											"end": 10452,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10439,
											"end": 10457,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10431,
											"end": 10457,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10431,
											"end": 10457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10467,
											"end": 10538,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 10535,
											"end": 10536,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10524,
											"end": 10533,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10520,
											"end": 10537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10511,
											"end": 10517,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10467,
											"end": 10538,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 10467,
											"end": 10538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10467,
											"end": 10538,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 10467,
											"end": 10538,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10548,
											"end": 10620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 10616,
											"end": 10618,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10605,
											"end": 10614,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10601,
											"end": 10619,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10592,
											"end": 10598,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10548,
											"end": 10620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 10548,
											"end": 10620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10548,
											"end": 10620,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 10548,
											"end": 10620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10295,
											"end": 10627,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10295,
											"end": 10627,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10295,
											"end": 10627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10295,
											"end": 10627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10295,
											"end": 10627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10295,
											"end": 10627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10633,
											"end": 10781,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 10633,
											"end": 10781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10735,
											"end": 10746,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10772,
											"end": 10775,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10757,
											"end": 10775,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10757,
											"end": 10775,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10633,
											"end": 10781,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10633,
											"end": 10781,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10633,
											"end": 10781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10633,
											"end": 10781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10633,
											"end": 10781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10787,
											"end": 10960,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 10787,
											"end": 10960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "PUSH",
											"source": 9,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 10923,
											"end": 10924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10915,
											"end": 10921,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10911,
											"end": 10925,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10904,
											"end": 10953,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10787,
											"end": 10960,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10787,
											"end": 10960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10966,
											"end": 11368,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 10966,
											"end": 11368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11126,
											"end": 11129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11147,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 11229,
											"end": 11231,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 11224,
											"end": 11227,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11147,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 11147,
											"end": 11232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11147,
											"end": 11232,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 11147,
											"end": 11232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11140,
											"end": 11232,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11140,
											"end": 11232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11241,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 11330,
											"end": 11333,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11241,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 11241,
											"end": 11334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11241,
											"end": 11334,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 11241,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11359,
											"end": 11361,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 11354,
											"end": 11357,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11350,
											"end": 11362,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11343,
											"end": 11362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11343,
											"end": 11362,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10966,
											"end": 11368,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10966,
											"end": 11368,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10966,
											"end": 11368,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10966,
											"end": 11368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11374,
											"end": 11473,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 11374,
											"end": 11473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11426,
											"end": 11432,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11460,
											"end": 11465,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11454,
											"end": 11466,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11444,
											"end": 11466,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11444,
											"end": 11466,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11374,
											"end": 11473,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11374,
											"end": 11473,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11374,
											"end": 11473,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11374,
											"end": 11473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11479,
											"end": 11618,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 11479,
											"end": 11618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11568,
											"end": 11574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11563,
											"end": 11566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11558,
											"end": 11561,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11552,
											"end": 11575,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 11609,
											"end": 11610,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11600,
											"end": 11606,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11595,
											"end": 11598,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11591,
											"end": 11607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11584,
											"end": 11611,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11479,
											"end": 11618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11479,
											"end": 11618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11479,
											"end": 11618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11479,
											"end": 11618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11624,
											"end": 12014,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 11624,
											"end": 12014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11730,
											"end": 11733,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11758,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 11791,
											"end": 11796,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11758,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 11758,
											"end": 11797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11758,
											"end": 11797,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 11758,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11813,
											"end": 11902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 11895,
											"end": 11901,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11890,
											"end": 11893,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11813,
											"end": 11902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 11813,
											"end": 11902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11813,
											"end": 11902,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 11813,
											"end": 11902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11806,
											"end": 11902,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11806,
											"end": 11902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11911,
											"end": 11976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 11969,
											"end": 11975,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11964,
											"end": 11967,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11957,
											"end": 11961,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11950,
											"end": 11955,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11946,
											"end": 11962,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11911,
											"end": 11976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 11911,
											"end": 11976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11911,
											"end": 11976,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 11911,
											"end": 11976,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12001,
											"end": 12007,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11996,
											"end": 11999,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11992,
											"end": 12008,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11985,
											"end": 12008,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11985,
											"end": 12008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11734,
											"end": 12014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11624,
											"end": 12014,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11624,
											"end": 12014,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11624,
											"end": 12014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11624,
											"end": 12014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11624,
											"end": 12014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12020,
											"end": 12187,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 12020,
											"end": 12187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12160,
											"end": 12179,
											"name": "PUSH",
											"source": 9,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 12156,
											"end": 12157,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12148,
											"end": 12154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12144,
											"end": 12158,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12137,
											"end": 12180,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12020,
											"end": 12187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12020,
											"end": 12187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12193,
											"end": 12595,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 12193,
											"end": 12595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12353,
											"end": 12356,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12374,
											"end": 12459,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 12456,
											"end": 12458,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 12451,
											"end": 12454,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12374,
											"end": 12459,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 12374,
											"end": 12459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12374,
											"end": 12459,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 12374,
											"end": 12459,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12367,
											"end": 12459,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12367,
											"end": 12459,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12468,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 12557,
											"end": 12560,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12468,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 12468,
											"end": 12561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12468,
											"end": 12561,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 12468,
											"end": 12561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12586,
											"end": 12588,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 12581,
											"end": 12584,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12577,
											"end": 12589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12193,
											"end": 12595,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12193,
											"end": 12595,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12193,
											"end": 12595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12193,
											"end": 12595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12601,
											"end": 13568,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 12601,
											"end": 13568,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12983,
											"end": 12986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13005,
											"end": 13153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 13149,
											"end": 13152,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13005,
											"end": 13153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 13005,
											"end": 13153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13005,
											"end": 13153,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 13005,
											"end": 13153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12998,
											"end": 13153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12998,
											"end": 13153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13170,
											"end": 13265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 13261,
											"end": 13264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13252,
											"end": 13258,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13170,
											"end": 13265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 13170,
											"end": 13265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13170,
											"end": 13265,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 13170,
											"end": 13265,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13163,
											"end": 13265,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13163,
											"end": 13265,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13282,
											"end": 13430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 13426,
											"end": 13429,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13282,
											"end": 13430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 13282,
											"end": 13430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13282,
											"end": 13430,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 13282,
											"end": 13430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13275,
											"end": 13430,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13275,
											"end": 13430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13447,
											"end": 13542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 13538,
											"end": 13541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13529,
											"end": 13535,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13447,
											"end": 13542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 13447,
											"end": 13542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13447,
											"end": 13542,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 13447,
											"end": 13542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13440,
											"end": 13542,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13440,
											"end": 13542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13559,
											"end": 13562,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13552,
											"end": 13562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13552,
											"end": 13562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12601,
											"end": 13568,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12601,
											"end": 13568,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12601,
											"end": 13568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12601,
											"end": 13568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12601,
											"end": 13568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12601,
											"end": 13568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13574,
											"end": 13676,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 13574,
											"end": 13676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13615,
											"end": 13621,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13666,
											"end": 13668,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 13662,
											"end": 13669,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 13657,
											"end": 13659,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 13650,
											"end": 13655,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13646,
											"end": 13660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13642,
											"end": 13670,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13632,
											"end": 13670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13632,
											"end": 13670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13574,
											"end": 13676,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13574,
											"end": 13676,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13574,
											"end": 13676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13574,
											"end": 13676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13682,
											"end": 14059,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 13682,
											"end": 14059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13770,
											"end": 13773,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13798,
											"end": 13837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 13831,
											"end": 13836,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13798,
											"end": 13837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 13798,
											"end": 13837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13798,
											"end": 13837,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 13798,
											"end": 13837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13853,
											"end": 13924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 13917,
											"end": 13923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13912,
											"end": 13915,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13853,
											"end": 13924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 13853,
											"end": 13924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13853,
											"end": 13924,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 13853,
											"end": 13924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13846,
											"end": 13924,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13846,
											"end": 13924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13933,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 13991,
											"end": 13997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13986,
											"end": 13989,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13979,
											"end": 13983,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13972,
											"end": 13977,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13968,
											"end": 13984,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13933,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 13933,
											"end": 13998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13933,
											"end": 13998,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 13933,
											"end": 13998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14023,
											"end": 14052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 14045,
											"end": 14051,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14023,
											"end": 14052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 14023,
											"end": 14052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14023,
											"end": 14052,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 14023,
											"end": 14052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14018,
											"end": 14021,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14014,
											"end": 14053,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14007,
											"end": 14053,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14007,
											"end": 14053,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13774,
											"end": 14059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13682,
											"end": 14059,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13682,
											"end": 14059,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13682,
											"end": 14059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13682,
											"end": 14059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13682,
											"end": 14059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14065,
											"end": 14378,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 14065,
											"end": 14378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14178,
											"end": 14182,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14216,
											"end": 14218,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14205,
											"end": 14214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14201,
											"end": 14219,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14193,
											"end": 14219,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14193,
											"end": 14219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14265,
											"end": 14274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14259,
											"end": 14263,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14255,
											"end": 14275,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14251,
											"end": 14252,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14240,
											"end": 14249,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14236,
											"end": 14253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14229,
											"end": 14276,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14293,
											"end": 14371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 14366,
											"end": 14370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14357,
											"end": 14363,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14293,
											"end": 14371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 14293,
											"end": 14371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14293,
											"end": 14371,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 14293,
											"end": 14371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14285,
											"end": 14371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14285,
											"end": 14371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14065,
											"end": 14378,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14065,
											"end": 14378,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14065,
											"end": 14378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14065,
											"end": 14378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14065,
											"end": 14378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14384,
											"end": 14564,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 14384,
											"end": 14564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14432,
											"end": 14509,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14429,
											"end": 14430,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14422,
											"end": 14510,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14529,
											"end": 14533,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 14526,
											"end": 14527,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14519,
											"end": 14534,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14553,
											"end": 14557,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14550,
											"end": 14551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14543,
											"end": 14558,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14570,
											"end": 14980,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 14570,
											"end": 14980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14610,
											"end": 14617,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14633,
											"end": 14653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 14651,
											"end": 14652,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14633,
											"end": 14653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 14633,
											"end": 14653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14633,
											"end": 14653,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 14633,
											"end": 14653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14628,
											"end": 14653,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14628,
											"end": 14653,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14667,
											"end": 14687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 14685,
											"end": 14686,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14667,
											"end": 14687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 14667,
											"end": 14687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14667,
											"end": 14687,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 14667,
											"end": 14687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14662,
											"end": 14687,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14662,
											"end": 14687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14722,
											"end": 14723,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14719,
											"end": 14720,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14715,
											"end": 14724,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 14762,
											"end": 14773,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 14744,
											"end": 14774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14774,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 14744,
											"end": 14774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14733,
											"end": 14774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14733,
											"end": 14774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14923,
											"end": 14924,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14914,
											"end": 14921,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14910,
											"end": 14925,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 14907,
											"end": 14908,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14904,
											"end": 14926,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14884,
											"end": 14885,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14877,
											"end": 14886,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14857,
											"end": 14940,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 14834,
											"end": 14973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 14834,
											"end": 14973,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14953,
											"end": 14971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 14953,
											"end": 14971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 14953,
											"end": 14971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14953,
											"end": 14971,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 14953,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14834,
											"end": 14973,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 14834,
											"end": 14973,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14618,
											"end": 14980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14570,
											"end": 14980,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14570,
											"end": 14980,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14570,
											"end": 14980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14570,
											"end": 14980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14570,
											"end": 14980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14986,
											"end": 15177,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 14986,
											"end": 15177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15026,
											"end": 15029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15045,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 15063,
											"end": 15064,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15045,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 15045,
											"end": 15065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15045,
											"end": 15065,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 15045,
											"end": 15065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15040,
											"end": 15065,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15040,
											"end": 15065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15079,
											"end": 15099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 15097,
											"end": 15098,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15079,
											"end": 15099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 15079,
											"end": 15099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15079,
											"end": 15099,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 15079,
											"end": 15099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15074,
											"end": 15099,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15074,
											"end": 15099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15122,
											"end": 15123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15119,
											"end": 15120,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15115,
											"end": 15124,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15108,
											"end": 15124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15108,
											"end": 15124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15143,
											"end": 15146,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15140,
											"end": 15141,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15137,
											"end": 15147,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 15134,
											"end": 15170,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15134,
											"end": 15170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 15134,
											"end": 15170,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15150,
											"end": 15168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 15150,
											"end": 15168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 15150,
											"end": 15168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15150,
											"end": 15168,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 15150,
											"end": 15168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15134,
											"end": 15170,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 15134,
											"end": 15170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14986,
											"end": 15177,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14986,
											"end": 15177,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14986,
											"end": 15177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14986,
											"end": 15177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14986,
											"end": 15177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15363,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 15183,
											"end": 15363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15231,
											"end": 15308,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15228,
											"end": 15229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15221,
											"end": 15309,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15328,
											"end": 15332,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 15325,
											"end": 15326,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15318,
											"end": 15333,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15352,
											"end": 15356,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15349,
											"end": 15350,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15342,
											"end": 15357,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15369,
											"end": 15549,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 15369,
											"end": 15549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15417,
											"end": 15494,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15414,
											"end": 15415,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15407,
											"end": 15495,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15514,
											"end": 15518,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 15511,
											"end": 15512,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15504,
											"end": 15519,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15538,
											"end": 15542,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15535,
											"end": 15536,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15528,
											"end": 15543,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15555,
											"end": 15726,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 15555,
											"end": 15726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15594,
											"end": 15597,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15617,
											"end": 15641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 15635,
											"end": 15640,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15617,
											"end": 15641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 15617,
											"end": 15641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15617,
											"end": 15641,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 15617,
											"end": 15641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15608,
											"end": 15641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15608,
											"end": 15641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15663,
											"end": 15667,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15656,
											"end": 15661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15653,
											"end": 15668,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15650,
											"end": 15691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 15650,
											"end": 15691,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15671,
											"end": 15689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 15671,
											"end": 15689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 15671,
											"end": 15689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15671,
											"end": 15689,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 15671,
											"end": 15689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15650,
											"end": 15691,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 15650,
											"end": 15691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 15711,
											"end": 15716,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15707,
											"end": 15720,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15700,
											"end": 15720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15700,
											"end": 15720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15555,
											"end": 15726,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15555,
											"end": 15726,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15555,
											"end": 15726,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15555,
											"end": 15726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15732,
											"end": 15914,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 15732,
											"end": 15914,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15872,
											"end": 15906,
											"name": "PUSH",
											"source": 9,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 15868,
											"end": 15869,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15860,
											"end": 15866,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15856,
											"end": 15870,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15849,
											"end": 15907,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15732,
											"end": 15914,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15732,
											"end": 15914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15920,
											"end": 16286,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 15920,
											"end": 16286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16062,
											"end": 16065,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16083,
											"end": 16150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 16147,
											"end": 16149,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16142,
											"end": 16145,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16083,
											"end": 16150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 16083,
											"end": 16150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16083,
											"end": 16150,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 16083,
											"end": 16150,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16076,
											"end": 16150,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16076,
											"end": 16150,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16159,
											"end": 16252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 16248,
											"end": 16251,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16159,
											"end": 16252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 16159,
											"end": 16252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16159,
											"end": 16252,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 16159,
											"end": 16252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16277,
											"end": 16279,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16272,
											"end": 16275,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16268,
											"end": 16280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16261,
											"end": 16280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16261,
											"end": 16280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15920,
											"end": 16286,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15920,
											"end": 16286,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15920,
											"end": 16286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15920,
											"end": 16286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16292,
											"end": 16711,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 16292,
											"end": 16711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16458,
											"end": 16462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16496,
											"end": 16498,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16485,
											"end": 16494,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16481,
											"end": 16499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16473,
											"end": 16499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16473,
											"end": 16499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16545,
											"end": 16554,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16539,
											"end": 16543,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16535,
											"end": 16555,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16531,
											"end": 16532,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16520,
											"end": 16529,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16516,
											"end": 16533,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16509,
											"end": 16556,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16573,
											"end": 16704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 16699,
											"end": 16703,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16573,
											"end": 16704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 16573,
											"end": 16704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16573,
											"end": 16704,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 16573,
											"end": 16704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16565,
											"end": 16704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16565,
											"end": 16704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16292,
											"end": 16711,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16292,
											"end": 16711,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16292,
											"end": 16711,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16292,
											"end": 16711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"contracts/v2/TikTrixGame.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"gameDelete(uint256)": "89b2c8e7",
							"gameInfos(uint256)": "7d1b4687",
							"gameRegister(uint256,uint256)": "b638d158",
							"gameUpdate(uint256)": "4f0ce4df",
							"getGameInfo(uint256)": "47e1d550",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantAdminRole(address)": "c634b78e",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isGameExists(uint256)": "1833fdf9",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeAdminRole(address)": "9a19c7b0",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"}],\"name\":\"GameDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"memberSeq\",\"type\":\"uint256\"}],\"name\":\"GameRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"}],\"name\":\"GameUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"}],\"name\":\"gameDelete\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gameInfos\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memberSeq\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memberSeq\",\"type\":\"uint256\"}],\"name\":\"gameRegister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"}],\"name\":\"gameUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"}],\"name\":\"getGameInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memberSeq\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct TikTrixGame.GameInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"}],\"name\":\"isGameExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/v2/TikTrixGame.sol\":\"TikTrixGame\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/v2/TikTrixGame.sol\":{\"keccak256\":\"0x458edc5f1307019d0d3e13843e378e2dab20f1e611311ed3c7368aaed3fa711e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0edcb7bd735f852a555ffe1741c45cf98e5b9aa3d73063dd945f34ce03953d\",\"dweb:/ipfs/QmYVGmJCNo9daA7PWwH5aaUKMNSnDkzbnCqtaQLzgkYx5j\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 222,
								"contract": "contracts/v2/TikTrixGame.sol:TikTrixGame",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)217_storage)"
							},
							{
								"astId": 22,
								"contract": "contracts/v2/TikTrixGame.sol:TikTrixGame",
								"label": "gameInfos",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(GameInfo)17_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)217_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)217_storage"
							},
							"t_mapping(t_uint256,t_struct(GameInfo)17_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct TikTrixGame.GameInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(GameInfo)17_storage"
							},
							"t_struct(GameInfo)17_storage": {
								"encoding": "inplace",
								"label": "struct TikTrixGame.GameInfo",
								"members": [
									{
										"astId": 12,
										"contract": "contracts/v2/TikTrixGame.sol:TikTrixGame",
										"label": "gameSeq",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 14,
										"contract": "contracts/v2/TikTrixGame.sol:TikTrixGame",
										"label": "memberSeq",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 16,
										"contract": "contracts/v2/TikTrixGame.sol:TikTrixGame",
										"label": "exists",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(RoleData)217_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 214,
										"contract": "contracts/v2/TikTrixGame.sol:TikTrixGame",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 216,
										"contract": "contracts/v2/TikTrixGame.sol:TikTrixGame",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 222,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)217_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)217_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)217_storage"
							},
							"t_struct(RoleData)217_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 214,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 216,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206ae75260a3490092dfde8cd4040527636e14d162e6e37a9a613d66a4d124fad664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206ae75260a3490092dfde8cd4040527636e14d162e6e37a9a613d66a4d124fad664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xE75260A3490092DFDE8CD4 DIV SDIV 0x27 PUSH4 0x6E14D162 0xE6 0xE3 PUSH27 0x9A613D66A4D124FAD664736F6C634300081A003300000000000000 ",
							"sourceMap": "188:2065:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206ae75260a3490092dfde8cd4040527636e14d162e6e37a9a613d66a4d124fad664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xE75260A3490092DFDE8CD4 DIV SDIV 0x27 PUSH4 0x6E14D162 0xE6 0xE3 PUSH27 0x9A613D66A4D124FAD664736F6C634300081A003300000000000000 ",
							"sourceMap": "188:2065:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206ae75260a3490092dfde8cd4040527636e14d162e6e37a9a613d66a4d124fad664736f6c634300081a0033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/v2/TikTrixGame.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b21415a99b156e7fe2fa8a3ac50ded6766b7e152a30e3cac066bc4a73f59cd5c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b21415a99b156e7fe2fa8a3ac50ded6766b7e152a30e3cac066bc4a73f59cd5c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 EQ ISZERO 0xA9 SWAP12 ISZERO PUSH15 0x7FE2FA8A3AC50DED6766B7E152A30E EXTCODECOPY 0xAC MOD PUSH12 0xC4A73F59CD5C64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "202:12302:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b21415a99b156e7fe2fa8a3ac50ded6766b7e152a30e3cac066bc4a73f59cd5c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 EQ ISZERO 0xA9 SWAP12 ISZERO PUSH15 0x7FE2FA8A3AC50DED6766B7E152A30E EXTCODECOPY 0xAC MOD PUSH12 0xC4A73F59CD5C64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "202:12302:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b21415a99b156e7fe2fa8a3ac50ded6766b7e152a30e3cac066bc4a73f59cd5c64736f6c634300081a0033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"contracts/v2/TikTrixGame.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/v2/TikTrixGame.sol": {
				"ast": {
					"absolutePath": "contracts/v2/TikTrixGame.sol",
					"exportedSymbols": {
						"AccessControl": [
							513
						],
						"Context": [
							686
						],
						"ERC165": [
							885
						],
						"IAccessControl": [
							586
						],
						"IERC165": [
							897
						],
						"IERC20": [
							664
						],
						"Math": [
							1762
						],
						"Strings": [
							861
						],
						"TikTrixGame": [
							197
						]
					},
					"id": 198,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 198,
							"sourceUnit": 665,
							"src": "58:109:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 198,
							"sourceUnit": 514,
							"src": "168:111:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "AccessControl",
										"nameLocations": [
											"305:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 513,
										"src": "305:13:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "305:13:0"
								}
							],
							"canonicalName": "TikTrixGame",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 197,
							"linearizedBaseContracts": [
								197,
								513,
								885,
								897,
								586,
								686
							],
							"name": "TikTrixGame",
							"nameLocation": "290:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 10,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "349:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 197,
									"src": "325:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 6,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "325:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 8,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "372:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 7,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "362:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "362:23:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "TikTrixGame.GameInfo",
									"id": 17,
									"members": [
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "gameSeq",
											"nameLocation": "426:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 17,
											"src": "418:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 11,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "418:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "memberSeq",
											"nameLocation": "451:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 17,
											"src": "443:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 13,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "443:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "exists",
											"nameLocation": "475:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 17,
											"src": "470:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 15,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "470:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "GameInfo",
									"nameLocation": "399:8:0",
									"nodeType": "StructDefinition",
									"scope": 197,
									"src": "392:96:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7d1b4687",
									"id": 22,
									"mutability": "mutable",
									"name": "gameInfos",
									"nameLocation": "530:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 197,
									"src": "494:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$17_storage_$",
										"typeString": "mapping(uint256 => struct TikTrixGame.GameInfo)"
									},
									"typeName": {
										"id": 21,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 18,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "502:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "494:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$17_storage_$",
											"typeString": "mapping(uint256 => struct TikTrixGame.GameInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 20,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 19,
												"name": "GameInfo",
												"nameLocations": [
													"513:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 17,
												"src": "513:8:0"
											},
											"referencedDeclaration": 17,
											"src": "513:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_GameInfo_$17_storage_ptr",
												"typeString": "struct TikTrixGame.GameInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "eeb0a161eda325cefb3f550c18e560490ea78827e2a4c3a9fa9c5e66ce871c3f",
									"id": 28,
									"name": "GameRegistered",
									"nameLocation": "552:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"indexed": false,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "575:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "567:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"indexed": false,
												"mutability": "mutable",
												"name": "memberSeq",
												"nameLocation": "592:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "584:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:36:0"
									},
									"src": "546:57:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8da554679ce754233202e83b51aefa8be576e0a49851a9ddd4686dfd94ba6093",
									"id": 32,
									"name": "GameUpdated",
									"nameLocation": "614:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "634:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "626:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:17:0"
									},
									"src": "608:35:0"
								},
								{
									"anonymous": false,
									"eventSelector": "5ef6221cc1c069a8c723210c08d526c7ca88540ee8d66470cf01844efaae0b94",
									"id": 36,
									"name": "GameDeleted",
									"nameLocation": "654:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"indexed": true,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "682:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "666:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "665:25:0"
									},
									"src": "648:43:0"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "711:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 40,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "732:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 41,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "752:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "756:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "752:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 39,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "721:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "721:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "721:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "784:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 47,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "796:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "800:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "796:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "773:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "773:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "773:34:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "708:2:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "711:0:0"
									},
									"scope": 197,
									"src": "697:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "897:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 61,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "917:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 62,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "929:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "907:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "907:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "907:30:0"
											}
										]
									},
									"functionSelector": "c634b78e",
									"id": 66,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 57,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 225,
													"src": "877:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 56,
												"name": "onlyRole",
												"nameLocations": [
													"868:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 236,
												"src": "868:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "868:28:0"
										}
									],
									"name": "grantAdminRole",
									"nameLocation": "829:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "852:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "844:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:17:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "897:0:0"
									},
									"scope": 197,
									"src": "820:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1028:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 75,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "1049:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 76,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "1061:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 74,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1038:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1038:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1038:31:0"
											}
										]
									},
									"functionSelector": "9a19c7b0",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 71,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 225,
													"src": "1008:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 72,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 70,
												"name": "onlyRole",
												"nameLocations": [
													"999:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 236,
												"src": "999:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "999:28:0"
										}
									],
									"name": "revokeAdminRole",
									"nameLocation": "959:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "983:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "975:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "974:17:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1028:0:0"
									},
									"scope": 197,
									"src": "950:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "1170:266:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1188:26:0",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 91,
																		"name": "gameInfos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "1189:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$17_storage_$",
																			"typeString": "mapping(uint256 => struct TikTrixGame.GameInfo storage ref)"
																		}
																	},
																	"id": 93,
																	"indexExpression": {
																		"id": 92,
																		"name": "gameSeq",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 82,
																		"src": "1199:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1189:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_GameInfo_$17_storage",
																		"typeString": "struct TikTrixGame.GameInfo storage ref"
																	}
																},
																"id": 94,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1208:6:0",
																"memberName": "exists",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 16,
																"src": "1189:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d6520616c7265616479206578697374",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1216:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6926f1ebfa5ea8a7186ba2a57037cf093b0cb4f86e0150c483f8b4083a3d9d3",
																"typeString": "literal_string \"Game already exist\""
															},
															"value": "Game already exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6926f1ebfa5ea8a7186ba2a57037cf093b0cb4f86e0150c483f8b4083a3d9d3",
																"typeString": "literal_string \"Game already exist\""
															}
														],
														"id": 90,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1180:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1180:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1180:57:0"
											},
											{
												"expression": {
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 99,
															"name": "gameInfos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "1248:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$17_storage_$",
																"typeString": "mapping(uint256 => struct TikTrixGame.GameInfo storage ref)"
															}
														},
														"id": 101,
														"indexExpression": {
															"id": 100,
															"name": "gameSeq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "1258:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1248:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_GameInfo_$17_storage",
															"typeString": "struct TikTrixGame.GameInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 103,
																"name": "gameSeq",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "1301:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 104,
																"name": "memberSeq",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "1333:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1364:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 102,
															"name": "GameInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1269:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_GameInfo_$17_storage_ptr_$",
																"typeString": "type(struct TikTrixGame.GameInfo storage pointer)"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1292:7:0",
															"1322:9:0",
															"1356:6:0"
														],
														"names": [
															"gameSeq",
															"memberSeq",
															"exists"
														],
														"nodeType": "FunctionCall",
														"src": "1269:110:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_GameInfo_$17_memory_ptr",
															"typeString": "struct TikTrixGame.GameInfo memory"
														}
													},
													"src": "1248:131:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_GameInfo_$17_storage",
														"typeString": "struct TikTrixGame.GameInfo storage ref"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1248:131:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 110,
															"name": "gameSeq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "1410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 111,
															"name": "memberSeq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1419:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 109,
														"name": "GameRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1395:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1395:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "EmitStatement",
												"src": "1390:39:0"
											}
										]
									},
									"functionSelector": "b638d158",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 87,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1158:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 86,
												"name": "onlyRole",
												"nameLocations": [
													"1149:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 236,
												"src": "1149:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:20:0"
										}
									],
									"name": "gameRegister",
									"nameLocation": "1091:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "1112:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1104:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "memberSeq",
												"nameLocation": "1129:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1121:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:36:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1170:0:0"
									},
									"scope": 197,
									"src": "1082:354:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "1509:110:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 124,
																	"name": "gameInfos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "1527:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$17_storage_$",
																		"typeString": "mapping(uint256 => struct TikTrixGame.GameInfo storage ref)"
																	}
																},
																"id": 126,
																"indexExpression": {
																	"id": 125,
																	"name": "gameSeq",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 117,
																	"src": "1537:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1527:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameInfo_$17_storage",
																	"typeString": "struct TikTrixGame.GameInfo storage ref"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1546:6:0",
															"memberName": "exists",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 16,
															"src": "1527:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d6520646f6573206e6f74206578697374",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1554:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a",
																"typeString": "literal_string \"Game does not exist\""
															},
															"value": "Game does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a",
																"typeString": "literal_string \"Game does not exist\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1519:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1519:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "1519:57:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 132,
															"name": "gameSeq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "1604:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 131,
														"name": "GameUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "1592:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1592:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "EmitStatement",
												"src": "1587:25:0"
											}
										]
									},
									"functionSelector": "4f0ce4df",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 120,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1497:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 121,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 119,
												"name": "onlyRole",
												"nameLocations": [
													"1488:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 236,
												"src": "1488:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1488:20:0"
										}
									],
									"name": "gameUpdate",
									"nameLocation": "1451:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "1470:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "1462:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:17:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1509:0:0"
									},
									"scope": 197,
									"src": "1442:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "1692:144:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 145,
																	"name": "gameInfos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "1710:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$17_storage_$",
																		"typeString": "mapping(uint256 => struct TikTrixGame.GameInfo storage ref)"
																	}
																},
																"id": 147,
																"indexExpression": {
																	"id": 146,
																	"name": "gameSeq",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "1720:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1710:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameInfo_$17_storage",
																	"typeString": "struct TikTrixGame.GameInfo storage ref"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1729:6:0",
															"memberName": "exists",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 16,
															"src": "1710:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d6520646f6573206e6f74206578697374",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1737:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a",
																"typeString": "literal_string \"Game does not exist\""
															},
															"value": "Game does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a",
																"typeString": "literal_string \"Game does not exist\""
															}
														],
														"id": 144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1702:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1702:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "1702:57:0"
											},
											{
												"expression": {
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1769:25:0",
													"subExpression": {
														"baseExpression": {
															"id": 152,
															"name": "gameInfos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "1776:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$17_storage_$",
																"typeString": "mapping(uint256 => struct TikTrixGame.GameInfo storage ref)"
															}
														},
														"id": 154,
														"indexExpression": {
															"id": 153,
															"name": "gameSeq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1786:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1776:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_GameInfo_$17_storage",
															"typeString": "struct TikTrixGame.GameInfo storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "1769:25:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 158,
															"name": "gameSeq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1821:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "GameDeleted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1809:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1809:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "EmitStatement",
												"src": "1804:25:0"
											}
										]
									},
									"functionSelector": "89b2c8e7",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 141,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1680:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 140,
												"name": "onlyRole",
												"nameLocations": [
													"1671:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 236,
												"src": "1671:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1671:20:0"
										}
									],
									"name": "gameDelete",
									"nameLocation": "1634:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "1653:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1645:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1644:17:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1692:0:0"
									},
									"scope": 197,
									"src": "1625:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "1920:109:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 171,
																	"name": "gameInfos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "1938:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$17_storage_$",
																		"typeString": "mapping(uint256 => struct TikTrixGame.GameInfo storage ref)"
																	}
																},
																"id": 173,
																"indexExpression": {
																	"id": 172,
																	"name": "gameSeq",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1948:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1938:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameInfo_$17_storage",
																	"typeString": "struct TikTrixGame.GameInfo storage ref"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1957:6:0",
															"memberName": "exists",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 16,
															"src": "1938:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d6520646f6573206e6f74206578697374",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1965:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a",
																"typeString": "literal_string \"Game does not exist\""
															},
															"value": "Game does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a",
																"typeString": "literal_string \"Game does not exist\""
															}
														],
														"id": 170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1930:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1930:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "1930:57:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 178,
														"name": "gameInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "2004:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$17_storage_$",
															"typeString": "mapping(uint256 => struct TikTrixGame.GameInfo storage ref)"
														}
													},
													"id": 180,
													"indexExpression": {
														"id": 179,
														"name": "gameSeq",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2014:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2004:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_GameInfo_$17_storage",
														"typeString": "struct TikTrixGame.GameInfo storage ref"
													}
												},
												"functionReturnParameters": 169,
												"id": 181,
												"nodeType": "Return",
												"src": "1997:25:0"
											}
										]
									},
									"functionSelector": "47e1d550",
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGameInfo",
									"nameLocation": "1851:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "1871:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1863:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:17:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1903:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_GameInfo_$17_memory_ptr",
													"typeString": "struct TikTrixGame.GameInfo"
												},
												"typeName": {
													"id": 167,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 166,
														"name": "GameInfo",
														"nameLocations": [
															"1903:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 17,
														"src": "1903:8:0"
													},
													"referencedDeclaration": 17,
													"src": "1903:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_GameInfo_$17_storage_ptr",
														"typeString": "struct TikTrixGame.GameInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:17:0"
									},
									"scope": 197,
									"src": "1842:187:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "2103:49:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 190,
															"name": "gameInfos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "2120:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$17_storage_$",
																"typeString": "mapping(uint256 => struct TikTrixGame.GameInfo storage ref)"
															}
														},
														"id": 192,
														"indexExpression": {
															"id": 191,
															"name": "gameSeq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2130:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2120:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_GameInfo_$17_storage",
															"typeString": "struct TikTrixGame.GameInfo storage ref"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2139:6:0",
													"memberName": "exists",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 16,
													"src": "2120:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 189,
												"id": 194,
												"nodeType": "Return",
												"src": "2113:32:0"
											}
										]
									},
									"functionSelector": "1833fdf9",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isGameExists",
									"nameLocation": "2044:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "2065:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2057:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2056:17:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2097:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2097:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:6:0"
									},
									"scope": 197,
									"src": "2035:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 198,
							"src": "281:1874:0",
							"usedErrors": [],
							"usedEvents": [
								28,
								32,
								36,
								525,
								534,
								543
							]
						}
					],
					"src": "32:2124:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							513
						],
						"Context": [
							686
						],
						"ERC165": [
							885
						],
						"IAccessControl": [
							586
						],
						"IERC165": [
							897
						],
						"Math": [
							1762
						],
						"Strings": [
							861
						]
					},
					"id": 514,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 199,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 200,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 514,
							"sourceUnit": 587,
							"src": "133:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 201,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 514,
							"sourceUnit": 687,
							"src": "164:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 514,
							"sourceUnit": 862,
							"src": "195:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 203,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 514,
							"sourceUnit": 886,
							"src": "226:43:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 205,
										"name": "Context",
										"nameLocations": [
											"1841:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 686,
										"src": "1841:7:1"
									},
									"id": 206,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:1"
								},
								{
									"baseName": {
										"id": 207,
										"name": "IAccessControl",
										"nameLocations": [
											"1850:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 586,
										"src": "1850:14:1"
									},
									"id": 208,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:1"
								},
								{
									"baseName": {
										"id": 209,
										"name": "ERC165",
										"nameLocations": [
											"1866:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 885,
										"src": "1866:6:1"
									},
									"id": 210,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:1"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 204,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 513,
							"linearizedBaseContracts": [
								513,
								885,
								897,
								586,
								686
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 217,
									"members": [
										{
											"constant": false,
											"id": 214,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 217,
											"src": "1905:32:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 213,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 216,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 217,
											"src": "1947:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 215,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:1",
									"nodeType": "StructDefinition",
									"scope": 513,
									"src": "1879:92:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 222,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 513,
									"src": "1977:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$217_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 221,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 218,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$217_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 220,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 219,
												"name": "RoleData",
												"nameLocations": [
													"1996:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 217,
												"src": "1996:8:1"
											},
											"referencedDeclaration": 217,
											"src": "1996:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$217_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 225,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 513,
									"src": "2027:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 223,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 224,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "2495:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 231,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "2516:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 230,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															290,
															329
														],
														"referencedDeclaration": 290,
														"src": "2505:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:1"
											},
											{
												"id": 234,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:1"
											}
										]
									},
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 236,
									"name": "onlyRole",
									"nameLocation": "2472:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2481:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:1"
									},
									"src": "2463:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										884
									],
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "2697:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 245,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "2714:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 247,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "2734:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$586_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$586_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 246,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$586",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2750:11:1",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 253,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "2789:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 251,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$513_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2771:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 884,
															"src": "2765:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 244,
												"id": 256,
												"nodeType": "Return",
												"src": "2707:94:1"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 241,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:1"
									},
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2633:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 238,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2691:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:1"
									},
									"scope": 513,
									"src": "2606:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										553
									],
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "2987:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 269,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "3004:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$217_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 271,
															"indexExpression": {
																"id": 270,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "3011:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$217_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3017:7:1",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 214,
														"src": "3004:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 274,
													"indexExpression": {
														"id": 273,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "3025:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 268,
												"id": 275,
												"nodeType": "Return",
												"src": "2997:36:1"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 265,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:1"
									},
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2912:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 260,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2926:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:1"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2981:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:1"
									},
									"scope": 513,
									"src": "2895:145:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "3390:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "3411:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 285,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "3417:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 283,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															290,
															329
														],
														"referencedDeclaration": 329,
														"src": "3400:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:1"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:1",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "3354:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 279,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:1"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:1"
									},
									"scope": 513,
									"src": "3334:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "3791:406:1",
										"statements": [
											{
												"condition": {
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 299,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "3814:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 300,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "3820:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 298,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "3806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 327,
												"nodeType": "IfStatement",
												"src": "3801:390:1",
												"trueBody": {
													"id": 326,
													"nodeType": "Block",
													"src": "3830:361:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 311,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 295,
																								"src": "4009:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 309,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 861,
																								"src": "3989:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$861_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 310,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3997:11:1",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 860,
																							"src": "3989:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 312,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:28:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 313,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4043:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 318,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 293,
																										"src": "4116:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 317,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4108:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 316,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4108:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 319,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4108:13:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 320,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4123:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 314,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 861,
																								"src": "4088:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$861_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 315,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4096:11:1",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 840,
																							"src": "4088:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 321,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4088:38:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 306,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 307,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "3900:12:1",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:252:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 304,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:298:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 303,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:336:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 325,
															"nodeType": "ExpressionStatement",
															"src": "3844:336:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:1",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "3738:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 292,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "3752:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:1"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:1"
									},
									"scope": 513,
									"src": "3718:479:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										561
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "4461:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 338,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "4478:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$217_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 340,
														"indexExpression": {
															"id": 339,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "4485:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4478:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$217_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4491:9:1",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 216,
													"src": "4478:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 337,
												"id": 342,
												"nodeType": "Return",
												"src": "4471:29:1"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "4203:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4387:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 334,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4434:8:1"
									},
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4408:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "4400:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 331,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4400:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4399:14:1"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "4452:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 335,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4452:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4451:9:1"
									},
									"scope": 513,
									"src": "4378:129:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										569
									],
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "4906:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 359,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "4927:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 360,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "4933:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 358,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "4916:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4916:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "4916:25:1"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "4513:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 354,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "4899:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 353,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "4886:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4886:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 356,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 352,
												"name": "onlyRole",
												"nameLocations": [
													"4877:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 236,
												"src": "4877:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4877:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4812:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 351,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4868:8:1"
									},
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4830:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4822:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 346,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4844:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4836:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4821:31:1"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4906:0:1"
									},
									"scope": 513,
									"src": "4803:145:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										577
									],
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "5332:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 379,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "5354:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 380,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "5360:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 378,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "5342:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "5342:26:1"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "4954:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 374,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "5325:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 373,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "5312:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5312:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 376,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 372,
												"name": "onlyRole",
												"nameLocations": [
													"5303:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 236,
												"src": "5303:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5303:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5237:10:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 371,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5294:8:1"
									},
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5256:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "5248:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 366,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5248:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "5262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5247:31:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5332:0:1"
									},
									"scope": 513,
									"src": "5228:147:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										585
									],
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "5989:137:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 394,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "6007:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 395,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "6018:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6018:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6007:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6032:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5999:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5999:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "5999:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 402,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "6105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 403,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "6111:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 401,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "6093:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6093:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "6093:26:1"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "5381:526:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5921:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 391,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5980:8:1"
									},
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5942:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "5934:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 386,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5956:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "5948:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5948:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5933:31:1"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5989:0:1"
									},
									"scope": 513,
									"src": "5912:214:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "6879:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 416,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "6900:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 417,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "6906:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 415,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "6889:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6889:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "6889:25:1"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "6132:674:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6820:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6839:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "6831:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 409,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6831:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6853:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "6845:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6845:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6830:31:1"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6879:0:1"
									},
									"scope": 513,
									"src": "6811:110:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "7119:174:1",
										"statements": [
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7137:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "7129:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 429,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7129:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [
														{
															"id": 432,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "7170:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 431,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "7157:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7157:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7129:46:1"
											},
											{
												"expression": {
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 435,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "7185:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$217_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 437,
															"indexExpression": {
																"id": 436,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "7192:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7185:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$217_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7198:9:1",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 216,
														"src": "7185:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 439,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "7210:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7185:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "7185:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 443,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "7251:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 444,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "7257:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 445,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "7276:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 442,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "7234:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7234:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "EmitStatement",
												"src": "7229:57:1"
											}
										]
									},
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "6927:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7055:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7077:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7069:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 423,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7091:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7083:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 425,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7083:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7068:33:1"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7119:0:1"
									},
									"scope": 513,
									"src": "7046:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "7529:165:1",
										"statements": [
											{
												"condition": {
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7543:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 458,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "7552:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 459,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "7558:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 457,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "7544:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7544:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 479,
												"nodeType": "IfStatement",
												"src": "7539:149:1",
												"trueBody": {
													"id": 478,
													"nodeType": "Block",
													"src": "7568:120:1",
													"statements": [
														{
															"expression": {
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 462,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 222,
																				"src": "7582:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$217_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 464,
																			"indexExpression": {
																				"id": 463,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 452,
																				"src": "7589:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7582:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$217_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 465,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7595:7:1",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 214,
																		"src": "7582:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 467,
																	"indexExpression": {
																		"id": 466,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "7603:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7582:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7614:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7582:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 470,
															"nodeType": "ExpressionStatement",
															"src": "7582:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 472,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "7649:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 473,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "7655:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 474,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 676,
																			"src": "7664:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7664:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 471,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "7637:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7637:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 477,
															"nodeType": "EmitStatement",
															"src": "7632:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "7299:157:1",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7470:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7489:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "7481:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 451,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7481:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7503:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "7495:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7495:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7480:31:1"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7529:0:1"
									},
									"scope": 513,
									"src": "7461:233:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "7934:165:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 490,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "7956:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 491,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "7962:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 489,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "7948:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7948:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 510,
												"nodeType": "IfStatement",
												"src": "7944:149:1",
												"trueBody": {
													"id": 509,
													"nodeType": "Block",
													"src": "7972:121:1",
													"statements": [
														{
															"expression": {
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 493,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 222,
																				"src": "7986:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$217_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 495,
																			"indexExpression": {
																				"id": 494,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 484,
																				"src": "7993:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7986:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$217_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 496,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7999:7:1",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 214,
																		"src": "7986:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 498,
																	"indexExpression": {
																		"id": 497,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "8007:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7986:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8018:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7986:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 501,
															"nodeType": "ExpressionStatement",
															"src": "7986:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 503,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 484,
																		"src": "8054:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 504,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "8060:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 505,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 676,
																			"src": "8069:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8069:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 502,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "8042:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8042:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 508,
															"nodeType": "EmitStatement",
															"src": "8037:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "7700:160:1",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7874:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "7886:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 483,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7908:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "7900:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7900:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7885:31:1"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7934:0:1"
									},
									"scope": 513,
									"src": "7865:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 514,
							"src": "1806:6295:1",
							"usedErrors": [],
							"usedEvents": [
								525,
								534,
								543
							]
						}
					],
					"src": "108:7994:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							586
						]
					},
					"id": 587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 515,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 516,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:2",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 586,
							"linearizedBaseContracts": [
								586
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 525,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "560:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 518,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "582:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 520,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "617:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 522,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:2"
									},
									"src": "537:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 534,
									"name": "RoleGranted",
									"nameLocation": "876:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "888:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 527,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "910:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "935:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:2"
									},
									"src": "870:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 543,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "1263:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 536,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "1285:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "1310:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:2"
									},
									"src": "1245:89:2"
								},
								{
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "1438:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 545,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "1452:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:2"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "1492:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:2"
									},
									"scope": 586,
									"src": "1421:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "1715:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 555,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:2"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "1752:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 558,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:2"
									},
									"scope": 586,
									"src": "1693:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "2030:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 563,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "2044:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:2"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:2"
									},
									"scope": 586,
									"src": "2011:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 577,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "2324:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 571,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "2338:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:2"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:2"
									},
									"scope": 586,
									"src": "2304:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2877:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 579,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2891:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:2"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:2"
									},
									"scope": 586,
									"src": "2855:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 587,
							"src": "209:2710:2",
							"usedErrors": [],
							"usedEvents": [
								525,
								534,
								543
							]
						}
					],
					"src": "94:2826:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							664
						]
					},
					"id": 665,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 589,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 664,
							"linearizedBaseContracts": [
								664
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 598,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 607,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 664,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 664,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 664,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 664,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 664,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2677:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2699:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2719:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:3"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2758:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:3"
									},
									"scope": 664,
									"src": "2646:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 665,
							"src": "202:2564:3",
							"usedErrors": [],
							"usedEvents": [
								598,
								607
							]
						}
					],
					"src": "106:2661:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							686
						]
					},
					"id": 687,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 667,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 686,
							"linearizedBaseContracts": [
								686
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 672,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 671,
												"id": 674,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 686,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 681,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 680,
												"id": 683,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 686,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 687,
							"src": "608:235:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1762
						],
						"Strings": [
							861
						]
					},
					"id": 862,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 688,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 689,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 862,
							"sourceUnit": 1763,
							"src": "126:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 690,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 861,
							"linearizedBaseContracts": [
								861
							],
							"name": "Strings",
							"nameLocation": "196:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 693,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "210:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 691,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 692,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 696,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 861,
									"src": "270:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 694,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 695,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "486:625:5",
										"statements": [
											{
												"id": 742,
												"nodeType": "UncheckedBlock",
												"src": "496:609:5",
												"statements": [
													{
														"assignments": [
															705
														],
														"declarations": [
															{
																"constant": false,
																"id": 705,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 742,
																"src": "520:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 704,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 712,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 708,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "548:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 706,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1762,
																		"src": "537:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1762_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:5",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1599,
																	"src": "537:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:5"
													},
													{
														"assignments": [
															714
														],
														"declarations": [
															{
																"constant": false,
																"id": 714,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 742,
																"src": "572:20:5",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 713,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 719,
														"initialValue": {
															"arguments": [
																{
																	"id": 717,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "606:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 715,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:5"
													},
													{
														"assignments": [
															721
														],
														"declarations": [
															{
																"constant": false,
																"id": 721,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:5",
																"nodeType": "VariableDeclaration",
																"scope": 742,
																"src": "627:11:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 722,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:5"
													},
													{
														"AST": {
															"nativeSrc": "708:67:5",
															"nodeType": "YulBlock",
															"src": "708:67:5",
															"statements": [
																{
																	"nativeSrc": "726:35:5",
																	"nodeType": "YulAssignment",
																	"src": "726:35:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "737:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "749:2:5",
																						"nodeType": "YulLiteral",
																						"src": "749:2:5",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "753:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "745:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:5"
																				},
																				"nativeSrc": "745:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "733:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:5"
																		},
																		"nativeSrc": "733:28:5",
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:5"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "726:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:5"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 714,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:5",
																"valueSize": 1
															},
															{
																"declaration": 705,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:5",
																"valueSize": 1
															},
															{
																"declaration": 721,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:5",
																"valueSize": 1
															}
														],
														"id": 723,
														"nodeType": "InlineAssembly",
														"src": "699:76:5"
													},
													{
														"body": {
															"id": 738,
															"nodeType": "Block",
															"src": "801:267:5",
															"statements": [
																{
																	"expression": {
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:5",
																		"subExpression": {
																			"id": 725,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 721,
																			"src": "819:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 727,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:5"
																},
																{
																	"AST": {
																		"nativeSrc": "902:84:5",
																		"nodeType": "YulBlock",
																		"src": "902:84:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "932:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "946:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:5"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "953:2:5",
																											"nodeType": "YulLiteral",
																											"src": "953:2:5",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "942:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:5"
																									},
																									"nativeSrc": "942:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:5"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "958:8:5",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:5"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "937:4:5",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:5"
																							},
																							"nativeSrc": "937:30:5",
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:5"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "924:7:5",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:5"
																					},
																					"nativeSrc": "924:44:5",
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:5"
																				},
																				"nativeSrc": "924:44:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:5"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 693,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 721,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 699,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:5",
																			"valueSize": 1
																		}
																	],
																	"id": 728,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:5"
																},
																{
																	"expression": {
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 729,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 699,
																			"src": "1003:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 732,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 733,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 699,
																			"src": "1036:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 737,
																	"nodeType": "IfStatement",
																	"src": "1032:21:5",
																	"trueBody": {
																		"id": 736,
																		"nodeType": "Break",
																		"src": "1048:5:5"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 739,
														"nodeType": "WhileStatement",
														"src": "788:280:5"
													},
													{
														"expression": {
															"id": 740,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "1088:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 703,
														"id": 741,
														"nodeType": "Return",
														"src": "1081:13:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "433:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:5"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "471:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 701,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:5"
									},
									"scope": 861,
									"src": "415:696:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "1290:100:5",
										"statements": [
											{
												"id": 762,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 753,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "1343:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 756,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 747,
																				"src": "1362:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 754,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1762,
																				"src": "1350:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1762_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:5",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1722,
																			"src": "1350:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 752,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	764,
																	840,
																	860
																],
																"referencedDeclaration": 840,
																"src": "1331:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 751,
														"id": 761,
														"nodeType": "Return",
														"src": "1324:49:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "1237:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:5"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "1275:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 749,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:5"
									},
									"scope": 861,
									"src": "1216:174:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "1603:347:5",
										"statements": [
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 839,
														"src": "1613:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 774,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 784,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 779,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "1649:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 776,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:5"
											},
											{
												"expression": {
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 785,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "1670:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 787,
														"indexExpression": {
															"hexValue": "30",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:5"
											},
											{
												"expression": {
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 791,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "1695:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 793,
														"indexExpression": {
															"hexValue": "31",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:5"
											},
											{
												"body": {
													"id": 825,
													"nodeType": "Block",
													"src": "1765:83:5",
													"statements": [
														{
															"expression": {
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 811,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "1779:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 813,
																	"indexExpression": {
																		"id": 812,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "1786:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 814,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "1791:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 818,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 815,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "1800:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 820,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:5"
														},
														{
															"expression": {
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 821,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "1826:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 824,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 805,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1753:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 826,
												"initializationExpression": {
													"assignments": [
														798
													],
													"declarations": [
														{
															"constant": false,
															"id": 798,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 826,
															"src": "1725:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 797,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 804,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 800,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "1741:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:5"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:5",
														"subExpression": {
															"id": 808,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "1762:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 810,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 828,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "1865:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 827,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 836,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "1936:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 834,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 773,
												"id": 838,
												"nodeType": "Return",
												"src": "1922:21:5"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "1534:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "1549:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:5"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "1588:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 771,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:5"
									},
									"scope": 861,
									"src": "1513:437:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "2175:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 853,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 843,
																			"src": "2220:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 851,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 849,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 856,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "2228:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 848,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															764,
															840,
															860
														],
														"referencedDeclaration": 840,
														"src": "2192:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 847,
												"id": 858,
												"nodeType": "Return",
												"src": "2185:59:5"
											}
										]
									},
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "2123:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:5"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "2160:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 845,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:5"
									},
									"scope": 861,
									"src": "2102:149:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 862,
							"src": "188:2065:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2153:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							885
						],
						"IERC165": [
							897
						]
					},
					"id": 886,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 863,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 864,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 886,
							"sourceUnit": 898,
							"src": "124:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 866,
										"name": "IERC165",
										"nameLocations": [
											"754:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 897,
										"src": "754:7:6"
									},
									"id": 867,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 865,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 885,
							"linearizedBaseContracts": [
								885,
								897
							],
							"name": "ERC165",
							"nameLocation": "744:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "920:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 876,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "937:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 878,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "957:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$897_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$897_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 877,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$897",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:6",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 875,
												"id": 882,
												"nodeType": "Return",
												"src": "930:47:6"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 872,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:6"
									},
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "856:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 869,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:6"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "914:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:6"
									},
									"scope": 885,
									"src": "829:155:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 886,
							"src": "726:260:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:888:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							897
						]
					},
					"id": 898,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 887,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 888,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 897,
							"linearizedBaseContracts": [
								897
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 890,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 897,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 898,
							"src": "405:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1762
						]
					},
					"id": 1763,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 899,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 900,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:8",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1762,
							"linearizedBaseContracts": [
								1762
							],
							"name": "Math",
							"nameLocation": "210:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 904,
									"members": [
										{
											"id": 901,
											"name": "Down",
											"nameLocation": "245:4:8",
											"nodeType": "EnumValue",
											"src": "245:4:8"
										},
										{
											"id": 902,
											"name": "Up",
											"nameLocation": "287:2:8",
											"nodeType": "EnumValue",
											"src": "287:2:8"
										},
										{
											"id": 903,
											"name": "Zero",
											"nameLocation": "318:4:8",
											"nodeType": "EnumValue",
											"src": "318:4:8"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:8",
									"nodeType": "EnumDefinition",
									"src": "221:122:8"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "480:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 914,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "497:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 915,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "501:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 918,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "509:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:8",
													"trueExpression": {
														"id": 917,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "505:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 913,
												"id": 920,
												"nodeType": "Return",
												"src": "490:20:8"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:8",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "426:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "437:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:8"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "471:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:8"
									},
									"scope": 1762,
									"src": "413:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "655:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 932,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "672:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 933,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "676:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 936,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "684:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:8",
													"trueExpression": {
														"id": 935,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "680:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 931,
												"id": 938,
												"nodeType": "Return",
												"src": "665:20:8"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:8",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "601:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "612:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:8"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "646:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:8"
									},
									"scope": 1762,
									"src": "588:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "876:82:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 950,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "931:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 951,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "935:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 953,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 954,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "941:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 955,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 945,
																		"src": "945:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 957,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 949,
												"id": 961,
												"nodeType": "Return",
												"src": "923:28:8"
											}
										]
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:8",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "822:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "833:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:8"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "867:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:8"
									},
									"scope": 1762,
									"src": "805:153:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "1228:123:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 973,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "1316:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 977,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 966,
																			"src": "1330:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 980,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 981,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "1339:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:8",
													"trueExpression": {
														"hexValue": "30",
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 972,
												"id": 986,
												"nodeType": "Return",
												"src": "1309:35:8"
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:8",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "1174:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "1185:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:8"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "1219:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:8"
									},
									"scope": 1762,
									"src": "1157:194:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "1795:3797:8",
										"statements": [
											{
												"id": 1108,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:8",
												"statements": [
													{
														"assignments": [
															1001
														],
														"declarations": [
															{
																"constant": false,
																"id": 1001,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1108,
																"src": "2126:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1000,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1002,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:8"
													},
													{
														"assignments": [
															1004
														],
														"declarations": [
															{
																"constant": false,
																"id": 1004,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1108,
																"src": "2198:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1003,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1005,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:8"
													},
													{
														"AST": {
															"nativeSrc": "2278:157:8",
															"nodeType": "YulBlock",
															"src": "2278:157:8",
															"statements": [
																{
																	"nativeSrc": "2296:30:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2313:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2316:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2323:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2319:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:8"
																				},
																				"nativeSrc": "2319:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2306:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:8"
																		},
																		"nativeSrc": "2306:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:8"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2300:2:8",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2343:18:8",
																	"nodeType": "YulAssignment",
																	"src": "2343:18:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2356:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2359:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2352:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:8"
																		},
																		"nativeSrc": "2352:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2343:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "2378:43:8",
																	"nodeType": "YulAssignment",
																	"src": "2378:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2395:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2399:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2391:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:8"
																				},
																				"nativeSrc": "2391:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2410:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2414:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:8"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2407:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:8"
																				},
																				"nativeSrc": "2407:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2387:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:8"
																		},
																		"nativeSrc": "2387:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2378:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1001,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1001,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1001,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1004,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:8",
																"valueSize": 1
															},
															{
																"declaration": 991,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:8",
																"valueSize": 1
															},
															{
																"declaration": 991,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:8",
																"valueSize": 1
															},
															{
																"declaration": 993,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:8",
																"valueSize": 1
															},
															{
																"declaration": 993,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:8",
																"valueSize": 1
															}
														],
														"id": 1006,
														"nodeType": "InlineAssembly",
														"src": "2269:166:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1007,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "2516:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1015,
														"nodeType": "IfStatement",
														"src": "2512:75:8",
														"trueBody": {
															"id": 1014,
															"nodeType": "Block",
															"src": "2528:59:8",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1010,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1001,
																			"src": "2553:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1011,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 995,
																			"src": "2561:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 999,
																	"id": 1013,
																	"nodeType": "Return",
																	"src": "2546:26:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1017,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "2697:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1018,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "2711:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1016,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1021,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:8"
													},
													{
														"assignments": [
															1023
														],
														"declarations": [
															{
																"constant": false,
																"id": 1023,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 1108,
																"src": "2973:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1022,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1024,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:8"
													},
													{
														"AST": {
															"nativeSrc": "3013:291:8",
															"nodeType": "YulBlock",
															"src": "3013:291:8",
															"statements": [
																{
																	"nativeSrc": "3082:38:8",
																	"nodeType": "YulAssignment",
																	"src": "3082:38:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3102:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3105:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:8"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3108:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3095:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:8"
																		},
																		"nativeSrc": "3095:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3082:9:8",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:8"
																		}
																	]
																},
																{
																	"nativeSrc": "3202:41:8",
																	"nodeType": "YulAssignment",
																	"src": "3202:41:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3215:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3225:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3236:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:8"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3222:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:8"
																				},
																				"nativeSrc": "3222:20:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3211:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:8"
																		},
																		"nativeSrc": "3211:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3202:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "3260:30:8",
																	"nodeType": "YulAssignment",
																	"src": "3260:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3273:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:8"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3280:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3269:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:8"
																		},
																		"nativeSrc": "3269:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3260:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 995,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1001,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1001,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1001,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1004,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1004,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1023,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1023,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1023,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:8",
																"valueSize": 1
															},
															{
																"declaration": 991,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:8",
																"valueSize": 1
															},
															{
																"declaration": 993,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:8",
																"valueSize": 1
															}
														],
														"id": 1025,
														"nodeType": "InlineAssembly",
														"src": "3004:300:8"
													},
													{
														"assignments": [
															1027
														],
														"declarations": [
															{
																"constant": false,
																"id": 1027,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 1108,
																"src": "3611:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1026,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1035,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1028,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "3626:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:8",
																			"subExpression": {
																				"id": 1029,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 995,
																				"src": "3642:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1033,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:8"
													},
													{
														"AST": {
															"nativeSrc": "3681:362:8",
															"nodeType": "YulBlock",
															"src": "3681:362:8",
															"statements": [
																{
																	"nativeSrc": "3746:37:8",
																	"nodeType": "YulAssignment",
																	"src": "3746:37:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "3765:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "3778:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3761:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:8"
																		},
																		"nativeSrc": "3761:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:8"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "3746:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:8"
																		}
																	]
																},
																{
																	"nativeSrc": "3850:25:8",
																	"nodeType": "YulAssignment",
																	"src": "3850:25:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3863:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "3870:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3859:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:8"
																		},
																		"nativeSrc": "3859:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3850:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "3990:39:8",
																	"nodeType": "YulAssignment",
																	"src": "3990:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4010:1:8",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4013:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:8"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4006:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:8"
																						},
																						"nativeSrc": "4006:12:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:8"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4020:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4002:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:8"
																				},
																				"nativeSrc": "4002:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4027:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3998:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:8"
																		},
																		"nativeSrc": "3998:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:8"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "3990:4:8",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 995,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:8",
																"valueSize": 1
															},
															{
																"declaration": 995,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1001,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1001,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1027,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1027,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1027,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1027,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1027,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:8",
																"valueSize": 1
															}
														],
														"id": 1036,
														"nodeType": "InlineAssembly",
														"src": "3672:371:8"
													},
													{
														"expression": {
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1037,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1001,
																"src": "4109:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1038,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "4118:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1039,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "4126:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1042,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:8"
													},
													{
														"assignments": [
															1044
														],
														"declarations": [
															{
																"constant": false,
																"id": 1044,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 1108,
																"src": "4448:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1043,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1051,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1046,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 995,
																			"src": "4471:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1048,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:8"
													},
													{
														"expression": {
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1052,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "4704:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1054,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "4719:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1055,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "4733:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1059,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:8"
													},
													{
														"expression": {
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1060,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "4773:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1062,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "4788:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1063,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "4802:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1067,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:8"
													},
													{
														"expression": {
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1068,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "4843:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1070,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "4858:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1071,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "4872:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1075,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:8"
													},
													{
														"expression": {
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1076,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "4913:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1078,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "4928:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1079,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "4942:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1083,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:8"
													},
													{
														"expression": {
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1084,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "4983:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1086,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "4998:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1087,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "5012:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1091,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:8"
													},
													{
														"expression": {
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1092,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "5054:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1094,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "5069:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1095,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "5083:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1099,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:8"
													},
													{
														"expression": {
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1100,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "5524:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1101,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "5533:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1102,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "5541:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1105,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:8"
													},
													{
														"expression": {
															"id": 1106,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "5569:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 999,
														"id": 1107,
														"nodeType": "Return",
														"src": "5562:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:8",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1692:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1711:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1730:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:8"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1779:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:8"
									},
									"scope": 1762,
									"src": "1667:3925:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "5872:189:8",
										"statements": [
											{
												"assignments": [
													1126
												],
												"declarations": [
													{
														"constant": false,
														"id": 1126,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1153,
														"src": "5882:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1125,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1132,
												"initialValue": {
													"arguments": [
														{
															"id": 1128,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "5906:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1129,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "5909:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1130,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "5912:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1127,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1110,
															1154
														],
														"referencedDeclaration": 1110,
														"src": "5899:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$904",
															"typeString": "enum Math.Rounding"
														},
														"id": 1136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1133,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "5938:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$904",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1134,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "5950:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$904_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:8",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 902,
															"src": "5950:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$904",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1138,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "5972:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1139,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "5975:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1140,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "5978:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1137,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1150,
												"nodeType": "IfStatement",
												"src": "5934:98:8",
												"trueBody": {
													"id": 1149,
													"nodeType": "Block",
													"src": "5996:36:8",
													"statements": [
														{
															"expression": {
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1145,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "6010:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1148,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1151,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1126,
													"src": "6048:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1124,
												"id": 1152,
												"nodeType": "Return",
												"src": "6041:13:8"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:8",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "5749:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "5768:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "5787:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "5816:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$904",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1119,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1118,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 904,
														"src": "5816:8:8"
													},
													"referencedDeclaration": 904,
													"src": "5816:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$904",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:8"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "5863:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:8"
									},
									"scope": 1762,
									"src": "5724:337:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "6337:1585:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1162,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "6351:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1168,
												"nodeType": "IfStatement",
												"src": "6347:45:8",
												"trueBody": {
													"id": 1167,
													"nodeType": "Block",
													"src": "6359:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1161,
															"id": 1166,
															"nodeType": "Return",
															"src": "6373:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													1170
												],
												"declarations": [
													{
														"constant": false,
														"id": 1170,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "7071:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1169,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1179,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1173,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "7099:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1172,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1434,
																			1470
																		],
																		"referencedDeclaration": 1434,
																		"src": "7094:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1177,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:8"
											},
											{
												"id": 1264,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:8",
												"statements": [
													{
														"expression": {
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1180,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "7532:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1181,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "7542:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1182,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1157,
																					"src": "7551:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1183,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1170,
																					"src": "7555:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1186,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1190,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:8"
													},
													{
														"expression": {
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1191,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "7581:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1192,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "7591:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1193,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1157,
																					"src": "7600:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1194,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1170,
																					"src": "7604:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1197,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1201,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:8"
													},
													{
														"expression": {
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1202,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "7630:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1203,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "7640:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1204,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1157,
																					"src": "7649:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1205,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1170,
																					"src": "7653:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1208,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1212,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:8"
													},
													{
														"expression": {
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1213,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "7679:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1214,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "7689:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1217,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1215,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1157,
																					"src": "7698:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1216,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1170,
																					"src": "7702:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1219,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1223,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:8"
													},
													{
														"expression": {
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1224,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "7728:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1225,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "7738:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1226,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1157,
																					"src": "7747:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1227,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1170,
																					"src": "7751:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1230,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1234,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:8"
													},
													{
														"expression": {
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1235,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "7777:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1236,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "7787:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1239,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1237,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1157,
																					"src": "7796:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1238,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1170,
																					"src": "7800:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1241,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1245,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:8"
													},
													{
														"expression": {
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1246,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "7826:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1247,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "7836:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1248,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1157,
																					"src": "7845:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1249,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1170,
																					"src": "7849:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1252,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1256,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1258,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "7886:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1259,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1157,
																		"src": "7894:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1260,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1170,
																		"src": "7898:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1257,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "7882:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1161,
														"id": 1263,
														"nodeType": "Return",
														"src": "7875:30:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:8",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "6294:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:8"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "6328:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:8"
									},
									"scope": 1762,
									"src": "6280:1642:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "8098:161:8",
										"statements": [
											{
												"id": 1300,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:8",
												"statements": [
													{
														"assignments": [
															1278
														],
														"declarations": [
															{
																"constant": false,
																"id": 1278,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1300,
																"src": "8132:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1277,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1282,
														"initialValue": {
															"arguments": [
																{
																	"id": 1280,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "8154:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1279,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1266,
																	1302
																],
																"referencedDeclaration": 1266,
																"src": "8149:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1283,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "8177:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$904",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1284,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1272,
																					"src": "8187:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$904",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1285,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 904,
																						"src": "8199:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$904_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1286,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 902,
																					"src": "8199:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$904",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1292,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1290,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1288,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1278,
																						"src": "8214:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1289,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1278,
																						"src": "8223:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1291,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1269,
																					"src": "8232:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1297,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1276,
														"id": 1299,
														"nodeType": "Return",
														"src": "8170:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:8",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "8036:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "8047:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$904",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1271,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1270,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 904,
														"src": "8047:8:8"
													},
													"referencedDeclaration": 904,
													"src": "8047:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$904",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:8"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "8089:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:8"
									},
									"scope": 1762,
									"src": "8022:237:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "8444:922:8",
										"statements": [
											{
												"assignments": [
													1311
												],
												"declarations": [
													{
														"constant": false,
														"id": 1311,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1433,
														"src": "8454:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1310,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1313,
												"initialValue": {
													"hexValue": "30",
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:8"
											},
											{
												"id": 1430,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1314,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "8510:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1328,
														"nodeType": "IfStatement",
														"src": "8506:99:8",
														"trueBody": {
															"id": 1327,
															"nodeType": "Block",
															"src": "8528:77:8",
															"statements": [
																{
																	"expression": {
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1319,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "8546:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1322,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:8"
																},
																{
																	"expression": {
																		"id": 1325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1323,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "8577:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1326,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1329,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "8622:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1343,
														"nodeType": "IfStatement",
														"src": "8618:96:8",
														"trueBody": {
															"id": 1342,
															"nodeType": "Block",
															"src": "8639:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1334,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "8657:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1337,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:8"
																},
																{
																	"expression": {
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1338,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "8687:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1341,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1344,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "8731:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1358,
														"nodeType": "IfStatement",
														"src": "8727:96:8",
														"trueBody": {
															"id": 1357,
															"nodeType": "Block",
															"src": "8748:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1349,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "8766:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1352,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:8"
																},
																{
																	"expression": {
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1353,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "8796:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1356,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1359,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "8840:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1373,
														"nodeType": "IfStatement",
														"src": "8836:96:8",
														"trueBody": {
															"id": 1372,
															"nodeType": "Block",
															"src": "8857:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1364,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "8875:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1367,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:8"
																},
																{
																	"expression": {
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1368,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "8905:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1371,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1374,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "8949:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1388,
														"nodeType": "IfStatement",
														"src": "8945:93:8",
														"trueBody": {
															"id": 1387,
															"nodeType": "Block",
															"src": "8965:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1379,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "8983:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1382,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:8"
																},
																{
																	"expression": {
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1383,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "9012:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1386,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1389,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "9055:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1403,
														"nodeType": "IfStatement",
														"src": "9051:93:8",
														"trueBody": {
															"id": 1402,
															"nodeType": "Block",
															"src": "9071:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1394,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "9089:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1397,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:8"
																},
																{
																	"expression": {
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1398,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "9118:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1401,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1404,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "9161:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1418,
														"nodeType": "IfStatement",
														"src": "9157:93:8",
														"trueBody": {
															"id": 1417,
															"nodeType": "Block",
															"src": "9177:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1409,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "9195:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1412,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:8"
																},
																{
																	"expression": {
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1413,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "9224:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1416,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1419,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "9267:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1429,
														"nodeType": "IfStatement",
														"src": "9263:64:8",
														"trueBody": {
															"id": 1428,
															"nodeType": "Block",
															"src": "9283:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1424,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "9301:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1427,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1431,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1311,
													"src": "9353:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1309,
												"id": 1432,
												"nodeType": "Return",
												"src": "9346:13:8"
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:8",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "8397:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:8"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "8435:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:8"
									},
									"scope": 1762,
									"src": "8383:983:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "9599:165:8",
										"statements": [
											{
												"id": 1468,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:8",
												"statements": [
													{
														"assignments": [
															1446
														],
														"declarations": [
															{
																"constant": false,
																"id": 1446,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1468,
																"src": "9633:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1445,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1450,
														"initialValue": {
															"arguments": [
																{
																	"id": 1448,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "9655:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1447,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1434,
																	1470
																],
																"referencedDeclaration": 1434,
																"src": "9650:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1451,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "9682:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$904",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1455,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1452,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1440,
																					"src": "9692:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$904",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1453,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 904,
																						"src": "9704:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$904_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1454,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 902,
																					"src": "9704:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$904",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1458,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1456,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1457,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1446,
																						"src": "9724:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1459,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1437,
																					"src": "9733:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1465,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1444,
														"id": 1467,
														"nodeType": "Return",
														"src": "9675:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:8",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "9533:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "9548:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$904",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1439,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1438,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 904,
														"src": "9548:8:8"
													},
													"referencedDeclaration": 904,
													"src": "9548:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$904",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:8"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "9590:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:8"
									},
									"scope": 1762,
									"src": "9519:245:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "9951:828:8",
										"statements": [
											{
												"assignments": [
													1479
												],
												"declarations": [
													{
														"constant": false,
														"id": 1479,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1598,
														"src": "9961:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1478,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1481,
												"initialValue": {
													"hexValue": "30",
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:8"
											},
											{
												"id": 1595,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1482,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "10017:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1498,
														"nodeType": "IfStatement",
														"src": "10013:99:8",
														"trueBody": {
															"id": 1497,
															"nodeType": "Block",
															"src": "10034:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1487,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1473,
																			"src": "10052:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1489,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1492,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:8"
																},
																{
																	"expression": {
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1493,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "10085:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1496,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1499,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "10129:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1515,
														"nodeType": "IfStatement",
														"src": "10125:99:8",
														"trueBody": {
															"id": 1514,
															"nodeType": "Block",
															"src": "10146:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1504,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1473,
																			"src": "10164:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1509,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:8"
																},
																{
																	"expression": {
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1510,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "10197:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1513,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1516,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "10241:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1532,
														"nodeType": "IfStatement",
														"src": "10237:99:8",
														"trueBody": {
															"id": 1531,
															"nodeType": "Block",
															"src": "10258:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1521,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1473,
																			"src": "10276:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1522,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1526,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:8"
																},
																{
																	"expression": {
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1527,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "10309:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1530,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "10353:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1549,
														"nodeType": "IfStatement",
														"src": "10349:96:8",
														"trueBody": {
															"id": 1548,
															"nodeType": "Block",
															"src": "10369:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1538,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1473,
																			"src": "10387:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1543,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:8"
																},
																{
																	"expression": {
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1544,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "10419:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1547,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1550,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "10462:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1566,
														"nodeType": "IfStatement",
														"src": "10458:96:8",
														"trueBody": {
															"id": 1565,
															"nodeType": "Block",
															"src": "10478:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1555,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1473,
																			"src": "10496:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1560,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:8"
																},
																{
																	"expression": {
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1561,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "10528:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1564,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1567,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "10571:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1583,
														"nodeType": "IfStatement",
														"src": "10567:96:8",
														"trueBody": {
															"id": 1582,
															"nodeType": "Block",
															"src": "10587:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1572,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1473,
																			"src": "10605:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1577,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:8"
																},
																{
																	"expression": {
																		"id": 1580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1578,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "10637:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1581,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1584,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "10680:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1594,
														"nodeType": "IfStatement",
														"src": "10676:64:8",
														"trueBody": {
															"id": 1593,
															"nodeType": "Block",
															"src": "10696:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1589,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "10714:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1592,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1596,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1479,
													"src": "10766:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1477,
												"id": 1597,
												"nodeType": "Return",
												"src": "10759:13:8"
											}
										]
									},
									"documentation": {
										"id": 1471,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:8",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "9904:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:8"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "9942:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:8"
									},
									"scope": 1762,
									"src": "9889:890:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "11014:165:8",
										"statements": [
											{
												"id": 1633,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:8",
												"statements": [
													{
														"assignments": [
															1611
														],
														"declarations": [
															{
																"constant": false,
																"id": 1611,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1633,
																"src": "11048:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1610,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1615,
														"initialValue": {
															"arguments": [
																{
																	"id": 1613,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "11071:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1612,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1599,
																	1635
																],
																"referencedDeclaration": 1599,
																"src": "11065:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1616,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "11098:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$904",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1620,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1617,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1605,
																					"src": "11108:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$904",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1618,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 904,
																						"src": "11120:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$904_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1619,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 902,
																					"src": "11120:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$904",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1625,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1623,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1621,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1622,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1611,
																						"src": "11139:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1624,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1602,
																					"src": "11148:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1630,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1609,
														"id": 1632,
														"nodeType": "Return",
														"src": "11091:71:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "10948:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "10963:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$904",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1604,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1603,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 904,
														"src": "10963:8:8"
													},
													"referencedDeclaration": 904,
													"src": "10963:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$904",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:8"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "11005:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:8"
									},
									"scope": 1762,
									"src": "10933:246:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "11493:600:8",
										"statements": [
											{
												"assignments": [
													1644
												],
												"declarations": [
													{
														"constant": false,
														"id": 1644,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1721,
														"src": "11503:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1646,
												"initialValue": {
													"hexValue": "30",
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:8"
											},
											{
												"id": 1718,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1647,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "11559:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1661,
														"nodeType": "IfStatement",
														"src": "11555:98:8",
														"trueBody": {
															"id": 1660,
															"nodeType": "Block",
															"src": "11577:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1652,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1638,
																			"src": "11595:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1655,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:8"
																},
																{
																	"expression": {
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1656,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1644,
																			"src": "11626:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1659,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1662,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "11670:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1676,
														"nodeType": "IfStatement",
														"src": "11666:95:8",
														"trueBody": {
															"id": 1675,
															"nodeType": "Block",
															"src": "11687:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1667,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1638,
																			"src": "11705:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1670,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:8"
																},
																{
																	"expression": {
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1671,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1644,
																			"src": "11735:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1674,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1677,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "11778:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1691,
														"nodeType": "IfStatement",
														"src": "11774:95:8",
														"trueBody": {
															"id": 1690,
															"nodeType": "Block",
															"src": "11795:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1682,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1638,
																			"src": "11813:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1685,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:8"
																},
																{
																	"expression": {
																		"id": 1688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1686,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1644,
																			"src": "11843:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1689,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1692,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "11886:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1706,
														"nodeType": "IfStatement",
														"src": "11882:95:8",
														"trueBody": {
															"id": 1705,
															"nodeType": "Block",
															"src": "11903:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1697,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1638,
																			"src": "11921:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1700,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:8"
																},
																{
																	"expression": {
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1701,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1644,
																			"src": "11951:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1704,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1707,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "11994:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1717,
														"nodeType": "IfStatement",
														"src": "11990:64:8",
														"trueBody": {
															"id": 1716,
															"nodeType": "Block",
															"src": "12010:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1712,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1644,
																			"src": "12028:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1715,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1719,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1644,
													"src": "12080:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1642,
												"id": 1720,
												"nodeType": "Return",
												"src": "12073:13:8"
											}
										]
									},
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:8",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "11446:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:8"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "11484:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:8"
									},
									"scope": 1762,
									"src": "11430:663:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "12329:173:8",
										"statements": [
											{
												"id": 1759,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:8",
												"statements": [
													{
														"assignments": [
															1734
														],
														"declarations": [
															{
																"constant": false,
																"id": 1734,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1759,
																"src": "12363:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1733,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1738,
														"initialValue": {
															"arguments": [
																{
																	"id": 1736,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "12387:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1735,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1722,
																	1761
																],
																"referencedDeclaration": 1722,
																"src": "12380:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1739,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "12414:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$904",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1740,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1728,
																					"src": "12424:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$904",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1741,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 904,
																						"src": "12436:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$904_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1742,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 902,
																					"src": "12436:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$904",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1749,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1744,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1747,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1745,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1734,
																									"src": "12457:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1746,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1748,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1750,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1725,
																					"src": "12471:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1756,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1732,
														"id": 1758,
														"nodeType": "Return",
														"src": "12407:78:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "12263:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "12278:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$904",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1727,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1726,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 904,
														"src": "12278:8:8"
													},
													"referencedDeclaration": 904,
													"src": "12278:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$904",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:8"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "12320:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:8"
									},
									"scope": 1762,
									"src": "12247:255:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1763,
							"src": "202:12302:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12402:8"
				},
				"id": 8
			}
		}
	}
}