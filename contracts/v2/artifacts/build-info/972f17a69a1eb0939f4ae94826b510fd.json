{
	"id": "972f17a69a1eb0939f4ae94826b510fd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/v2/TikTrixAction.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\";\n\ncontract TikTrixAction is AccessControl {\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    event GamePlayed(uint256 indexed gameSeq, uint256 indexed memberSeq);\n    event GameEnded(uint256 indexed gameSeq, uint256 indexed memberSeq);\n    event GamePaused(uint256 indexed gameSeq, uint256 indexed memberSeq);\n    event GameUnPaused(uint256 indexed gameSeq, uint256 indexed memberSeq);\n    event GameLiked(uint256 indexed gameSeq, uint256 indexed memberSeq);\n\n    constructor() {\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _setupRole(ADMIN_ROLE, msg.sender);\n    }\n\n    function grantAdminRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        grantRole(ADMIN_ROLE, account);\n    }\n\n    function revokeAdminRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        revokeRole(ADMIN_ROLE, account);\n    }\n\n    function gamePlay(uint256 gameSeq, uint256 memberSeq) external {\n\n        emit GamePlayed(gameSeq, memberSeq);\n    }\n\n    function gameEnd(uint256 gameSeq, uint256 memberSeq) external {\n\n        emit GameEnded(gameSeq, memberSeq);\n    }\n\n    function gamePause(uint256 gameSeq, uint256 memberSeq) external {\n\n        emit GamePaused(gameSeq, memberSeq);\n    }\n\n     function gameUnPause(uint256 gameSeq, uint256 memberSeq) external {\n\n        emit GameUnPaused(gameSeq, memberSeq);\n    }\n\n    function gameLike(uint256 gameSeq, uint256 memberSeq) external {\n\n        emit GameLiked(gameSeq, memberSeq);\n    }\n\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/v2/TikTrixAction.sol": {
				"TikTrixAction": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "memberSeq",
									"type": "uint256"
								}
							],
							"name": "GameEnded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "memberSeq",
									"type": "uint256"
								}
							],
							"name": "GameLiked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "memberSeq",
									"type": "uint256"
								}
							],
							"name": "GamePaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "memberSeq",
									"type": "uint256"
								}
							],
							"name": "GamePlayed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "memberSeq",
									"type": "uint256"
								}
							],
							"name": "GameUnPaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memberSeq",
									"type": "uint256"
								}
							],
							"name": "gameEnd",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memberSeq",
									"type": "uint256"
								}
							],
							"name": "gameLike",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memberSeq",
									"type": "uint256"
								}
							],
							"name": "gamePause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memberSeq",
									"type": "uint256"
								}
							],
							"name": "gamePlay",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameSeq",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memberSeq",
									"type": "uint256"
								}
							],
							"name": "gameUnPause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantAdminRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeAdminRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/v2/TikTrixAction.sol\":281:1761  contract TikTrixAction is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/v2/TikTrixAction.sol\":765:882  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/v2/TikTrixAction.sol\":789:831  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"contracts/v2/TikTrixAction.sol\":800:818  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/v2/TikTrixAction.sol\":820:830  msg.sender */\n  caller\n    /* \"contracts/v2/TikTrixAction.sol\":789:799  _setupRole */\n  shl(0x20, tag_5)\n    /* \"contracts/v2/TikTrixAction.sol\":789:831  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/v2/TikTrixAction.sol\":841:875  _setupRole(ADMIN_ROLE, msg.sender) */\n  tag_6\n    /* \"contracts/v2/TikTrixAction.sol\":364:387  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"contracts/v2/TikTrixAction.sol\":864:874  msg.sender */\n  caller\n    /* \"contracts/v2/TikTrixAction.sol\":841:851  _setupRole */\n  shl(0x20, tag_5)\n    /* \"contracts/v2/TikTrixAction.sol\":841:875  _setupRole(ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/v2/TikTrixAction.sol\":281:1761  contract TikTrixAction is AccessControl {... */\n  jump(tag_7)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6811:6921  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6889:6914  _grantRole(role, account) */\n  tag_9\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6900:6904  role */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6906:6913  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6889:6899  _grantRole */\n  shl(0x20, tag_10)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6889:6914  _grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6811:6921  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_10:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n  tag_12\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7552:7556  role */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7558:7565  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7544:7551  hasRole */\n  shl(0x20, tag_13)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n  tag_14\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7614:7618  true */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7588  _roles */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7589:7593  role */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7602  _roles[role].members */\n  0x00\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7603:7610  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7618  _roles[role].members[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n  tag_15\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7664:7674  _msgSender */\n  shl(0x20, tag_16)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7655:7662  account */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7649:7653  role */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\ntag_14:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_13:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3010  _roles */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3011:3015  role */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n  0x00\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3025:3032  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_16:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/v2/TikTrixAction.sol\":281:1761  contract TikTrixAction is AccessControl {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/v2/TikTrixAction.sol\":281:1761  contract TikTrixAction is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9a19c7b0\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xc02725f0\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xc02725f0\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc634b78e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf58ee354\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x9a19c7b0\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9b4c7ced\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xaac2094a\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x36568abe\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x66c77df7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/v2/TikTrixAction.sol\":1392:1509  function gamePause(uint256 gameSeq, uint256 memberSeq) external {... */\n    tag_7:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/v2/TikTrixAction.sol\":327:387  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_8:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/v2/TikTrixAction.sol\":1018:1144  function revokeAdminRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/v2/TikTrixAction.sol\":1516:1637  function gameUnPause(uint256 gameSeq, uint256 memberSeq) external {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_12:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/v2/TikTrixAction.sol\":1272:1386  function gameEnd(uint256 gameSeq, uint256 memberSeq) external {... */\n    tag_13:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/v2/TikTrixAction.sol\":1150:1266  function gamePlay(uint256 gameSeq, uint256 memberSeq) external {... */\n    tag_14:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/v2/TikTrixAction.sol\":888:1012  function grantAdminRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_15:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_16:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/v2/TikTrixAction.sol\":1643:1758  function gameLike(uint256 gameSeq, uint256 memberSeq) external {... */\n    tag_17:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2691:2695  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2729:2761  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2714:2725  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_77\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2789:2800  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2765:2788  super.supportsInterface */\n      tag_79\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_77:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2707:2801  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_30:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4452:4459  bytes32 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4478:4484  _roles */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4478:4490  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4485:4489  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4478:4490  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4478:4500  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4471:4500  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4886:4904  getRoleAdmin(role) */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4899:4903  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4886:4898  getRoleAdmin */\n      tag_30\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4886:4904  getRoleAdmin(role) */\n      jump\t// in\n    tag_81:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_83\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_84\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_83:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4916:4941  _grantRole(role, account) */\n      tag_86\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4927:4931  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4933:4940  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4916:4926  _grantRole */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4916:4941  _grantRole(role, account) */\n      jump\t// in\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6018:6030  _msgSender() */\n      tag_89\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6018:6028  _msgSender */\n      tag_90\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6018:6030  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6007:6030  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6007:6014  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6007:6030  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5999:6082  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6093:6119  _revokeRole(role, account) */\n      tag_94\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6105:6109  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6111:6118  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6093:6104  _revokeRole */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":6093:6119  _revokeRole(role, account) */\n      jump\t// in\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/v2/TikTrixAction.sol\":1392:1509  function gamePause(uint256 gameSeq, uint256 memberSeq) external {... */\n    tag_43:\n        /* \"contracts/v2/TikTrixAction.sol\":1492:1501  memberSeq */\n      dup1\n        /* \"contracts/v2/TikTrixAction.sol\":1483:1490  gameSeq */\n      dup3\n        /* \"contracts/v2/TikTrixAction.sol\":1472:1502  GamePaused(gameSeq, memberSeq) */\n      0xf5704ea1fb9a06b3c4911041793afd3003eac5b15756eef2987e75303f9f34c6\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/v2/TikTrixAction.sol\":1392:1509  function gamePause(uint256 gameSeq, uint256 memberSeq) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/v2/TikTrixAction.sol\":327:387  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_45:\n        /* \"contracts/v2/TikTrixAction.sol\":364:387  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/v2/TikTrixAction.sol\":327:387  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_49:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2981:2985  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3010  _roles */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3011:3015  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3025:3032  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/v2/TikTrixAction.sol\":1018:1144  function revokeAdminRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"contracts/v2/TikTrixAction.sol\":1076:1094  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_99\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_84\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/v2/TikTrixAction.sol\":1106:1137  revokeRole(ADMIN_ROLE, account) */\n      tag_101\n        /* \"contracts/v2/TikTrixAction.sol\":364:387  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/v2/TikTrixAction.sol\":1129:1136  account */\n      dup4\n        /* \"contracts/v2/TikTrixAction.sol\":1106:1116  revokeRole */\n      tag_72\n        /* \"contracts/v2/TikTrixAction.sol\":1106:1137  revokeRole(ADMIN_ROLE, account) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/v2/TikTrixAction.sol\":1018:1144  function revokeAdminRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/v2/TikTrixAction.sol\":1516:1637  function gameUnPause(uint256 gameSeq, uint256 memberSeq) external {... */\n    tag_57:\n        /* \"contracts/v2/TikTrixAction.sol\":1620:1629  memberSeq */\n      dup1\n        /* \"contracts/v2/TikTrixAction.sol\":1611:1618  gameSeq */\n      dup3\n        /* \"contracts/v2/TikTrixAction.sol\":1598:1630  GameUnPaused(gameSeq, memberSeq) */\n      0x96af4cfe56c938154cf8986288dfea262d8b1caa075204f4679ae517bcea70b9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/v2/TikTrixAction.sol\":1516:1637  function gameUnPause(uint256 gameSeq, uint256 memberSeq) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/v2/TikTrixAction.sol\":1272:1386  function gameEnd(uint256 gameSeq, uint256 memberSeq) external {... */\n    tag_63:\n        /* \"contracts/v2/TikTrixAction.sol\":1369:1378  memberSeq */\n      dup1\n        /* \"contracts/v2/TikTrixAction.sol\":1360:1367  gameSeq */\n      dup3\n        /* \"contracts/v2/TikTrixAction.sol\":1350:1379  GameEnded(gameSeq, memberSeq) */\n      0x4c4660db760944215f41e957066d756ad5fd0eed1b4640632322eb06f77b034d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/v2/TikTrixAction.sol\":1272:1386  function gameEnd(uint256 gameSeq, uint256 memberSeq) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/v2/TikTrixAction.sol\":1150:1266  function gamePlay(uint256 gameSeq, uint256 memberSeq) external {... */\n    tag_66:\n        /* \"contracts/v2/TikTrixAction.sol\":1249:1258  memberSeq */\n      dup1\n        /* \"contracts/v2/TikTrixAction.sol\":1240:1247  gameSeq */\n      dup3\n        /* \"contracts/v2/TikTrixAction.sol\":1229:1259  GamePlayed(gameSeq, memberSeq) */\n      0xcccca5c37cd734d94742d46e24d5fcdc3e6ef8dd90dda510dae0e35530add4a2\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/v2/TikTrixAction.sol\":1150:1266  function gamePlay(uint256 gameSeq, uint256 memberSeq) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/v2/TikTrixAction.sol\":888:1012  function grantAdminRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"contracts/v2/TikTrixAction.sol\":945:963  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_106\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_84\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/v2/TikTrixAction.sol\":975:1005  grantRole(ADMIN_ROLE, account) */\n      tag_108\n        /* \"contracts/v2/TikTrixAction.sol\":364:387  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/v2/TikTrixAction.sol\":997:1004  account */\n      dup4\n        /* \"contracts/v2/TikTrixAction.sol\":975:984  grantRole */\n      tag_36\n        /* \"contracts/v2/TikTrixAction.sol\":975:1005  grantRole(ADMIN_ROLE, account) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/v2/TikTrixAction.sol\":888:1012  function grantAdminRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5312:5330  getRoleAdmin(role) */\n      tag_109\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5325:5329  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5312:5324  getRoleAdmin */\n      tag_30\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5312:5330  getRoleAdmin(role) */\n      jump\t// in\n    tag_109:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_84\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_111:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5342:5368  _revokeRole(role, account) */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5354:5358  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5360:5367  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5342:5353  _revokeRole */\n      tag_95\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5342:5368  _revokeRole(role, account) */\n      jump\t// in\n    tag_113:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/v2/TikTrixAction.sol\":1643:1758  function gameLike(uint256 gameSeq, uint256 memberSeq) external {... */\n    tag_75:\n        /* \"contracts/v2/TikTrixAction.sol\":1741:1750  memberSeq */\n      dup1\n        /* \"contracts/v2/TikTrixAction.sol\":1732:1739  gameSeq */\n      dup3\n        /* \"contracts/v2/TikTrixAction.sol\":1722:1751  GameLiked(gameSeq, memberSeq) */\n      0x51dbb46f6f6d290ac0b2b3fb0b015e2065756f1b9ec382651fe728757bf362fe\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/v2/TikTrixAction.sol\":1643:1758  function gameLike(uint256 gameSeq, uint256 memberSeq) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_84:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3411:3415  role */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      tag_118\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3417:3427  _msgSender */\n      tag_90\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      jump\t// in\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n      tag_119\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n      tag_121\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7552:7556  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7558:7565  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7544:7551  hasRole */\n      tag_49\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n      jump\t// in\n    tag_121:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n      tag_122\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7614:7618  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7588  _roles */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7589:7593  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7602  _roles[role].members */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7603:7610  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7582:7618  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7664:7674  _msgSender */\n      tag_90\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7655:7662  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7649:7653  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n    tag_122:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_90:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7865:8099  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_95:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7948:7970  hasRole(role, account) */\n      tag_126\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7956:7960  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7962:7969  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7948:7955  hasRole */\n      tag_49\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7948:7970  hasRole(role, account) */\n      jump\t// in\n    tag_126:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7944:8093  if (hasRole(role, account)) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8018:8023  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7986:7992  _roles */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7986:7998  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7993:7997  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7986:7998  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7986:8006  _roles[role].members */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7986:8015  _roles[role].members[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8007:8014  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7986:8015  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7986:8023  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8069:8081  _msgSender() */\n      tag_128\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8069:8079  _msgSender */\n      tag_90\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8069:8081  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8060:8067  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8054:8058  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7944:8093  if (hasRole(role, account)) {... */\n    tag_127:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":7865:8099  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3718:4197  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_119:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      tag_130\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3814:3818  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3820:3827  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3806:3813  hasRole */\n      tag_49\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      jump\t// in\n    tag_130:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3801:4191  if (!hasRole(role, account)) {... */\n      tag_131\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3989:4017  Strings.toHexString(account) */\n      tag_132\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4009:4016  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n      tag_133\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3989:4017  Strings.toHexString(account) */\n      jump\t// in\n    tag_132:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4088:4126  Strings.toHexString(uint256(role), 32) */\n      tag_134\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4116:4120  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4108:4121  uint256(role) */\n      0x00\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4123:4125  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4088:4107  Strings.toHexString */\n      tag_135\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":4088:4126  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_134:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3896:4148  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_136\n      swap3\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3844:4180  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3801:4191  if (!hasRole(role, account)) {... */\n    tag_131:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":3718:4197  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2102:2251  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_133:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2160:2173  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_141\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2220:2224  addr */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2204:2226  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":311:313  20 */\n      0x14\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2192:2203  toHexString */\n      tag_135\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_141:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2185:2244  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":2102:2251  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1513:1950  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_135:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1588:1601  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1613:1632  bytes memory buffer */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1658:1659  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1649:1655  length */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1645:1646  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1645:1655  2 * length */\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1645:1659  2 * length + 2 */\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1635:1660  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_147\n      jumpi\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n    tag_147:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_150\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_150:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1613:1660  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1670:1685  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1670:1676  buffer */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1677:1678  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1670:1679  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_151\n      jumpi\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n    tag_151:\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1670:1685  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1695:1710  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1695:1701  buffer */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1702:1703  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1695:1704  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_154\n      jumpi\n      tag_155\n      tag_153\n      jump\t// in\n    tag_155:\n    tag_154:\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1695:1710  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1725:1734  uint256 i */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1750:1751  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1741:1747  length */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1737:1738  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1737:1747  2 * length */\n      tag_159\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_159:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1737:1751  2 * length + 1 */\n      tag_160\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_160:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1725:1751  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_156:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1757:1758  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1753:1754  i */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1753:1758  i > 1 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1791:1799  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1808:1811  0xf */\n      0x0f\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1800:1805  value */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1800:1811  value & 0xf */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1791:1812  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_161\n      jumpi\n      tag_162\n      tag_153\n      jump\t// in\n    tag_162:\n    tag_161:\n      byte\n      0xf8\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1779:1785  buffer */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1786:1787  i */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1779:1788  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_163\n      jumpi\n      tag_164\n      tag_153\n      jump\t// in\n    tag_164:\n    tag_163:\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1779:1812  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1836:1837  4 */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1826:1837  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1760:1763  --i */\n      dup1\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_156)\n    tag_157:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1874:1875  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1865:1870  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1865:1875  value == 0 */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1857:1912  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1936:1942  buffer */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1922:1943  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":1513:1950  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_171:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_173:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_174:\n        /* \"#utility.yul\":561:584   */\n      tag_211\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_173\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_212:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_175:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_214\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_174\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_23:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_217\n      tag_171\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":833:952   */\n    tag_216:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_218\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_175\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_176:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_177:\n        /* \"#utility.yul\":1268:1289   */\n      tag_221\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_176\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_26:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_223\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_177\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_178:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_179:\n        /* \"#utility.yul\":1674:1698   */\n      tag_226\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_178\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_227:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_180:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_229\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_179\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_29:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_232\n      tag_171\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1950:2069   */\n    tag_231:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_233\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_180\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2327   */\n    tag_181:\n        /* \"#utility.yul\":2296:2320   */\n      tag_235\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2296:2320   */\n      tag_178\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2291:2294   */\n      dup3\n        /* \"#utility.yul\":2284:2321   */\n      mstore\n        /* \"#utility.yul\":2209:2327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2555   */\n    tag_32:\n        /* \"#utility.yul\":2426:2430   */\n      0x00\n        /* \"#utility.yul\":2464:2466   */\n      0x20\n        /* \"#utility.yul\":2453:2462   */\n      dup3\n        /* \"#utility.yul\":2449:2467   */\n      add\n        /* \"#utility.yul\":2441:2467   */\n      swap1\n      pop\n        /* \"#utility.yul\":2477:2548   */\n      tag_237\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2521:2527   */\n      dup5\n        /* \"#utility.yul\":2477:2548   */\n      tag_181\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2333:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2687   */\n    tag_182:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2638:2680   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2631:2636   */\n      dup3\n        /* \"#utility.yul\":2627:2681   */\n      and\n        /* \"#utility.yul\":2616:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2789   */\n    tag_183:\n        /* \"#utility.yul\":2730:2737   */\n      0x00\n        /* \"#utility.yul\":2759:2783   */\n      tag_240\n        /* \"#utility.yul\":2777:2782   */\n      dup3\n        /* \"#utility.yul\":2759:2783   */\n      tag_182\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2748:2783   */\n      swap1\n      pop\n        /* \"#utility.yul\":2693:2789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2917   */\n    tag_184:\n        /* \"#utility.yul\":2868:2892   */\n      tag_242\n        /* \"#utility.yul\":2886:2891   */\n      dup2\n        /* \"#utility.yul\":2868:2892   */\n      tag_183\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2858:2893   */\n      eq\n        /* \"#utility.yul\":2848:2911   */\n      tag_243\n      jumpi\n        /* \"#utility.yul\":2907:2908   */\n      0x00\n        /* \"#utility.yul\":2904:2905   */\n      dup1\n        /* \"#utility.yul\":2897:2909   */\n      revert\n        /* \"#utility.yul\":2848:2911   */\n    tag_243:\n        /* \"#utility.yul\":2795:2917   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2923:3062   */\n    tag_185:\n        /* \"#utility.yul\":2969:2974   */\n      0x00\n        /* \"#utility.yul\":3007:3013   */\n      dup2\n        /* \"#utility.yul\":2994:3014   */\n      calldataload\n        /* \"#utility.yul\":2985:3014   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3056   */\n      tag_245\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3023:3056   */\n      tag_184\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2923:3062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3542   */\n    tag_35:\n        /* \"#utility.yul\":3136:3142   */\n      0x00\n        /* \"#utility.yul\":3144:3150   */\n      dup1\n        /* \"#utility.yul\":3193:3195   */\n      0x40\n        /* \"#utility.yul\":3181:3190   */\n      dup4\n        /* \"#utility.yul\":3172:3179   */\n      dup6\n        /* \"#utility.yul\":3168:3191   */\n      sub\n        /* \"#utility.yul\":3164:3196   */\n      slt\n        /* \"#utility.yul\":3161:3280   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":3199:3278   */\n      tag_248\n      tag_171\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3161:3280   */\n    tag_247:\n        /* \"#utility.yul\":3319:3320   */\n      0x00\n        /* \"#utility.yul\":3344:3397   */\n      tag_249\n        /* \"#utility.yul\":3389:3396   */\n      dup6\n        /* \"#utility.yul\":3380:3386   */\n      dup3\n        /* \"#utility.yul\":3369:3378   */\n      dup7\n        /* \"#utility.yul\":3365:3387   */\n      add\n        /* \"#utility.yul\":3344:3397   */\n      tag_180\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3334:3397   */\n      swap3\n      pop\n        /* \"#utility.yul\":3290:3407   */\n      pop\n        /* \"#utility.yul\":3446:3448   */\n      0x20\n        /* \"#utility.yul\":3472:3525   */\n      tag_250\n        /* \"#utility.yul\":3517:3524   */\n      dup6\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup7\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_185\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3417:3535   */\n      pop\n        /* \"#utility.yul\":3068:3542   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3625   */\n    tag_186:\n        /* \"#utility.yul\":3585:3592   */\n      0x00\n        /* \"#utility.yul\":3614:3619   */\n      dup2\n        /* \"#utility.yul\":3603:3619   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3631:3753   */\n    tag_187:\n        /* \"#utility.yul\":3704:3728   */\n      tag_253\n        /* \"#utility.yul\":3722:3727   */\n      dup2\n        /* \"#utility.yul\":3704:3728   */\n      tag_186\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":3697:3702   */\n      dup2\n        /* \"#utility.yul\":3694:3729   */\n      eq\n        /* \"#utility.yul\":3684:3747   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":3743:3744   */\n      0x00\n        /* \"#utility.yul\":3740:3741   */\n      dup1\n        /* \"#utility.yul\":3733:3745   */\n      revert\n        /* \"#utility.yul\":3684:3747   */\n    tag_254:\n        /* \"#utility.yul\":3631:3753   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3759:3898   */\n    tag_188:\n        /* \"#utility.yul\":3805:3810   */\n      0x00\n        /* \"#utility.yul\":3843:3849   */\n      dup2\n        /* \"#utility.yul\":3830:3850   */\n      calldataload\n        /* \"#utility.yul\":3821:3850   */\n      swap1\n      pop\n        /* \"#utility.yul\":3859:3892   */\n      tag_256\n        /* \"#utility.yul\":3886:3891   */\n      dup2\n        /* \"#utility.yul\":3859:3892   */\n      tag_187\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3759:3898   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3904:4378   */\n    tag_42:\n        /* \"#utility.yul\":3972:3978   */\n      0x00\n        /* \"#utility.yul\":3980:3986   */\n      dup1\n        /* \"#utility.yul\":4029:4031   */\n      0x40\n        /* \"#utility.yul\":4017:4026   */\n      dup4\n        /* \"#utility.yul\":4008:4015   */\n      dup6\n        /* \"#utility.yul\":4004:4027   */\n      sub\n        /* \"#utility.yul\":4000:4032   */\n      slt\n        /* \"#utility.yul\":3997:4116   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":4035:4114   */\n      tag_259\n      tag_171\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3997:4116   */\n    tag_258:\n        /* \"#utility.yul\":4155:4156   */\n      0x00\n        /* \"#utility.yul\":4180:4233   */\n      tag_260\n        /* \"#utility.yul\":4225:4232   */\n      dup6\n        /* \"#utility.yul\":4216:4222   */\n      dup3\n        /* \"#utility.yul\":4205:4214   */\n      dup7\n        /* \"#utility.yul\":4201:4223   */\n      add\n        /* \"#utility.yul\":4180:4233   */\n      tag_188\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":4170:4233   */\n      swap3\n      pop\n        /* \"#utility.yul\":4126:4243   */\n      pop\n        /* \"#utility.yul\":4282:4284   */\n      0x20\n        /* \"#utility.yul\":4308:4361   */\n      tag_261\n        /* \"#utility.yul\":4353:4360   */\n      dup6\n        /* \"#utility.yul\":4344:4350   */\n      dup3\n        /* \"#utility.yul\":4333:4342   */\n      dup7\n        /* \"#utility.yul\":4329:4351   */\n      add\n        /* \"#utility.yul\":4308:4361   */\n      tag_188\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4298:4361   */\n      swap2\n      pop\n        /* \"#utility.yul\":4253:4371   */\n      pop\n        /* \"#utility.yul\":3904:4378   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4384:4713   */\n    tag_53:\n        /* \"#utility.yul\":4443:4449   */\n      0x00\n        /* \"#utility.yul\":4492:4494   */\n      0x20\n        /* \"#utility.yul\":4480:4489   */\n      dup3\n        /* \"#utility.yul\":4471:4478   */\n      dup5\n        /* \"#utility.yul\":4467:4490   */\n      sub\n        /* \"#utility.yul\":4463:4495   */\n      slt\n        /* \"#utility.yul\":4460:4579   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":4498:4577   */\n      tag_264\n      tag_171\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":4460:4579   */\n    tag_263:\n        /* \"#utility.yul\":4618:4619   */\n      0x00\n        /* \"#utility.yul\":4643:4696   */\n      tag_265\n        /* \"#utility.yul\":4688:4695   */\n      dup5\n        /* \"#utility.yul\":4679:4685   */\n      dup3\n        /* \"#utility.yul\":4668:4677   */\n      dup6\n        /* \"#utility.yul\":4664:4686   */\n      add\n        /* \"#utility.yul\":4643:4696   */\n      tag_185\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4633:4696   */\n      swap2\n      pop\n        /* \"#utility.yul\":4589:4706   */\n      pop\n        /* \"#utility.yul\":4384:4713   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4719:4888   */\n    tag_189:\n        /* \"#utility.yul\":4803:4814   */\n      0x00\n        /* \"#utility.yul\":4837:4843   */\n      dup3\n        /* \"#utility.yul\":4832:4835   */\n      dup3\n        /* \"#utility.yul\":4825:4844   */\n      mstore\n        /* \"#utility.yul\":4877:4881   */\n      0x20\n        /* \"#utility.yul\":4872:4875   */\n      dup3\n        /* \"#utility.yul\":4868:4882   */\n      add\n        /* \"#utility.yul\":4853:4882   */\n      swap1\n      pop\n        /* \"#utility.yul\":4719:4888   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4894:5128   */\n    tag_190:\n        /* \"#utility.yul\":5034:5068   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":5030:5031   */\n      0x00\n        /* \"#utility.yul\":5022:5028   */\n      dup3\n        /* \"#utility.yul\":5018:5032   */\n      add\n        /* \"#utility.yul\":5011:5069   */\n      mstore\n        /* \"#utility.yul\":5103:5120   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":5098:5100   */\n      0x20\n        /* \"#utility.yul\":5090:5096   */\n      dup3\n        /* \"#utility.yul\":5086:5101   */\n      add\n        /* \"#utility.yul\":5079:5121   */\n      mstore\n        /* \"#utility.yul\":4894:5128   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5134:5500   */\n    tag_191:\n        /* \"#utility.yul\":5276:5279   */\n      0x00\n        /* \"#utility.yul\":5297:5364   */\n      tag_269\n        /* \"#utility.yul\":5361:5363   */\n      0x2f\n        /* \"#utility.yul\":5356:5359   */\n      dup4\n        /* \"#utility.yul\":5297:5364   */\n      tag_189\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5290:5364   */\n      swap2\n      pop\n        /* \"#utility.yul\":5373:5466   */\n      tag_270\n        /* \"#utility.yul\":5462:5465   */\n      dup3\n        /* \"#utility.yul\":5373:5466   */\n      tag_190\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5491:5493   */\n      0x40\n        /* \"#utility.yul\":5486:5489   */\n      dup3\n        /* \"#utility.yul\":5482:5494   */\n      add\n        /* \"#utility.yul\":5475:5494   */\n      swap1\n      pop\n        /* \"#utility.yul\":5134:5500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5506:5925   */\n    tag_93:\n        /* \"#utility.yul\":5672:5676   */\n      0x00\n        /* \"#utility.yul\":5710:5712   */\n      0x20\n        /* \"#utility.yul\":5699:5708   */\n      dup3\n        /* \"#utility.yul\":5695:5713   */\n      add\n        /* \"#utility.yul\":5687:5713   */\n      swap1\n      pop\n        /* \"#utility.yul\":5759:5768   */\n      dup2\n        /* \"#utility.yul\":5753:5757   */\n      dup2\n        /* \"#utility.yul\":5749:5769   */\n      sub\n        /* \"#utility.yul\":5745:5746   */\n      0x00\n        /* \"#utility.yul\":5734:5743   */\n      dup4\n        /* \"#utility.yul\":5730:5747   */\n      add\n        /* \"#utility.yul\":5723:5770   */\n      mstore\n        /* \"#utility.yul\":5787:5918   */\n      tag_272\n        /* \"#utility.yul\":5913:5917   */\n      dup2\n        /* \"#utility.yul\":5787:5918   */\n      tag_191\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":5779:5918   */\n      swap1\n      pop\n        /* \"#utility.yul\":5506:5925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5931:6079   */\n    tag_192:\n        /* \"#utility.yul\":6033:6044   */\n      0x00\n        /* \"#utility.yul\":6070:6073   */\n      dup2\n        /* \"#utility.yul\":6055:6073   */\n      swap1\n      pop\n        /* \"#utility.yul\":5931:6079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6085:6258   */\n    tag_193:\n        /* \"#utility.yul\":6225:6250   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":6221:6222   */\n      0x00\n        /* \"#utility.yul\":6213:6219   */\n      dup3\n        /* \"#utility.yul\":6209:6223   */\n      add\n        /* \"#utility.yul\":6202:6251   */\n      mstore\n        /* \"#utility.yul\":6085:6258   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6264:6666   */\n    tag_194:\n        /* \"#utility.yul\":6424:6427   */\n      0x00\n        /* \"#utility.yul\":6445:6530   */\n      tag_276\n        /* \"#utility.yul\":6527:6529   */\n      0x17\n        /* \"#utility.yul\":6522:6525   */\n      dup4\n        /* \"#utility.yul\":6445:6530   */\n      tag_192\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":6438:6530   */\n      swap2\n      pop\n        /* \"#utility.yul\":6539:6632   */\n      tag_277\n        /* \"#utility.yul\":6628:6631   */\n      dup3\n        /* \"#utility.yul\":6539:6632   */\n      tag_193\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":6657:6659   */\n      0x17\n        /* \"#utility.yul\":6652:6655   */\n      dup3\n        /* \"#utility.yul\":6648:6660   */\n      add\n        /* \"#utility.yul\":6641:6660   */\n      swap1\n      pop\n        /* \"#utility.yul\":6264:6666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6672:6771   */\n    tag_195:\n        /* \"#utility.yul\":6724:6730   */\n      0x00\n        /* \"#utility.yul\":6758:6763   */\n      dup2\n        /* \"#utility.yul\":6752:6764   */\n      mload\n        /* \"#utility.yul\":6742:6764   */\n      swap1\n      pop\n        /* \"#utility.yul\":6672:6771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6777:6916   */\n    tag_196:\n        /* \"#utility.yul\":6866:6872   */\n      dup3\n        /* \"#utility.yul\":6861:6864   */\n      dup2\n        /* \"#utility.yul\":6856:6859   */\n      dup4\n        /* \"#utility.yul\":6850:6873   */\n      mcopy\n        /* \"#utility.yul\":6907:6908   */\n      0x00\n        /* \"#utility.yul\":6898:6904   */\n      dup4\n        /* \"#utility.yul\":6893:6896   */\n      dup4\n        /* \"#utility.yul\":6889:6905   */\n      add\n        /* \"#utility.yul\":6882:6909   */\n      mstore\n        /* \"#utility.yul\":6777:6916   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6922:7312   */\n    tag_197:\n        /* \"#utility.yul\":7028:7031   */\n      0x00\n        /* \"#utility.yul\":7056:7095   */\n      tag_281\n        /* \"#utility.yul\":7089:7094   */\n      dup3\n        /* \"#utility.yul\":7056:7095   */\n      tag_195\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":7111:7200   */\n      tag_282\n        /* \"#utility.yul\":7193:7199   */\n      dup2\n        /* \"#utility.yul\":7188:7191   */\n      dup6\n        /* \"#utility.yul\":7111:7200   */\n      tag_192\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":7104:7200   */\n      swap4\n      pop\n        /* \"#utility.yul\":7209:7274   */\n      tag_283\n        /* \"#utility.yul\":7267:7273   */\n      dup2\n        /* \"#utility.yul\":7262:7265   */\n      dup6\n        /* \"#utility.yul\":7255:7259   */\n      0x20\n        /* \"#utility.yul\":7248:7253   */\n      dup7\n        /* \"#utility.yul\":7244:7260   */\n      add\n        /* \"#utility.yul\":7209:7274   */\n      tag_196\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":7299:7305   */\n      dup1\n        /* \"#utility.yul\":7294:7297   */\n      dup5\n        /* \"#utility.yul\":7290:7306   */\n      add\n        /* \"#utility.yul\":7283:7306   */\n      swap2\n      pop\n        /* \"#utility.yul\":7032:7312   */\n      pop\n        /* \"#utility.yul\":6922:7312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7318:7485   */\n    tag_198:\n        /* \"#utility.yul\":7458:7477   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":7454:7455   */\n      0x00\n        /* \"#utility.yul\":7446:7452   */\n      dup3\n        /* \"#utility.yul\":7442:7456   */\n      add\n        /* \"#utility.yul\":7435:7478   */\n      mstore\n        /* \"#utility.yul\":7318:7485   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7491:7893   */\n    tag_199:\n        /* \"#utility.yul\":7651:7654   */\n      0x00\n        /* \"#utility.yul\":7672:7757   */\n      tag_286\n        /* \"#utility.yul\":7754:7756   */\n      0x11\n        /* \"#utility.yul\":7749:7752   */\n      dup4\n        /* \"#utility.yul\":7672:7757   */\n      tag_192\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":7665:7757   */\n      swap2\n      pop\n        /* \"#utility.yul\":7766:7859   */\n      tag_287\n        /* \"#utility.yul\":7855:7858   */\n      dup3\n        /* \"#utility.yul\":7766:7859   */\n      tag_198\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":7884:7886   */\n      0x11\n        /* \"#utility.yul\":7879:7882   */\n      dup3\n        /* \"#utility.yul\":7875:7887   */\n      add\n        /* \"#utility.yul\":7868:7887   */\n      swap1\n      pop\n        /* \"#utility.yul\":7491:7893   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7899:8866   */\n    tag_137:\n        /* \"#utility.yul\":8281:8284   */\n      0x00\n        /* \"#utility.yul\":8303:8451   */\n      tag_289\n        /* \"#utility.yul\":8447:8450   */\n      dup3\n        /* \"#utility.yul\":8303:8451   */\n      tag_194\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":8296:8451   */\n      swap2\n      pop\n        /* \"#utility.yul\":8468:8563   */\n      tag_290\n        /* \"#utility.yul\":8559:8562   */\n      dup3\n        /* \"#utility.yul\":8550:8556   */\n      dup6\n        /* \"#utility.yul\":8468:8563   */\n      tag_197\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":8461:8563   */\n      swap2\n      pop\n        /* \"#utility.yul\":8580:8728   */\n      tag_291\n        /* \"#utility.yul\":8724:8727   */\n      dup3\n        /* \"#utility.yul\":8580:8728   */\n      tag_199\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":8573:8728   */\n      swap2\n      pop\n        /* \"#utility.yul\":8745:8840   */\n      tag_292\n        /* \"#utility.yul\":8836:8839   */\n      dup3\n        /* \"#utility.yul\":8827:8833   */\n      dup5\n        /* \"#utility.yul\":8745:8840   */\n      tag_197\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":8738:8840   */\n      swap2\n      pop\n        /* \"#utility.yul\":8857:8860   */\n      dup2\n        /* \"#utility.yul\":8850:8860   */\n      swap1\n      pop\n        /* \"#utility.yul\":7899:8866   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8872:8974   */\n    tag_200:\n        /* \"#utility.yul\":8913:8919   */\n      0x00\n        /* \"#utility.yul\":8964:8966   */\n      0x1f\n        /* \"#utility.yul\":8960:8967   */\n      not\n        /* \"#utility.yul\":8955:8957   */\n      0x1f\n        /* \"#utility.yul\":8948:8953   */\n      dup4\n        /* \"#utility.yul\":8944:8958   */\n      add\n        /* \"#utility.yul\":8940:8968   */\n      and\n        /* \"#utility.yul\":8930:8968   */\n      swap1\n      pop\n        /* \"#utility.yul\":8872:8974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8980:9357   */\n    tag_201:\n        /* \"#utility.yul\":9068:9071   */\n      0x00\n        /* \"#utility.yul\":9096:9135   */\n      tag_295\n        /* \"#utility.yul\":9129:9134   */\n      dup3\n        /* \"#utility.yul\":9096:9135   */\n      tag_195\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":9151:9222   */\n      tag_296\n        /* \"#utility.yul\":9215:9221   */\n      dup2\n        /* \"#utility.yul\":9210:9213   */\n      dup6\n        /* \"#utility.yul\":9151:9222   */\n      tag_189\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":9144:9222   */\n      swap4\n      pop\n        /* \"#utility.yul\":9231:9296   */\n      tag_297\n        /* \"#utility.yul\":9289:9295   */\n      dup2\n        /* \"#utility.yul\":9284:9287   */\n      dup6\n        /* \"#utility.yul\":9277:9281   */\n      0x20\n        /* \"#utility.yul\":9270:9275   */\n      dup7\n        /* \"#utility.yul\":9266:9282   */\n      add\n        /* \"#utility.yul\":9231:9296   */\n      tag_196\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":9321:9350   */\n      tag_298\n        /* \"#utility.yul\":9343:9349   */\n      dup2\n        /* \"#utility.yul\":9321:9350   */\n      tag_200\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":9316:9319   */\n      dup5\n        /* \"#utility.yul\":9312:9351   */\n      add\n        /* \"#utility.yul\":9305:9351   */\n      swap2\n      pop\n        /* \"#utility.yul\":9072:9357   */\n      pop\n        /* \"#utility.yul\":8980:9357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9363:9676   */\n    tag_139:\n        /* \"#utility.yul\":9476:9480   */\n      0x00\n        /* \"#utility.yul\":9514:9516   */\n      0x20\n        /* \"#utility.yul\":9503:9512   */\n      dup3\n        /* \"#utility.yul\":9499:9517   */\n      add\n        /* \"#utility.yul\":9491:9517   */\n      swap1\n      pop\n        /* \"#utility.yul\":9563:9572   */\n      dup2\n        /* \"#utility.yul\":9557:9561   */\n      dup2\n        /* \"#utility.yul\":9553:9573   */\n      sub\n        /* \"#utility.yul\":9549:9550   */\n      0x00\n        /* \"#utility.yul\":9538:9547   */\n      dup4\n        /* \"#utility.yul\":9534:9551   */\n      add\n        /* \"#utility.yul\":9527:9574   */\n      mstore\n        /* \"#utility.yul\":9591:9669   */\n      tag_300\n        /* \"#utility.yul\":9664:9668   */\n      dup2\n        /* \"#utility.yul\":9655:9661   */\n      dup5\n        /* \"#utility.yul\":9591:9669   */\n      tag_201\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":9583:9669   */\n      swap1\n      pop\n        /* \"#utility.yul\":9363:9676   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9682:9862   */\n    tag_202:\n        /* \"#utility.yul\":9730:9807   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9727:9728   */\n      0x00\n        /* \"#utility.yul\":9720:9808   */\n      mstore\n        /* \"#utility.yul\":9827:9831   */\n      0x11\n        /* \"#utility.yul\":9824:9825   */\n      0x04\n        /* \"#utility.yul\":9817:9832   */\n      mstore\n        /* \"#utility.yul\":9851:9855   */\n      0x24\n        /* \"#utility.yul\":9848:9849   */\n      0x00\n        /* \"#utility.yul\":9841:9856   */\n      revert\n        /* \"#utility.yul\":9868:10278   */\n    tag_144:\n        /* \"#utility.yul\":9908:9915   */\n      0x00\n        /* \"#utility.yul\":9931:9951   */\n      tag_303\n        /* \"#utility.yul\":9949:9950   */\n      dup3\n        /* \"#utility.yul\":9931:9951   */\n      tag_186\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":9926:9951   */\n      swap2\n      pop\n        /* \"#utility.yul\":9965:9985   */\n      tag_304\n        /* \"#utility.yul\":9983:9984   */\n      dup4\n        /* \"#utility.yul\":9965:9985   */\n      tag_186\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":9960:9985   */\n      swap3\n      pop\n        /* \"#utility.yul\":10020:10021   */\n      dup3\n        /* \"#utility.yul\":10017:10018   */\n      dup3\n        /* \"#utility.yul\":10013:10022   */\n      mul\n        /* \"#utility.yul\":10042:10072   */\n      tag_305\n        /* \"#utility.yul\":10060:10071   */\n      dup2\n        /* \"#utility.yul\":10042:10072   */\n      tag_186\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":10031:10072   */\n      swap2\n      pop\n        /* \"#utility.yul\":10221:10222   */\n      dup3\n        /* \"#utility.yul\":10212:10219   */\n      dup3\n        /* \"#utility.yul\":10208:10223   */\n      div\n        /* \"#utility.yul\":10205:10206   */\n      dup5\n        /* \"#utility.yul\":10202:10224   */\n      eq\n        /* \"#utility.yul\":10182:10183   */\n      dup4\n        /* \"#utility.yul\":10175:10184   */\n      iszero\n        /* \"#utility.yul\":10155:10238   */\n      or\n        /* \"#utility.yul\":10132:10271   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":10251:10269   */\n      tag_307\n      tag_202\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":10132:10271   */\n    tag_306:\n        /* \"#utility.yul\":9916:10278   */\n      pop\n        /* \"#utility.yul\":9868:10278   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10284:10475   */\n    tag_146:\n        /* \"#utility.yul\":10324:10327   */\n      0x00\n        /* \"#utility.yul\":10343:10363   */\n      tag_309\n        /* \"#utility.yul\":10361:10362   */\n      dup3\n        /* \"#utility.yul\":10343:10363   */\n      tag_186\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":10338:10363   */\n      swap2\n      pop\n        /* \"#utility.yul\":10377:10397   */\n      tag_310\n        /* \"#utility.yul\":10395:10396   */\n      dup4\n        /* \"#utility.yul\":10377:10397   */\n      tag_186\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":10372:10397   */\n      swap3\n      pop\n        /* \"#utility.yul\":10420:10421   */\n      dup3\n        /* \"#utility.yul\":10417:10418   */\n      dup3\n        /* \"#utility.yul\":10413:10422   */\n      add\n        /* \"#utility.yul\":10406:10422   */\n      swap1\n      pop\n        /* \"#utility.yul\":10441:10444   */\n      dup1\n        /* \"#utility.yul\":10438:10439   */\n      dup3\n        /* \"#utility.yul\":10435:10445   */\n      gt\n        /* \"#utility.yul\":10432:10468   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":10448:10466   */\n      tag_312\n      tag_202\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":10432:10468   */\n    tag_311:\n        /* \"#utility.yul\":10284:10475   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10481:10661   */\n    tag_149:\n        /* \"#utility.yul\":10529:10606   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10526:10527   */\n      0x00\n        /* \"#utility.yul\":10519:10607   */\n      mstore\n        /* \"#utility.yul\":10626:10630   */\n      0x41\n        /* \"#utility.yul\":10623:10624   */\n      0x04\n        /* \"#utility.yul\":10616:10631   */\n      mstore\n        /* \"#utility.yul\":10650:10654   */\n      0x24\n        /* \"#utility.yul\":10647:10648   */\n      0x00\n        /* \"#utility.yul\":10640:10655   */\n      revert\n        /* \"#utility.yul\":10667:10847   */\n    tag_153:\n        /* \"#utility.yul\":10715:10792   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10712:10713   */\n      0x00\n        /* \"#utility.yul\":10705:10793   */\n      mstore\n        /* \"#utility.yul\":10812:10816   */\n      0x32\n        /* \"#utility.yul\":10809:10810   */\n      0x04\n        /* \"#utility.yul\":10802:10817   */\n      mstore\n        /* \"#utility.yul\":10836:10840   */\n      0x24\n        /* \"#utility.yul\":10833:10834   */\n      0x00\n        /* \"#utility.yul\":10826:10841   */\n      revert\n        /* \"#utility.yul\":10853:11024   */\n    tag_166:\n        /* \"#utility.yul\":10892:10895   */\n      0x00\n        /* \"#utility.yul\":10915:10939   */\n      tag_316\n        /* \"#utility.yul\":10933:10938   */\n      dup3\n        /* \"#utility.yul\":10915:10939   */\n      tag_186\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":10906:10939   */\n      swap2\n      pop\n        /* \"#utility.yul\":10961:10965   */\n      0x00\n        /* \"#utility.yul\":10954:10959   */\n      dup3\n        /* \"#utility.yul\":10951:10966   */\n      sub\n        /* \"#utility.yul\":10948:10989   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":10969:10987   */\n      tag_318\n      tag_202\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":10948:10989   */\n    tag_317:\n        /* \"#utility.yul\":11016:11017   */\n      0x01\n        /* \"#utility.yul\":11009:11014   */\n      dup3\n        /* \"#utility.yul\":11005:11018   */\n      sub\n        /* \"#utility.yul\":10998:11018   */\n      swap1\n      pop\n        /* \"#utility.yul\":10853:11024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11030:11212   */\n    tag_203:\n        /* \"#utility.yul\":11170:11204   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":11166:11167   */\n      0x00\n        /* \"#utility.yul\":11158:11164   */\n      dup3\n        /* \"#utility.yul\":11154:11168   */\n      add\n        /* \"#utility.yul\":11147:11205   */\n      mstore\n        /* \"#utility.yul\":11030:11212   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11218:11584   */\n    tag_204:\n        /* \"#utility.yul\":11360:11363   */\n      0x00\n        /* \"#utility.yul\":11381:11448   */\n      tag_321\n        /* \"#utility.yul\":11445:11447   */\n      0x20\n        /* \"#utility.yul\":11440:11443   */\n      dup4\n        /* \"#utility.yul\":11381:11448   */\n      tag_189\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":11374:11448   */\n      swap2\n      pop\n        /* \"#utility.yul\":11457:11550   */\n      tag_322\n        /* \"#utility.yul\":11546:11549   */\n      dup3\n        /* \"#utility.yul\":11457:11550   */\n      tag_203\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":11575:11577   */\n      0x20\n        /* \"#utility.yul\":11570:11573   */\n      dup3\n        /* \"#utility.yul\":11566:11578   */\n      add\n        /* \"#utility.yul\":11559:11578   */\n      swap1\n      pop\n        /* \"#utility.yul\":11218:11584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11590:12009   */\n    tag_169:\n        /* \"#utility.yul\":11756:11760   */\n      0x00\n        /* \"#utility.yul\":11794:11796   */\n      0x20\n        /* \"#utility.yul\":11783:11792   */\n      dup3\n        /* \"#utility.yul\":11779:11797   */\n      add\n        /* \"#utility.yul\":11771:11797   */\n      swap1\n      pop\n        /* \"#utility.yul\":11843:11852   */\n      dup2\n        /* \"#utility.yul\":11837:11841   */\n      dup2\n        /* \"#utility.yul\":11833:11853   */\n      sub\n        /* \"#utility.yul\":11829:11830   */\n      0x00\n        /* \"#utility.yul\":11818:11827   */\n      dup4\n        /* \"#utility.yul\":11814:11831   */\n      add\n        /* \"#utility.yul\":11807:11854   */\n      mstore\n        /* \"#utility.yul\":11871:12002   */\n      tag_324\n        /* \"#utility.yul\":11997:12001   */\n      dup2\n        /* \"#utility.yul\":11871:12002   */\n      tag_204\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":11863:12002   */\n      swap1\n      pop\n        /* \"#utility.yul\":11590:12009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209942a5ab56136836e7849d764e111d51cd2ba8f3d5e9b0e39338b47e9ca50a7d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_56": {
									"entryPoint": null,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_434": {
									"entryPoint": 107,
									"id": 434,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_629": {
									"entryPoint": 436,
									"id": 629,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setupRole_374": {
									"entryPoint": 87,
									"id": 374,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_230": {
									"entryPoint": 337,
									"id": 230,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506100225f801b3361005760201b60201c565b6100527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753361005760201b60201c565b6101bb565b610067828261006b60201b60201c565b5050565b61007b828261015160201b60201c565b61014d5760015f808481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506100f26101b460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b6111a4806101c85f395ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c80639a19c7b011610095578063c02725f011610064578063c02725f01461026b578063c634b78e14610287578063d547741f146102a3578063f58ee354146102bf576100f3565b80639a19c7b0146101f95780639b4c7ced14610215578063a217fddf14610231578063aac2094a1461024f576100f3565b806336568abe116100d157806336568abe1461017357806366c77df71461018f57806375b238fc146101ab57806391d14854146101c9576100f3565b806301ffc9a7146100f7578063248a9ca3146101275780632f2ff15d14610157575b5f80fd5b610111600480360381019061010c9190610ba7565b6102db565b60405161011e9190610bec565b60405180910390f35b610141600480360381019061013c9190610c38565b610354565b60405161014e9190610c72565b60405180910390f35b610171600480360381019061016c9190610ce5565b610370565b005b61018d60048036038101906101889190610ce5565b610391565b005b6101a960048036038101906101a49190610d56565b610414565b005b6101b3610446565b6040516101c09190610c72565b60405180910390f35b6101e360048036038101906101de9190610ce5565b61046a565b6040516101f09190610bec565b60405180910390f35b610213600480360381019061020e9190610d94565b6104cd565b005b61022f600480360381019061022a9190610d56565b610507565b005b610239610539565b6040516102469190610c72565b60405180910390f35b61026960048036038101906102649190610d56565b61053f565b005b61028560048036038101906102809190610d56565b610571565b005b6102a1600480360381019061029c9190610d94565b6105a3565b005b6102bd60048036038101906102b89190610ce5565b6105dd565b005b6102d960048036038101906102d49190610d56565b6105fe565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061034d575061034c82610630565b5b9050919050565b5f805f8381526020019081526020015f20600101549050919050565b61037982610354565b61038281610699565b61038c83836106ad565b505050565b610399610787565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610406576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fd90610e3f565b60405180910390fd5b610410828261078e565b5050565b80827ff5704ea1fb9a06b3c4911041793afd3003eac5b15756eef2987e75303f9f34c660405160405180910390a35050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b6104d981610699565b6105037fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775836105dd565b5050565b80827f96af4cfe56c938154cf8986288dfea262d8b1caa075204f4679ae517bcea70b960405160405180910390a35050565b5f801b81565b80827f4c4660db760944215f41e957066d756ad5fd0eed1b4640632322eb06f77b034d60405160405180910390a35050565b80827fcccca5c37cd734d94742d46e24d5fcdc3e6ef8dd90dda510dae0e35530add4a260405160405180910390a35050565b5f801b6105af81610699565b6105d97fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177583610370565b5050565b6105e682610354565b6105ef81610699565b6105f9838361078e565b505050565b80827f51dbb46f6f6d290ac0b2b3fb0b015e2065756f1b9ec382651fe728757bf362fe60405160405180910390a35050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6106aa816106a5610787565b610868565b50565b6106b7828261046a565b6107835760015f808481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610728610787565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b5f33905090565b610798828261046a565b15610864575f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610809610787565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b610872828261046a565b6108e85761087f816108ec565b61088c835f1c6020610919565b60405160200161089d929190610f43565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df9190610fc4565b60405180910390fd5b5050565b60606109128273ffffffffffffffffffffffffffffffffffffffff16601460ff16610919565b9050919050565b60605f600283600261092b9190611011565b6109359190611052565b67ffffffffffffffff81111561094e5761094d611085565b5b6040519080825280601f01601f1916602001820160405280156109805781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000815f815181106109b7576109b66110b2565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610a1a57610a196110b2565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505f6001846002610a589190611011565b610a629190611052565b90505b6001811115610b01577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610aa457610aa36110b2565b5b1a60f81b828281518110610abb57610aba6110b2565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600485901c945080610afa906110df565b9050610a65565b505f8414610b44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3b90611150565b60405180910390fd5b8091505092915050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610b8681610b52565b8114610b90575f80fd5b50565b5f81359050610ba181610b7d565b92915050565b5f60208284031215610bbc57610bbb610b4e565b5b5f610bc984828501610b93565b91505092915050565b5f8115159050919050565b610be681610bd2565b82525050565b5f602082019050610bff5f830184610bdd565b92915050565b5f819050919050565b610c1781610c05565b8114610c21575f80fd5b50565b5f81359050610c3281610c0e565b92915050565b5f60208284031215610c4d57610c4c610b4e565b5b5f610c5a84828501610c24565b91505092915050565b610c6c81610c05565b82525050565b5f602082019050610c855f830184610c63565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610cb482610c8b565b9050919050565b610cc481610caa565b8114610cce575f80fd5b50565b5f81359050610cdf81610cbb565b92915050565b5f8060408385031215610cfb57610cfa610b4e565b5b5f610d0885828601610c24565b9250506020610d1985828601610cd1565b9150509250929050565b5f819050919050565b610d3581610d23565b8114610d3f575f80fd5b50565b5f81359050610d5081610d2c565b92915050565b5f8060408385031215610d6c57610d6b610b4e565b5b5f610d7985828601610d42565b9250506020610d8a85828601610d42565b9150509250929050565b5f60208284031215610da957610da8610b4e565b5b5f610db684828501610cd1565b91505092915050565b5f82825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e63655f8201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b5f610e29602f83610dbf565b9150610e3482610dcf565b604082019050919050565b5f6020820190508181035f830152610e5681610e1d565b9050919050565b5f81905092915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000005f82015250565b5f610e9b601783610e5d565b9150610ea682610e67565b601782019050919050565b5f81519050919050565b8281835e5f83830152505050565b5f610ed382610eb1565b610edd8185610e5d565b9350610eed818560208601610ebb565b80840191505092915050565b7f206973206d697373696e6720726f6c65200000000000000000000000000000005f82015250565b5f610f2d601183610e5d565b9150610f3882610ef9565b601182019050919050565b5f610f4d82610e8f565b9150610f598285610ec9565b9150610f6482610f21565b9150610f708284610ec9565b91508190509392505050565b5f601f19601f8301169050919050565b5f610f9682610eb1565b610fa08185610dbf565b9350610fb0818560208601610ebb565b610fb981610f7c565b840191505092915050565b5f6020820190508181035f830152610fdc8184610f8c565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61101b82610d23565b915061102683610d23565b925082820261103481610d23565b9150828204841483151761104b5761104a610fe4565b5b5092915050565b5f61105c82610d23565b915061106783610d23565b925082820190508082111561107f5761107e610fe4565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6110e982610d23565b91505f82036110fb576110fa610fe4565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e745f82015250565b5f61113a602083610dbf565b915061114582611106565b602082019050919050565b5f6020820190508181035f8301526111678161112e565b905091905056fea26469706673582212209942a5ab56136836e7849d764e111d51cd2ba8f3d5e9b0e39338b47e9ca50a7d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22 PUSH0 DUP1 SHL CALLER PUSH2 0x57 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x52 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x57 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x67 DUP3 DUP3 PUSH2 0x6B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7B DUP3 DUP3 PUSH2 0x151 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x14D JUMPI PUSH1 0x1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF2 PUSH2 0x1B4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11A4 DUP1 PUSH2 0x1C8 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A19C7B0 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC02725F0 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC02725F0 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xC634B78E EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xF58EE354 EQ PUSH2 0x2BF JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x9A19C7B0 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x9B4C7CED EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xAAC2094A EQ PUSH2 0x24F JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x66C77DF7 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1C9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x157 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B3 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x4CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH2 0x539 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x5A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x34D JUMPI POP PUSH2 0x34C DUP3 PUSH2 0x630 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x379 DUP3 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x382 DUP2 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x38C DUP4 DUP4 PUSH2 0x6AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x399 PUSH2 0x787 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x406 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FD SWAP1 PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x410 DUP3 DUP3 PUSH2 0x78E JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 DUP3 PUSH32 0xF5704EA1FB9A06B3C4911041793AFD3003EAC5B15756EEF2987E75303F9F34C6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x4D9 DUP2 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x503 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP4 PUSH2 0x5DD JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 DUP3 PUSH32 0x96AF4CFE56C938154CF8986288DFEA262D8B1CAA075204F4679AE517BCEA70B9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST DUP1 DUP3 PUSH32 0x4C4660DB760944215F41E957066D756AD5FD0EED1B4640632322EB06F77B034D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 DUP3 PUSH32 0xCCCCA5C37CD734D94742D46E24D5FCDC3E6EF8DD90DDA510DAE0E35530ADD4A2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x5AF DUP2 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x5D9 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP4 PUSH2 0x370 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5E6 DUP3 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x5EF DUP2 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x5F9 DUP4 DUP4 PUSH2 0x78E JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 DUP3 PUSH32 0x51DBB46F6F6D290AC0B2B3FB0B015E2065756F1B9EC382651FE728757BF362FE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AA DUP2 PUSH2 0x6A5 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x868 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6B7 DUP3 DUP3 PUSH2 0x46A JUMP JUMPDEST PUSH2 0x783 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x728 PUSH2 0x787 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x798 DUP3 DUP3 PUSH2 0x46A JUMP JUMPDEST ISZERO PUSH2 0x864 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x809 PUSH2 0x787 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x872 DUP3 DUP3 PUSH2 0x46A JUMP JUMPDEST PUSH2 0x8E8 JUMPI PUSH2 0x87F DUP2 PUSH2 0x8EC JUMP JUMPDEST PUSH2 0x88C DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x89D SWAP3 SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DF SWAP2 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x912 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x919 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x92B SWAP2 SWAP1 PUSH2 0x1011 JUMP JUMPDEST PUSH2 0x935 SWAP2 SWAP1 PUSH2 0x1052 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x94E JUMPI PUSH2 0x94D PUSH2 0x1085 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x980 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x9B7 JUMPI PUSH2 0x9B6 PUSH2 0x10B2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA1A JUMPI PUSH2 0xA19 PUSH2 0x10B2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0x1011 JUMP JUMPDEST PUSH2 0xA62 SWAP2 SWAP1 PUSH2 0x1052 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB01 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xAA4 JUMPI PUSH2 0xAA3 PUSH2 0x10B2 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xABB JUMPI PUSH2 0xABA PUSH2 0x10B2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xAFA SWAP1 PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP PUSH2 0xA65 JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0xB44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3B SWAP1 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB86 DUP2 PUSH2 0xB52 JUMP JUMPDEST DUP2 EQ PUSH2 0xB90 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA1 DUP2 PUSH2 0xB7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBC JUMPI PUSH2 0xBBB PUSH2 0xB4E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBC9 DUP5 DUP3 DUP6 ADD PUSH2 0xB93 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE6 DUP2 PUSH2 0xBD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFF PUSH0 DUP4 ADD DUP5 PUSH2 0xBDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC17 DUP2 PUSH2 0xC05 JUMP JUMPDEST DUP2 EQ PUSH2 0xC21 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC32 DUP2 PUSH2 0xC0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0xB4E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC5A DUP5 DUP3 DUP6 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC6C DUP2 PUSH2 0xC05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC85 PUSH0 DUP4 ADD DUP5 PUSH2 0xC63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCB4 DUP3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC4 DUP2 PUSH2 0xCAA JUMP JUMPDEST DUP2 EQ PUSH2 0xCCE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCDF DUP2 PUSH2 0xCBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH2 0xCFA PUSH2 0xB4E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD08 DUP6 DUP3 DUP7 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD19 DUP6 DUP3 DUP7 ADD PUSH2 0xCD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD35 DUP2 PUSH2 0xD23 JUMP JUMPDEST DUP2 EQ PUSH2 0xD3F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD50 DUP2 PUSH2 0xD2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD6C JUMPI PUSH2 0xD6B PUSH2 0xB4E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD79 DUP6 DUP3 DUP7 ADD PUSH2 0xD42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD8A DUP6 DUP3 DUP7 ADD PUSH2 0xD42 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDA9 JUMPI PUSH2 0xDA8 PUSH2 0xB4E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDB6 DUP5 DUP3 DUP6 ADD PUSH2 0xCD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE29 PUSH1 0x2F DUP4 PUSH2 0xDBF JUMP JUMPDEST SWAP2 POP PUSH2 0xE34 DUP3 PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE56 DUP2 PUSH2 0xE1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE9B PUSH1 0x17 DUP4 PUSH2 0xE5D JUMP JUMPDEST SWAP2 POP PUSH2 0xEA6 DUP3 PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xED3 DUP3 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0xEDD DUP2 DUP6 PUSH2 0xE5D JUMP JUMPDEST SWAP4 POP PUSH2 0xEED DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEBB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF2D PUSH1 0x11 DUP4 PUSH2 0xE5D JUMP JUMPDEST SWAP2 POP PUSH2 0xF38 DUP3 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF4D DUP3 PUSH2 0xE8F JUMP JUMPDEST SWAP2 POP PUSH2 0xF59 DUP3 DUP6 PUSH2 0xEC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF64 DUP3 PUSH2 0xF21 JUMP JUMPDEST SWAP2 POP PUSH2 0xF70 DUP3 DUP5 PUSH2 0xEC9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF96 DUP3 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0xFA0 DUP2 DUP6 PUSH2 0xDBF JUMP JUMPDEST SWAP4 POP PUSH2 0xFB0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEBB JUMP JUMPDEST PUSH2 0xFB9 DUP2 PUSH2 0xF7C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFDC DUP2 DUP5 PUSH2 0xF8C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x101B DUP3 PUSH2 0xD23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1026 DUP4 PUSH2 0xD23 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1034 DUP2 PUSH2 0xD23 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x104B JUMPI PUSH2 0x104A PUSH2 0xFE4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x105C DUP3 PUSH2 0xD23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1067 DUP4 PUSH2 0xD23 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x107F JUMPI PUSH2 0x107E PUSH2 0xFE4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x10E9 DUP3 PUSH2 0xD23 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x10FB JUMPI PUSH2 0x10FA PUSH2 0xFE4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x113A PUSH1 0x20 DUP4 PUSH2 0xDBF JUMP JUMPDEST SWAP2 POP PUSH2 0x1145 DUP3 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1167 DUP2 PUSH2 0x112E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 TIMESTAMP 0xA5 0xAB JUMP SGT PUSH9 0x36E7849D764E111D51 0xCD 0x2B 0xA8 RETURN 0xD5 0xE9 0xB0 0xE3 SWAP4 CODESIZE 0xB4 PUSH31 0x9CA50A7D64736F6C634300081A003300000000000000000000000000000000 ",
							"sourceMap": "281:1480:0:-:0;;;765:117;;;;;;;;;;789:42;2072:4:1;800:18:0;;820:10;789;;;:42;;:::i;:::-;841:34;364:23;864:10;841;;;:34;;:::i;:::-;281:1480;;6811:110:1;6889:25;6900:4;6906:7;6889:10;;;:25;;:::i;:::-;6811:110;;:::o;7461:233::-;7544:22;7552:4;7558:7;7544;;;:22;;:::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;;;:12;;:::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;2895:145::-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;281:1480:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_10": {
									"entryPoint": 1094,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_178": {
									"entryPoint": 1337,
									"id": 178,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_243": {
									"entryPoint": 1689,
									"id": 243,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_282": {
									"entryPoint": 2152,
									"id": 282,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_434": {
									"entryPoint": 1709,
									"id": 434,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_629": {
									"entryPoint": 1927,
									"id": 629,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_465": {
									"entryPoint": 1934,
									"id": 465,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@gameEnd_110": {
									"entryPoint": 1343,
									"id": 110,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@gameLike_149": {
									"entryPoint": 1534,
									"id": 149,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@gamePause_123": {
									"entryPoint": 1044,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@gamePlay_97": {
									"entryPoint": 1393,
									"id": 97,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@gameUnPause_136": {
									"entryPoint": 1287,
									"id": 136,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getRoleAdmin_297": {
									"entryPoint": 852,
									"id": 297,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantAdminRole_70": {
									"entryPoint": 1443,
									"id": 70,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@grantRole_317": {
									"entryPoint": 880,
									"id": 317,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_230": {
									"entryPoint": 1130,
									"id": 230,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_360": {
									"entryPoint": 913,
									"id": 360,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeAdminRole_84": {
									"entryPoint": 1229,
									"id": 84,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@revokeRole_337": {
									"entryPoint": 1501,
									"id": 337,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_211": {
									"entryPoint": 731,
									"id": 211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_837": {
									"entryPoint": 1584,
									"id": 837,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_793": {
									"entryPoint": 2329,
									"id": 793,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_813": {
									"entryPoint": 2284,
									"id": 813,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 3108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 2963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 3171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3907,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 3186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3771,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 4319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4068,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4229,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2894,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 4358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 3687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 3833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 3535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 3086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 2941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12012:9",
										"nodeType": "YulBlock",
										"src": "0:12012:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "378:105:9",
													"nodeType": "YulBlock",
													"src": "378:105:9",
													"statements": [
														{
															"nativeSrc": "388:89:9",
															"nodeType": "YulAssignment",
															"src": "388:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:9",
																		"nodeType": "YulLiteral",
																		"src": "410:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:9"
																},
																"nativeSrc": "399:78:9",
																"nodeType": "YulFunctionCall",
																"src": "399:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:9",
														"nodeType": "YulTypedName",
														"src": "360:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:9",
														"nodeType": "YulTypedName",
														"src": "370:7:9",
														"type": ""
													}
												],
												"src": "334:149:9"
											},
											{
												"body": {
													"nativeSrc": "531:78:9",
													"nodeType": "YulBlock",
													"src": "531:78:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:9",
																"nodeType": "YulBlock",
																"src": "587:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:9",
																					"nodeType": "YulLiteral",
																					"src": "596:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:9",
																					"nodeType": "YulLiteral",
																					"src": "599:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:9"
																			},
																			"nativeSrc": "589:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:9"
																		},
																		"nativeSrc": "589:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:9",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:9"
																				},
																				"nativeSrc": "561:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:9"
																		},
																		"nativeSrc": "551:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:9"
																},
																"nativeSrc": "544:42:9",
																"nodeType": "YulFunctionCall",
																"src": "544:42:9"
															},
															"nativeSrc": "541:62:9",
															"nodeType": "YulIf",
															"src": "541:62:9"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:9",
														"nodeType": "YulTypedName",
														"src": "524:5:9",
														"type": ""
													}
												],
												"src": "489:120:9"
											},
											{
												"body": {
													"nativeSrc": "666:86:9",
													"nodeType": "YulBlock",
													"src": "666:86:9",
													"statements": [
														{
															"nativeSrc": "676:29:9",
															"nodeType": "YulAssignment",
															"src": "676:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:9"
																},
																"nativeSrc": "685:20:9",
																"nodeType": "YulFunctionCall",
																"src": "685:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:9"
																},
																"nativeSrc": "714:32:9",
																"nodeType": "YulFunctionCall",
																"src": "714:32:9"
															},
															"nativeSrc": "714:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:9",
														"nodeType": "YulTypedName",
														"src": "644:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:9",
														"nodeType": "YulTypedName",
														"src": "652:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:9",
														"nodeType": "YulTypedName",
														"src": "660:5:9",
														"type": ""
													}
												],
												"src": "615:137:9"
											},
											{
												"body": {
													"nativeSrc": "823:262:9",
													"nodeType": "YulBlock",
													"src": "823:262:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:9",
																"nodeType": "YulBlock",
																"src": "869:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:9"
																			},
																			"nativeSrc": "871:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:9"
																		},
																		"nativeSrc": "871:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:9"
																		},
																		"nativeSrc": "840:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:9",
																		"nodeType": "YulLiteral",
																		"src": "865:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:9"
																},
																"nativeSrc": "836:32:9",
																"nodeType": "YulFunctionCall",
																"src": "836:32:9"
															},
															"nativeSrc": "833:119:9",
															"nodeType": "YulIf",
															"src": "833:119:9"
														},
														{
															"nativeSrc": "962:116:9",
															"nodeType": "YulBlock",
															"src": "962:116:9",
															"statements": [
																{
																	"nativeSrc": "977:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:9",
																		"nodeType": "YulLiteral",
																		"src": "991:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:9",
																			"nodeType": "YulTypedName",
																			"src": "981:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:9",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:9"
																				},
																				"nativeSrc": "1036:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:9",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:9"
																		},
																		"nativeSrc": "1016:52:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:9",
														"nodeType": "YulTypedName",
														"src": "793:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:9",
														"nodeType": "YulTypedName",
														"src": "804:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:9",
														"nodeType": "YulTypedName",
														"src": "816:6:9",
														"type": ""
													}
												],
												"src": "758:327:9"
											},
											{
												"body": {
													"nativeSrc": "1133:48:9",
													"nodeType": "YulBlock",
													"src": "1133:48:9",
													"statements": [
														{
															"nativeSrc": "1143:32:9",
															"nodeType": "YulAssignment",
															"src": "1143:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:9"
																		},
																		"nativeSrc": "1161:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:9"
																},
																"nativeSrc": "1154:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:9",
														"nodeType": "YulTypedName",
														"src": "1115:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:9",
														"nodeType": "YulTypedName",
														"src": "1125:7:9",
														"type": ""
													}
												],
												"src": "1091:90:9"
											},
											{
												"body": {
													"nativeSrc": "1246:50:9",
													"nodeType": "YulBlock",
													"src": "1246:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:9"
																		},
																		"nativeSrc": "1268:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:9"
																},
																"nativeSrc": "1256:34:9",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:9"
															},
															"nativeSrc": "1256:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:9",
														"nodeType": "YulTypedName",
														"src": "1234:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:9",
														"nodeType": "YulTypedName",
														"src": "1241:3:9",
														"type": ""
													}
												],
												"src": "1187:109:9"
											},
											{
												"body": {
													"nativeSrc": "1394:118:9",
													"nodeType": "YulBlock",
													"src": "1394:118:9",
													"statements": [
														{
															"nativeSrc": "1404:26:9",
															"nodeType": "YulAssignment",
															"src": "1404:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:9"
																},
																"nativeSrc": "1412:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:9"
																		},
																		"nativeSrc": "1487:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:9"
																},
																"nativeSrc": "1440:65:9",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:9"
															},
															"nativeSrc": "1440:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:9",
														"nodeType": "YulTypedName",
														"src": "1366:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:9",
														"nodeType": "YulTypedName",
														"src": "1378:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:9",
														"nodeType": "YulTypedName",
														"src": "1389:4:9",
														"type": ""
													}
												],
												"src": "1302:210:9"
											},
											{
												"body": {
													"nativeSrc": "1563:32:9",
													"nodeType": "YulBlock",
													"src": "1563:32:9",
													"statements": [
														{
															"nativeSrc": "1573:16:9",
															"nodeType": "YulAssignment",
															"src": "1573:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:9",
																"nodeType": "YulIdentifier",
																"src": "1584:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:9",
														"nodeType": "YulTypedName",
														"src": "1545:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:9",
														"nodeType": "YulTypedName",
														"src": "1555:7:9",
														"type": ""
													}
												],
												"src": "1518:77:9"
											},
											{
												"body": {
													"nativeSrc": "1644:79:9",
													"nodeType": "YulBlock",
													"src": "1644:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:9",
																"nodeType": "YulBlock",
																"src": "1701:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:9"
																			},
																			"nativeSrc": "1703:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:9"
																		},
																		"nativeSrc": "1703:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1674:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:9"
																				},
																				"nativeSrc": "1674:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:9"
																		},
																		"nativeSrc": "1664:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:9"
																},
																"nativeSrc": "1657:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:9"
															},
															"nativeSrc": "1654:63:9",
															"nodeType": "YulIf",
															"src": "1654:63:9"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1601:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:9",
														"nodeType": "YulTypedName",
														"src": "1637:5:9",
														"type": ""
													}
												],
												"src": "1601:122:9"
											},
											{
												"body": {
													"nativeSrc": "1781:87:9",
													"nodeType": "YulBlock",
													"src": "1781:87:9",
													"statements": [
														{
															"nativeSrc": "1791:29:9",
															"nodeType": "YulAssignment",
															"src": "1791:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:9"
																},
																"nativeSrc": "1800:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1829:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:9"
																},
																"nativeSrc": "1829:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:9"
															},
															"nativeSrc": "1829:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:9"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1729:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:9",
														"nodeType": "YulTypedName",
														"src": "1759:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:9",
														"nodeType": "YulTypedName",
														"src": "1767:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:9",
														"nodeType": "YulTypedName",
														"src": "1775:5:9",
														"type": ""
													}
												],
												"src": "1729:139:9"
											},
											{
												"body": {
													"nativeSrc": "1940:263:9",
													"nodeType": "YulBlock",
													"src": "1940:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1986:83:9",
																"nodeType": "YulBlock",
																"src": "1986:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1988:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:9"
																			},
																			"nativeSrc": "1988:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:9"
																		},
																		"nativeSrc": "1988:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1961:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1970:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1957:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:9"
																		},
																		"nativeSrc": "1957:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1953:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:9"
																},
																"nativeSrc": "1953:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1953:32:9"
															},
															"nativeSrc": "1950:119:9",
															"nodeType": "YulIf",
															"src": "1950:119:9"
														},
														{
															"nativeSrc": "2079:117:9",
															"nodeType": "YulBlock",
															"src": "2079:117:9",
															"statements": [
																{
																	"nativeSrc": "2094:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:9"
																				},
																				"nativeSrc": "2154:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2133:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:9"
																		},
																		"nativeSrc": "2133:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2123:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1874:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1910:9:9",
														"nodeType": "YulTypedName",
														"src": "1910:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1921:7:9",
														"nodeType": "YulTypedName",
														"src": "1921:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1933:6:9",
														"nodeType": "YulTypedName",
														"src": "1933:6:9",
														"type": ""
													}
												],
												"src": "1874:329:9"
											},
											{
												"body": {
													"nativeSrc": "2274:53:9",
													"nodeType": "YulBlock",
													"src": "2274:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2291:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2314:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2314:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2296:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "2296:17:9"
																		},
																		"nativeSrc": "2296:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2296:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2284:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:9"
																},
																"nativeSrc": "2284:37:9",
																"nodeType": "YulFunctionCall",
																"src": "2284:37:9"
															},
															"nativeSrc": "2284:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "2284:37:9"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2209:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2262:5:9",
														"nodeType": "YulTypedName",
														"src": "2262:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2269:3:9",
														"nodeType": "YulTypedName",
														"src": "2269:3:9",
														"type": ""
													}
												],
												"src": "2209:118:9"
											},
											{
												"body": {
													"nativeSrc": "2431:124:9",
													"nodeType": "YulBlock",
													"src": "2431:124:9",
													"statements": [
														{
															"nativeSrc": "2441:26:9",
															"nodeType": "YulAssignment",
															"src": "2441:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2453:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2453:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2464:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2449:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:9"
																},
																"nativeSrc": "2449:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2449:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2441:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2521:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2534:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2545:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2530:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:9"
																		},
																		"nativeSrc": "2530:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "2477:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2477:43:9"
																},
																"nativeSrc": "2477:71:9",
																"nodeType": "YulFunctionCall",
																"src": "2477:71:9"
															},
															"nativeSrc": "2477:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "2477:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2333:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2403:9:9",
														"nodeType": "YulTypedName",
														"src": "2403:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2415:6:9",
														"nodeType": "YulTypedName",
														"src": "2415:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2426:4:9",
														"nodeType": "YulTypedName",
														"src": "2426:4:9",
														"type": ""
													}
												],
												"src": "2333:222:9"
											},
											{
												"body": {
													"nativeSrc": "2606:81:9",
													"nodeType": "YulBlock",
													"src": "2606:81:9",
													"statements": [
														{
															"nativeSrc": "2616:65:9",
															"nodeType": "YulAssignment",
															"src": "2616:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2631:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2631:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2638:42:9",
																		"nodeType": "YulLiteral",
																		"src": "2638:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2627:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2627:3:9"
																},
																"nativeSrc": "2627:54:9",
																"nodeType": "YulFunctionCall",
																"src": "2627:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2616:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2561:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2588:5:9",
														"nodeType": "YulTypedName",
														"src": "2588:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2598:7:9",
														"nodeType": "YulTypedName",
														"src": "2598:7:9",
														"type": ""
													}
												],
												"src": "2561:126:9"
											},
											{
												"body": {
													"nativeSrc": "2738:51:9",
													"nodeType": "YulBlock",
													"src": "2738:51:9",
													"statements": [
														{
															"nativeSrc": "2748:35:9",
															"nodeType": "YulAssignment",
															"src": "2748:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2777:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2777:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2759:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2759:17:9"
																},
																"nativeSrc": "2759:24:9",
																"nodeType": "YulFunctionCall",
																"src": "2759:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2748:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2748:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2693:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2720:5:9",
														"nodeType": "YulTypedName",
														"src": "2720:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2730:7:9",
														"nodeType": "YulTypedName",
														"src": "2730:7:9",
														"type": ""
													}
												],
												"src": "2693:96:9"
											},
											{
												"body": {
													"nativeSrc": "2838:79:9",
													"nodeType": "YulBlock",
													"src": "2838:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2895:16:9",
																"nodeType": "YulBlock",
																"src": "2895:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2904:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2907:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2907:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2897:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2897:6:9"
																			},
																			"nativeSrc": "2897:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2897:12:9"
																		},
																		"nativeSrc": "2897:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2861:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2861:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2886:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2886:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2868:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2868:17:9"
																				},
																				"nativeSrc": "2868:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2868:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2858:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2858:2:9"
																		},
																		"nativeSrc": "2858:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2858:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2851:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:9"
																},
																"nativeSrc": "2851:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2851:43:9"
															},
															"nativeSrc": "2848:63:9",
															"nodeType": "YulIf",
															"src": "2848:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2795:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2831:5:9",
														"nodeType": "YulTypedName",
														"src": "2831:5:9",
														"type": ""
													}
												],
												"src": "2795:122:9"
											},
											{
												"body": {
													"nativeSrc": "2975:87:9",
													"nodeType": "YulBlock",
													"src": "2975:87:9",
													"statements": [
														{
															"nativeSrc": "2985:29:9",
															"nodeType": "YulAssignment",
															"src": "2985:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3007:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2994:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2994:12:9"
																},
																"nativeSrc": "2994:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2994:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2985:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2985:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3050:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3050:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3023:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3023:26:9"
																},
																"nativeSrc": "3023:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3023:33:9"
															},
															"nativeSrc": "3023:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3023:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2923:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2953:6:9",
														"nodeType": "YulTypedName",
														"src": "2953:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2961:3:9",
														"nodeType": "YulTypedName",
														"src": "2961:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2969:5:9",
														"nodeType": "YulTypedName",
														"src": "2969:5:9",
														"type": ""
													}
												],
												"src": "2923:139:9"
											},
											{
												"body": {
													"nativeSrc": "3151:391:9",
													"nodeType": "YulBlock",
													"src": "3151:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3197:83:9",
																"nodeType": "YulBlock",
																"src": "3197:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3199:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3199:77:9"
																			},
																			"nativeSrc": "3199:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3199:79:9"
																		},
																		"nativeSrc": "3199:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3172:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3172:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3181:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3181:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3168:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3168:3:9"
																		},
																		"nativeSrc": "3168:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3168:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3193:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3193:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3164:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3164:3:9"
																},
																"nativeSrc": "3164:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3164:32:9"
															},
															"nativeSrc": "3161:119:9",
															"nodeType": "YulIf",
															"src": "3161:119:9"
														},
														{
															"nativeSrc": "3290:117:9",
															"nodeType": "YulBlock",
															"src": "3290:117:9",
															"statements": [
																{
																	"nativeSrc": "3305:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3305:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3319:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3309:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3309:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3334:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3334:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3369:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3369:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3380:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3380:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3365:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3365:3:9"
																				},
																				"nativeSrc": "3365:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3365:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3389:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3389:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3344:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3344:20:9"
																		},
																		"nativeSrc": "3344:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3344:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3334:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3417:118:9",
															"nodeType": "YulBlock",
															"src": "3417:118:9",
															"statements": [
																{
																	"nativeSrc": "3432:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3432:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3446:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3446:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3436:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3436:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:9"
																				},
																				"nativeSrc": "3493:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3472:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:9"
																		},
																		"nativeSrc": "3472:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3462:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3068:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3113:9:9",
														"nodeType": "YulTypedName",
														"src": "3113:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3124:7:9",
														"nodeType": "YulTypedName",
														"src": "3124:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3136:6:9",
														"nodeType": "YulTypedName",
														"src": "3136:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3144:6:9",
														"nodeType": "YulTypedName",
														"src": "3144:6:9",
														"type": ""
													}
												],
												"src": "3068:474:9"
											},
											{
												"body": {
													"nativeSrc": "3593:32:9",
													"nodeType": "YulBlock",
													"src": "3593:32:9",
													"statements": [
														{
															"nativeSrc": "3603:16:9",
															"nodeType": "YulAssignment",
															"src": "3603:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "3614:5:9",
																"nodeType": "YulIdentifier",
																"src": "3614:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3603:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3603:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3548:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3575:5:9",
														"nodeType": "YulTypedName",
														"src": "3575:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3585:7:9",
														"nodeType": "YulTypedName",
														"src": "3585:7:9",
														"type": ""
													}
												],
												"src": "3548:77:9"
											},
											{
												"body": {
													"nativeSrc": "3674:79:9",
													"nodeType": "YulBlock",
													"src": "3674:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3731:16:9",
																"nodeType": "YulBlock",
																"src": "3731:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3740:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3740:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3743:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3743:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3733:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3733:6:9"
																			},
																			"nativeSrc": "3733:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3733:12:9"
																		},
																		"nativeSrc": "3733:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3733:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3697:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3697:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3722:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3722:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3704:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3704:17:9"
																				},
																				"nativeSrc": "3704:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3704:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3694:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3694:2:9"
																		},
																		"nativeSrc": "3694:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3694:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3687:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3687:6:9"
																},
																"nativeSrc": "3687:43:9",
																"nodeType": "YulFunctionCall",
																"src": "3687:43:9"
															},
															"nativeSrc": "3684:63:9",
															"nodeType": "YulIf",
															"src": "3684:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3631:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3667:5:9",
														"nodeType": "YulTypedName",
														"src": "3667:5:9",
														"type": ""
													}
												],
												"src": "3631:122:9"
											},
											{
												"body": {
													"nativeSrc": "3811:87:9",
													"nodeType": "YulBlock",
													"src": "3811:87:9",
													"statements": [
														{
															"nativeSrc": "3821:29:9",
															"nodeType": "YulAssignment",
															"src": "3821:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3843:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3843:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3830:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3830:12:9"
																},
																"nativeSrc": "3830:20:9",
																"nodeType": "YulFunctionCall",
																"src": "3830:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3821:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3821:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3886:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3886:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3859:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3859:26:9"
																},
																"nativeSrc": "3859:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3859:33:9"
															},
															"nativeSrc": "3859:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3859:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3759:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3789:6:9",
														"nodeType": "YulTypedName",
														"src": "3789:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3797:3:9",
														"nodeType": "YulTypedName",
														"src": "3797:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3805:5:9",
														"nodeType": "YulTypedName",
														"src": "3805:5:9",
														"type": ""
													}
												],
												"src": "3759:139:9"
											},
											{
												"body": {
													"nativeSrc": "3987:391:9",
													"nodeType": "YulBlock",
													"src": "3987:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4033:83:9",
																"nodeType": "YulBlock",
																"src": "4033:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4035:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4035:77:9"
																			},
																			"nativeSrc": "4035:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4035:79:9"
																		},
																		"nativeSrc": "4035:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4035:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4008:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4008:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4017:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4017:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4004:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4004:3:9"
																		},
																		"nativeSrc": "4004:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4004:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4029:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4029:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4000:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4000:3:9"
																},
																"nativeSrc": "4000:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4000:32:9"
															},
															"nativeSrc": "3997:119:9",
															"nodeType": "YulIf",
															"src": "3997:119:9"
														},
														{
															"nativeSrc": "4126:117:9",
															"nodeType": "YulBlock",
															"src": "4126:117:9",
															"statements": [
																{
																	"nativeSrc": "4141:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4141:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4155:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4155:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4145:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4145:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4170:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4170:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4205:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4205:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4216:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4216:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4201:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4201:3:9"
																				},
																				"nativeSrc": "4201:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4201:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4225:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4225:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4180:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4180:20:9"
																		},
																		"nativeSrc": "4180:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4180:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4170:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4170:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4253:118:9",
															"nodeType": "YulBlock",
															"src": "4253:118:9",
															"statements": [
																{
																	"nativeSrc": "4268:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4268:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4282:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4282:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4272:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4272:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4298:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4298:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4333:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4333:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4344:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4344:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4329:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4329:3:9"
																				},
																				"nativeSrc": "4329:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4329:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4353:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4353:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4308:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4308:20:9"
																		},
																		"nativeSrc": "4308:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4308:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4298:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4298:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "3904:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3949:9:9",
														"nodeType": "YulTypedName",
														"src": "3949:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3960:7:9",
														"nodeType": "YulTypedName",
														"src": "3960:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3972:6:9",
														"nodeType": "YulTypedName",
														"src": "3972:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3980:6:9",
														"nodeType": "YulTypedName",
														"src": "3980:6:9",
														"type": ""
													}
												],
												"src": "3904:474:9"
											},
											{
												"body": {
													"nativeSrc": "4450:263:9",
													"nodeType": "YulBlock",
													"src": "4450:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4496:83:9",
																"nodeType": "YulBlock",
																"src": "4496:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4498:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4498:77:9"
																			},
																			"nativeSrc": "4498:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4498:79:9"
																		},
																		"nativeSrc": "4498:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4498:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4471:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4471:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4480:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4480:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4467:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4467:3:9"
																		},
																		"nativeSrc": "4467:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4467:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4492:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4492:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4463:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4463:3:9"
																},
																"nativeSrc": "4463:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4463:32:9"
															},
															"nativeSrc": "4460:119:9",
															"nodeType": "YulIf",
															"src": "4460:119:9"
														},
														{
															"nativeSrc": "4589:117:9",
															"nodeType": "YulBlock",
															"src": "4589:117:9",
															"statements": [
																{
																	"nativeSrc": "4604:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4604:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4618:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4618:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4608:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4608:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4633:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4633:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4668:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4668:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4679:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4679:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4664:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4664:3:9"
																				},
																				"nativeSrc": "4664:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4664:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4688:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4688:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4643:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4643:20:9"
																		},
																		"nativeSrc": "4643:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4643:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4633:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4633:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4384:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4420:9:9",
														"nodeType": "YulTypedName",
														"src": "4420:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4431:7:9",
														"nodeType": "YulTypedName",
														"src": "4431:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4443:6:9",
														"nodeType": "YulTypedName",
														"src": "4443:6:9",
														"type": ""
													}
												],
												"src": "4384:329:9"
											},
											{
												"body": {
													"nativeSrc": "4815:73:9",
													"nodeType": "YulBlock",
													"src": "4815:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4832:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4832:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4837:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4837:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4825:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4825:6:9"
																},
																"nativeSrc": "4825:19:9",
																"nodeType": "YulFunctionCall",
																"src": "4825:19:9"
															},
															"nativeSrc": "4825:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "4825:19:9"
														},
														{
															"nativeSrc": "4853:29:9",
															"nodeType": "YulAssignment",
															"src": "4853:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4872:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4872:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4877:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4877:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4868:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4868:3:9"
																},
																"nativeSrc": "4868:14:9",
																"nodeType": "YulFunctionCall",
																"src": "4868:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4853:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "4853:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4719:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4787:3:9",
														"nodeType": "YulTypedName",
														"src": "4787:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4792:6:9",
														"nodeType": "YulTypedName",
														"src": "4792:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4803:11:9",
														"nodeType": "YulTypedName",
														"src": "4803:11:9",
														"type": ""
													}
												],
												"src": "4719:169:9"
											},
											{
												"body": {
													"nativeSrc": "5000:128:9",
													"nodeType": "YulBlock",
													"src": "5000:128:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5022:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5022:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5030:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5030:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5018:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5018:3:9"
																		},
																		"nativeSrc": "5018:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5018:14:9"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nativeSrc": "5034:34:9",
																		"nodeType": "YulLiteral",
																		"src": "5034:34:9",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5011:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5011:6:9"
																},
																"nativeSrc": "5011:58:9",
																"nodeType": "YulFunctionCall",
																"src": "5011:58:9"
															},
															"nativeSrc": "5011:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "5011:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5090:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5090:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5098:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5098:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5086:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5086:3:9"
																		},
																		"nativeSrc": "5086:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5086:15:9"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nativeSrc": "5103:17:9",
																		"nodeType": "YulLiteral",
																		"src": "5103:17:9",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5079:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5079:6:9"
																},
																"nativeSrc": "5079:42:9",
																"nodeType": "YulFunctionCall",
																"src": "5079:42:9"
															},
															"nativeSrc": "5079:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "5079:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nativeSrc": "4894:234:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4992:6:9",
														"nodeType": "YulTypedName",
														"src": "4992:6:9",
														"type": ""
													}
												],
												"src": "4894:234:9"
											},
											{
												"body": {
													"nativeSrc": "5280:220:9",
													"nodeType": "YulBlock",
													"src": "5280:220:9",
													"statements": [
														{
															"nativeSrc": "5290:74:9",
															"nodeType": "YulAssignment",
															"src": "5290:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5356:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5356:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5361:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5361:2:9",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5297:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "5297:58:9"
																},
																"nativeSrc": "5297:67:9",
																"nodeType": "YulFunctionCall",
																"src": "5297:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5290:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5290:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5462:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5462:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nativeSrc": "5373:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "5373:88:9"
																},
																"nativeSrc": "5373:93:9",
																"nodeType": "YulFunctionCall",
																"src": "5373:93:9"
															},
															"nativeSrc": "5373:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "5373:93:9"
														},
														{
															"nativeSrc": "5475:19:9",
															"nodeType": "YulAssignment",
															"src": "5475:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5486:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5486:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5491:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5491:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5482:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5482:3:9"
																},
																"nativeSrc": "5482:12:9",
																"nodeType": "YulFunctionCall",
																"src": "5482:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5475:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5475:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5134:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5268:3:9",
														"nodeType": "YulTypedName",
														"src": "5268:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5276:3:9",
														"nodeType": "YulTypedName",
														"src": "5276:3:9",
														"type": ""
													}
												],
												"src": "5134:366:9"
											},
											{
												"body": {
													"nativeSrc": "5677:248:9",
													"nodeType": "YulBlock",
													"src": "5677:248:9",
													"statements": [
														{
															"nativeSrc": "5687:26:9",
															"nodeType": "YulAssignment",
															"src": "5687:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5699:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5699:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5710:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5710:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5695:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5695:3:9"
																},
																"nativeSrc": "5695:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5695:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5687:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5687:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5734:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5734:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5745:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5745:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5730:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5730:3:9"
																		},
																		"nativeSrc": "5730:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5730:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5753:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "5753:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5759:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5759:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5749:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5749:3:9"
																		},
																		"nativeSrc": "5749:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5749:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5723:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5723:6:9"
																},
																"nativeSrc": "5723:47:9",
																"nodeType": "YulFunctionCall",
																"src": "5723:47:9"
															},
															"nativeSrc": "5723:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "5723:47:9"
														},
														{
															"nativeSrc": "5779:139:9",
															"nodeType": "YulAssignment",
															"src": "5779:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5913:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5913:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5787:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "5787:124:9"
																},
																"nativeSrc": "5787:131:9",
																"nodeType": "YulFunctionCall",
																"src": "5787:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5779:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5779:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5506:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5657:9:9",
														"nodeType": "YulTypedName",
														"src": "5657:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5672:4:9",
														"nodeType": "YulTypedName",
														"src": "5672:4:9",
														"type": ""
													}
												],
												"src": "5506:419:9"
											},
											{
												"body": {
													"nativeSrc": "6045:34:9",
													"nodeType": "YulBlock",
													"src": "6045:34:9",
													"statements": [
														{
															"nativeSrc": "6055:18:9",
															"nodeType": "YulAssignment",
															"src": "6055:18:9",
															"value": {
																"name": "pos",
																"nativeSrc": "6070:3:9",
																"nodeType": "YulIdentifier",
																"src": "6070:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6055:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "6055:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "5931:148:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6017:3:9",
														"nodeType": "YulTypedName",
														"src": "6017:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6022:6:9",
														"nodeType": "YulTypedName",
														"src": "6022:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6033:11:9",
														"nodeType": "YulTypedName",
														"src": "6033:11:9",
														"type": ""
													}
												],
												"src": "5931:148:9"
											},
											{
												"body": {
													"nativeSrc": "6191:67:9",
													"nodeType": "YulBlock",
													"src": "6191:67:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6213:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6213:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6221:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6221:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6209:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6209:3:9"
																		},
																		"nativeSrc": "6209:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6209:14:9"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nativeSrc": "6225:25:9",
																		"nodeType": "YulLiteral",
																		"src": "6225:25:9",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6202:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6202:6:9"
																},
																"nativeSrc": "6202:49:9",
																"nodeType": "YulFunctionCall",
																"src": "6202:49:9"
															},
															"nativeSrc": "6202:49:9",
															"nodeType": "YulExpressionStatement",
															"src": "6202:49:9"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nativeSrc": "6085:173:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6183:6:9",
														"nodeType": "YulTypedName",
														"src": "6183:6:9",
														"type": ""
													}
												],
												"src": "6085:173:9"
											},
											{
												"body": {
													"nativeSrc": "6428:238:9",
													"nodeType": "YulBlock",
													"src": "6428:238:9",
													"statements": [
														{
															"nativeSrc": "6438:92:9",
															"nodeType": "YulAssignment",
															"src": "6438:92:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6522:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6522:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6527:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6527:2:9",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6445:76:9",
																	"nodeType": "YulIdentifier",
																	"src": "6445:76:9"
																},
																"nativeSrc": "6445:85:9",
																"nodeType": "YulFunctionCall",
																"src": "6445:85:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6438:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6438:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6628:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6628:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nativeSrc": "6539:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "6539:88:9"
																},
																"nativeSrc": "6539:93:9",
																"nodeType": "YulFunctionCall",
																"src": "6539:93:9"
															},
															"nativeSrc": "6539:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "6539:93:9"
														},
														{
															"nativeSrc": "6641:19:9",
															"nodeType": "YulAssignment",
															"src": "6641:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6652:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6652:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6657:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6657:2:9",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6648:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6648:3:9"
																},
																"nativeSrc": "6648:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6648:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6641:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6641:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6264:402:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6416:3:9",
														"nodeType": "YulTypedName",
														"src": "6416:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6424:3:9",
														"nodeType": "YulTypedName",
														"src": "6424:3:9",
														"type": ""
													}
												],
												"src": "6264:402:9"
											},
											{
												"body": {
													"nativeSrc": "6731:40:9",
													"nodeType": "YulBlock",
													"src": "6731:40:9",
													"statements": [
														{
															"nativeSrc": "6742:22:9",
															"nodeType": "YulAssignment",
															"src": "6742:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6758:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6758:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6752:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "6752:5:9"
																},
																"nativeSrc": "6752:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6752:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6742:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6742:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "6672:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6714:5:9",
														"nodeType": "YulTypedName",
														"src": "6714:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6724:6:9",
														"nodeType": "YulTypedName",
														"src": "6724:6:9",
														"type": ""
													}
												],
												"src": "6672:99:9"
											},
											{
												"body": {
													"nativeSrc": "6839:77:9",
													"nodeType": "YulBlock",
													"src": "6839:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6856:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6856:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6861:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6861:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6866:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6866:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6850:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "6850:5:9"
																},
																"nativeSrc": "6850:23:9",
																"nodeType": "YulFunctionCall",
																"src": "6850:23:9"
															},
															"nativeSrc": "6850:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "6850:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6893:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6893:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6898:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6898:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6889:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6889:3:9"
																		},
																		"nativeSrc": "6889:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6889:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6907:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6907:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6882:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6882:6:9"
																},
																"nativeSrc": "6882:27:9",
																"nodeType": "YulFunctionCall",
																"src": "6882:27:9"
															},
															"nativeSrc": "6882:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "6882:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6777:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6821:3:9",
														"nodeType": "YulTypedName",
														"src": "6821:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6826:3:9",
														"nodeType": "YulTypedName",
														"src": "6826:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6831:6:9",
														"nodeType": "YulTypedName",
														"src": "6831:6:9",
														"type": ""
													}
												],
												"src": "6777:139:9"
											},
											{
												"body": {
													"nativeSrc": "7032:280:9",
													"nodeType": "YulBlock",
													"src": "7032:280:9",
													"statements": [
														{
															"nativeSrc": "7042:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7042:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7089:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7089:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7056:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "7056:32:9"
																},
																"nativeSrc": "7056:39:9",
																"nodeType": "YulFunctionCall",
																"src": "7056:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7046:6:9",
																	"nodeType": "YulTypedName",
																	"src": "7046:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7104:96:9",
															"nodeType": "YulAssignment",
															"src": "7104:96:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7188:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7188:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7193:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7193:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7111:76:9",
																	"nodeType": "YulIdentifier",
																	"src": "7111:76:9"
																},
																"nativeSrc": "7111:89:9",
																"nodeType": "YulFunctionCall",
																"src": "7111:89:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7104:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7104:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7248:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7248:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7255:4:9",
																				"nodeType": "YulLiteral",
																				"src": "7255:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7244:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7244:3:9"
																		},
																		"nativeSrc": "7244:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7244:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7262:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7262:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7267:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7267:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7209:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "7209:34:9"
																},
																"nativeSrc": "7209:65:9",
																"nodeType": "YulFunctionCall",
																"src": "7209:65:9"
															},
															"nativeSrc": "7209:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "7209:65:9"
														},
														{
															"nativeSrc": "7283:23:9",
															"nodeType": "YulAssignment",
															"src": "7283:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7294:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7294:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7299:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7299:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7290:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7290:3:9"
																},
																"nativeSrc": "7290:16:9",
																"nodeType": "YulFunctionCall",
																"src": "7290:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7283:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7283:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6922:390:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7013:5:9",
														"nodeType": "YulTypedName",
														"src": "7013:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7020:3:9",
														"nodeType": "YulTypedName",
														"src": "7020:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7028:3:9",
														"nodeType": "YulTypedName",
														"src": "7028:3:9",
														"type": ""
													}
												],
												"src": "6922:390:9"
											},
											{
												"body": {
													"nativeSrc": "7424:61:9",
													"nodeType": "YulBlock",
													"src": "7424:61:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7446:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7446:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7454:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7454:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7442:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7442:3:9"
																		},
																		"nativeSrc": "7442:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7442:14:9"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nativeSrc": "7458:19:9",
																		"nodeType": "YulLiteral",
																		"src": "7458:19:9",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7435:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7435:6:9"
																},
																"nativeSrc": "7435:43:9",
																"nodeType": "YulFunctionCall",
																"src": "7435:43:9"
															},
															"nativeSrc": "7435:43:9",
															"nodeType": "YulExpressionStatement",
															"src": "7435:43:9"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nativeSrc": "7318:167:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7416:6:9",
														"nodeType": "YulTypedName",
														"src": "7416:6:9",
														"type": ""
													}
												],
												"src": "7318:167:9"
											},
											{
												"body": {
													"nativeSrc": "7655:238:9",
													"nodeType": "YulBlock",
													"src": "7655:238:9",
													"statements": [
														{
															"nativeSrc": "7665:92:9",
															"nodeType": "YulAssignment",
															"src": "7665:92:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7749:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7749:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7754:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7754:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7672:76:9",
																	"nodeType": "YulIdentifier",
																	"src": "7672:76:9"
																},
																"nativeSrc": "7672:85:9",
																"nodeType": "YulFunctionCall",
																"src": "7672:85:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7665:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7665:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7855:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7855:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nativeSrc": "7766:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "7766:88:9"
																},
																"nativeSrc": "7766:93:9",
																"nodeType": "YulFunctionCall",
																"src": "7766:93:9"
															},
															"nativeSrc": "7766:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "7766:93:9"
														},
														{
															"nativeSrc": "7868:19:9",
															"nodeType": "YulAssignment",
															"src": "7868:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7879:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7879:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7884:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7884:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7875:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7875:3:9"
																},
																"nativeSrc": "7875:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7875:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7868:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7868:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7491:402:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7643:3:9",
														"nodeType": "YulTypedName",
														"src": "7643:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7651:3:9",
														"nodeType": "YulTypedName",
														"src": "7651:3:9",
														"type": ""
													}
												],
												"src": "7491:402:9"
											},
											{
												"body": {
													"nativeSrc": "8285:581:9",
													"nodeType": "YulBlock",
													"src": "8285:581:9",
													"statements": [
														{
															"nativeSrc": "8296:155:9",
															"nodeType": "YulAssignment",
															"src": "8296:155:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8447:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8447:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8303:142:9",
																	"nodeType": "YulIdentifier",
																	"src": "8303:142:9"
																},
																"nativeSrc": "8303:148:9",
																"nodeType": "YulFunctionCall",
																"src": "8303:148:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8296:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8296:3:9"
																}
															]
														},
														{
															"nativeSrc": "8461:102:9",
															"nodeType": "YulAssignment",
															"src": "8461:102:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8550:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8550:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8559:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8559:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8468:81:9",
																	"nodeType": "YulIdentifier",
																	"src": "8468:81:9"
																},
																"nativeSrc": "8468:95:9",
																"nodeType": "YulFunctionCall",
																"src": "8468:95:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8461:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8461:3:9"
																}
															]
														},
														{
															"nativeSrc": "8573:155:9",
															"nodeType": "YulAssignment",
															"src": "8573:155:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8724:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8724:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8580:142:9",
																	"nodeType": "YulIdentifier",
																	"src": "8580:142:9"
																},
																"nativeSrc": "8580:148:9",
																"nodeType": "YulFunctionCall",
																"src": "8580:148:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8573:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8573:3:9"
																}
															]
														},
														{
															"nativeSrc": "8738:102:9",
															"nodeType": "YulAssignment",
															"src": "8738:102:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8827:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8827:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8836:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8836:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8745:81:9",
																	"nodeType": "YulIdentifier",
																	"src": "8745:81:9"
																},
																"nativeSrc": "8745:95:9",
																"nodeType": "YulFunctionCall",
																"src": "8745:95:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8738:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8738:3:9"
																}
															]
														},
														{
															"nativeSrc": "8850:10:9",
															"nodeType": "YulAssignment",
															"src": "8850:10:9",
															"value": {
																"name": "pos",
																"nativeSrc": "8857:3:9",
																"nodeType": "YulIdentifier",
																"src": "8857:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8850:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8850:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7899:967:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8256:3:9",
														"nodeType": "YulTypedName",
														"src": "8256:3:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8262:6:9",
														"nodeType": "YulTypedName",
														"src": "8262:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8270:6:9",
														"nodeType": "YulTypedName",
														"src": "8270:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8281:3:9",
														"nodeType": "YulTypedName",
														"src": "8281:3:9",
														"type": ""
													}
												],
												"src": "7899:967:9"
											},
											{
												"body": {
													"nativeSrc": "8920:54:9",
													"nodeType": "YulBlock",
													"src": "8920:54:9",
													"statements": [
														{
															"nativeSrc": "8930:38:9",
															"nodeType": "YulAssignment",
															"src": "8930:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8948:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8948:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8955:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8955:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8944:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8944:3:9"
																		},
																		"nativeSrc": "8944:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8944:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8964:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8964:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "8960:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8960:3:9"
																		},
																		"nativeSrc": "8960:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8960:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8940:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8940:3:9"
																},
																"nativeSrc": "8940:28:9",
																"nodeType": "YulFunctionCall",
																"src": "8940:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8930:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8930:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "8872:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8903:5:9",
														"nodeType": "YulTypedName",
														"src": "8903:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "8913:6:9",
														"nodeType": "YulTypedName",
														"src": "8913:6:9",
														"type": ""
													}
												],
												"src": "8872:102:9"
											},
											{
												"body": {
													"nativeSrc": "9072:285:9",
													"nodeType": "YulBlock",
													"src": "9072:285:9",
													"statements": [
														{
															"nativeSrc": "9082:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "9082:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9129:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9129:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "9096:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "9096:32:9"
																},
																"nativeSrc": "9096:39:9",
																"nodeType": "YulFunctionCall",
																"src": "9096:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9086:6:9",
																	"nodeType": "YulTypedName",
																	"src": "9086:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9144:78:9",
															"nodeType": "YulAssignment",
															"src": "9144:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9210:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9210:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9215:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9215:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9151:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9151:58:9"
																},
																"nativeSrc": "9151:71:9",
																"nodeType": "YulFunctionCall",
																"src": "9151:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9144:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9144:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9270:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9270:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9277:4:9",
																				"nodeType": "YulLiteral",
																				"src": "9277:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9266:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9266:3:9"
																		},
																		"nativeSrc": "9266:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9266:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9284:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9284:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9289:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9289:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9231:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "9231:34:9"
																},
																"nativeSrc": "9231:65:9",
																"nodeType": "YulFunctionCall",
																"src": "9231:65:9"
															},
															"nativeSrc": "9231:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "9231:65:9"
														},
														{
															"nativeSrc": "9305:46:9",
															"nodeType": "YulAssignment",
															"src": "9305:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9316:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9316:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9343:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9343:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9321:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "9321:21:9"
																		},
																		"nativeSrc": "9321:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9321:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9312:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9312:3:9"
																},
																"nativeSrc": "9312:39:9",
																"nodeType": "YulFunctionCall",
																"src": "9312:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9305:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9305:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8980:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9053:5:9",
														"nodeType": "YulTypedName",
														"src": "9053:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9060:3:9",
														"nodeType": "YulTypedName",
														"src": "9060:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9068:3:9",
														"nodeType": "YulTypedName",
														"src": "9068:3:9",
														"type": ""
													}
												],
												"src": "8980:377:9"
											},
											{
												"body": {
													"nativeSrc": "9481:195:9",
													"nodeType": "YulBlock",
													"src": "9481:195:9",
													"statements": [
														{
															"nativeSrc": "9491:26:9",
															"nodeType": "YulAssignment",
															"src": "9491:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9503:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9503:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9514:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9514:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9499:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9499:3:9"
																},
																"nativeSrc": "9499:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9499:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9491:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9491:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9538:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9538:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9549:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9549:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9534:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9534:3:9"
																		},
																		"nativeSrc": "9534:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9534:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9557:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9557:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9563:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9563:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9553:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9553:3:9"
																		},
																		"nativeSrc": "9553:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9553:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9527:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9527:6:9"
																},
																"nativeSrc": "9527:47:9",
																"nodeType": "YulFunctionCall",
																"src": "9527:47:9"
															},
															"nativeSrc": "9527:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "9527:47:9"
														},
														{
															"nativeSrc": "9583:86:9",
															"nodeType": "YulAssignment",
															"src": "9583:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9655:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9655:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9664:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9664:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9591:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "9591:63:9"
																},
																"nativeSrc": "9591:78:9",
																"nodeType": "YulFunctionCall",
																"src": "9591:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9583:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9583:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9363:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9453:9:9",
														"nodeType": "YulTypedName",
														"src": "9453:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9465:6:9",
														"nodeType": "YulTypedName",
														"src": "9465:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9476:4:9",
														"nodeType": "YulTypedName",
														"src": "9476:4:9",
														"type": ""
													}
												],
												"src": "9363:313:9"
											},
											{
												"body": {
													"nativeSrc": "9710:152:9",
													"nodeType": "YulBlock",
													"src": "9710:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9727:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9727:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9730:77:9",
																		"nodeType": "YulLiteral",
																		"src": "9730:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9720:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9720:6:9"
																},
																"nativeSrc": "9720:88:9",
																"nodeType": "YulFunctionCall",
																"src": "9720:88:9"
															},
															"nativeSrc": "9720:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "9720:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9824:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9824:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9827:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9827:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9817:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9817:6:9"
																},
																"nativeSrc": "9817:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9817:15:9"
															},
															"nativeSrc": "9817:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9817:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9848:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9848:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9851:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9851:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9841:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9841:6:9"
																},
																"nativeSrc": "9841:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9841:15:9"
															},
															"nativeSrc": "9841:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9841:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9682:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9682:180:9"
											},
											{
												"body": {
													"nativeSrc": "9916:362:9",
													"nodeType": "YulBlock",
													"src": "9916:362:9",
													"statements": [
														{
															"nativeSrc": "9926:25:9",
															"nodeType": "YulAssignment",
															"src": "9926:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9949:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9949:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9931:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9931:17:9"
																},
																"nativeSrc": "9931:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9931:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9926:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9926:1:9"
																}
															]
														},
														{
															"nativeSrc": "9960:25:9",
															"nodeType": "YulAssignment",
															"src": "9960:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9983:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9983:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9965:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9965:17:9"
																},
																"nativeSrc": "9965:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9965:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9960:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9960:1:9"
																}
															]
														},
														{
															"nativeSrc": "9994:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "9994:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10017:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10017:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10020:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10020:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10013:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10013:3:9"
																},
																"nativeSrc": "10013:9:9",
																"nodeType": "YulFunctionCall",
																"src": "10013:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9998:11:9",
																	"nodeType": "YulTypedName",
																	"src": "9998:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10031:41:9",
															"nodeType": "YulAssignment",
															"src": "10031:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10060:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "10060:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10042:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10042:17:9"
																},
																"nativeSrc": "10042:30:9",
																"nodeType": "YulFunctionCall",
																"src": "10042:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10031:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "10031:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10249:22:9",
																"nodeType": "YulBlock",
																"src": "10249:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10251:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10251:16:9"
																			},
																			"nativeSrc": "10251:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10251:18:9"
																		},
																		"nativeSrc": "10251:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10251:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10182:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "10182:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10175:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "10175:6:9"
																				},
																				"nativeSrc": "10175:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10175:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10205:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "10205:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10212:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "10212:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10221:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "10221:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10208:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "10208:3:9"
																						},
																						"nativeSrc": "10208:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "10208:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10202:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "10202:2:9"
																				},
																				"nativeSrc": "10202:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10202:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10155:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "10155:2:9"
																		},
																		"nativeSrc": "10155:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10155:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10135:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10135:6:9"
																},
																"nativeSrc": "10135:113:9",
																"nodeType": "YulFunctionCall",
																"src": "10135:113:9"
															},
															"nativeSrc": "10132:139:9",
															"nodeType": "YulIf",
															"src": "10132:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9868:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9899:1:9",
														"nodeType": "YulTypedName",
														"src": "9899:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9902:1:9",
														"nodeType": "YulTypedName",
														"src": "9902:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9908:7:9",
														"nodeType": "YulTypedName",
														"src": "9908:7:9",
														"type": ""
													}
												],
												"src": "9868:410:9"
											},
											{
												"body": {
													"nativeSrc": "10328:147:9",
													"nodeType": "YulBlock",
													"src": "10328:147:9",
													"statements": [
														{
															"nativeSrc": "10338:25:9",
															"nodeType": "YulAssignment",
															"src": "10338:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10361:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10361:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10343:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10343:17:9"
																},
																"nativeSrc": "10343:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10343:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10338:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10338:1:9"
																}
															]
														},
														{
															"nativeSrc": "10372:25:9",
															"nodeType": "YulAssignment",
															"src": "10372:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10395:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10395:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10377:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10377:17:9"
																},
																"nativeSrc": "10377:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10377:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10372:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10372:1:9"
																}
															]
														},
														{
															"nativeSrc": "10406:16:9",
															"nodeType": "YulAssignment",
															"src": "10406:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10417:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10417:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10420:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10420:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10413:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10413:3:9"
																},
																"nativeSrc": "10413:9:9",
																"nodeType": "YulFunctionCall",
																"src": "10413:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10406:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10406:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10446:22:9",
																"nodeType": "YulBlock",
																"src": "10446:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10448:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10448:16:9"
																			},
																			"nativeSrc": "10448:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10448:18:9"
																		},
																		"nativeSrc": "10448:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10448:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10438:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10438:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10441:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10441:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10435:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "10435:2:9"
																},
																"nativeSrc": "10435:10:9",
																"nodeType": "YulFunctionCall",
																"src": "10435:10:9"
															},
															"nativeSrc": "10432:36:9",
															"nodeType": "YulIf",
															"src": "10432:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10284:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10315:1:9",
														"nodeType": "YulTypedName",
														"src": "10315:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10318:1:9",
														"nodeType": "YulTypedName",
														"src": "10318:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10324:3:9",
														"nodeType": "YulTypedName",
														"src": "10324:3:9",
														"type": ""
													}
												],
												"src": "10284:191:9"
											},
											{
												"body": {
													"nativeSrc": "10509:152:9",
													"nodeType": "YulBlock",
													"src": "10509:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10526:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10526:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10529:77:9",
																		"nodeType": "YulLiteral",
																		"src": "10529:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10519:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10519:6:9"
																},
																"nativeSrc": "10519:88:9",
																"nodeType": "YulFunctionCall",
																"src": "10519:88:9"
															},
															"nativeSrc": "10519:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "10519:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10623:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10623:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10626:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10626:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10616:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10616:6:9"
																},
																"nativeSrc": "10616:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10616:15:9"
															},
															"nativeSrc": "10616:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10616:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10647:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10647:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10650:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10650:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10640:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10640:6:9"
																},
																"nativeSrc": "10640:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10640:15:9"
															},
															"nativeSrc": "10640:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10640:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "10481:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "10481:180:9"
											},
											{
												"body": {
													"nativeSrc": "10695:152:9",
													"nodeType": "YulBlock",
													"src": "10695:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10712:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10712:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10715:77:9",
																		"nodeType": "YulLiteral",
																		"src": "10715:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10705:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10705:6:9"
																},
																"nativeSrc": "10705:88:9",
																"nodeType": "YulFunctionCall",
																"src": "10705:88:9"
															},
															"nativeSrc": "10705:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "10705:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10809:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10809:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10812:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10812:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10802:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10802:6:9"
																},
																"nativeSrc": "10802:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10802:15:9"
															},
															"nativeSrc": "10802:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10802:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10833:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10833:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10836:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10836:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10826:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10826:6:9"
																},
																"nativeSrc": "10826:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10826:15:9"
															},
															"nativeSrc": "10826:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10826:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10667:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "10667:180:9"
											},
											{
												"body": {
													"nativeSrc": "10896:128:9",
													"nodeType": "YulBlock",
													"src": "10896:128:9",
													"statements": [
														{
															"nativeSrc": "10906:33:9",
															"nodeType": "YulAssignment",
															"src": "10906:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10933:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10933:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10915:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10915:17:9"
																},
																"nativeSrc": "10915:24:9",
																"nodeType": "YulFunctionCall",
																"src": "10915:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10906:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10906:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10967:22:9",
																"nodeType": "YulBlock",
																"src": "10967:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10969:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10969:16:9"
																			},
																			"nativeSrc": "10969:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10969:18:9"
																		},
																		"nativeSrc": "10969:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10969:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10954:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10954:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10961:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10961:4:9",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10951:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "10951:2:9"
																},
																"nativeSrc": "10951:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10951:15:9"
															},
															"nativeSrc": "10948:41:9",
															"nodeType": "YulIf",
															"src": "10948:41:9"
														},
														{
															"nativeSrc": "10998:20:9",
															"nodeType": "YulAssignment",
															"src": "10998:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11009:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11009:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11016:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11016:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11005:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11005:3:9"
																},
																"nativeSrc": "11005:13:9",
																"nodeType": "YulFunctionCall",
																"src": "11005:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10998:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10998:3:9"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "10853:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10882:5:9",
														"nodeType": "YulTypedName",
														"src": "10882:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10892:3:9",
														"nodeType": "YulTypedName",
														"src": "10892:3:9",
														"type": ""
													}
												],
												"src": "10853:171:9"
											},
											{
												"body": {
													"nativeSrc": "11136:76:9",
													"nodeType": "YulBlock",
													"src": "11136:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11158:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11158:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11166:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11166:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11154:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11154:3:9"
																		},
																		"nativeSrc": "11154:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11154:14:9"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nativeSrc": "11170:34:9",
																		"nodeType": "YulLiteral",
																		"src": "11170:34:9",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11147:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11147:6:9"
																},
																"nativeSrc": "11147:58:9",
																"nodeType": "YulFunctionCall",
																"src": "11147:58:9"
															},
															"nativeSrc": "11147:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "11147:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nativeSrc": "11030:182:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11128:6:9",
														"nodeType": "YulTypedName",
														"src": "11128:6:9",
														"type": ""
													}
												],
												"src": "11030:182:9"
											},
											{
												"body": {
													"nativeSrc": "11364:220:9",
													"nodeType": "YulBlock",
													"src": "11364:220:9",
													"statements": [
														{
															"nativeSrc": "11374:74:9",
															"nodeType": "YulAssignment",
															"src": "11374:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11440:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11440:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11445:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11445:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11381:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11381:58:9"
																},
																"nativeSrc": "11381:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11381:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11374:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11374:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11546:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11546:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nativeSrc": "11457:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11457:88:9"
																},
																"nativeSrc": "11457:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11457:93:9"
															},
															"nativeSrc": "11457:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11457:93:9"
														},
														{
															"nativeSrc": "11559:19:9",
															"nodeType": "YulAssignment",
															"src": "11559:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11570:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11570:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11575:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11575:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11566:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11566:3:9"
																},
																"nativeSrc": "11566:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11566:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11559:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11559:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11218:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11352:3:9",
														"nodeType": "YulTypedName",
														"src": "11352:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11360:3:9",
														"nodeType": "YulTypedName",
														"src": "11360:3:9",
														"type": ""
													}
												],
												"src": "11218:366:9"
											},
											{
												"body": {
													"nativeSrc": "11761:248:9",
													"nodeType": "YulBlock",
													"src": "11761:248:9",
													"statements": [
														{
															"nativeSrc": "11771:26:9",
															"nodeType": "YulAssignment",
															"src": "11771:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11783:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11783:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11794:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11794:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11779:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11779:3:9"
																},
																"nativeSrc": "11779:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11779:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11771:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11771:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11818:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11818:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11829:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11829:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11814:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11814:3:9"
																		},
																		"nativeSrc": "11814:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11814:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11837:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11837:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11843:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11843:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11833:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11833:3:9"
																		},
																		"nativeSrc": "11833:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11833:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11807:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11807:6:9"
																},
																"nativeSrc": "11807:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11807:47:9"
															},
															"nativeSrc": "11807:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11807:47:9"
														},
														{
															"nativeSrc": "11863:139:9",
															"nodeType": "YulAssignment",
															"src": "11863:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11997:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11997:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11871:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11871:124:9"
																},
																"nativeSrc": "11871:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11871:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11863:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11863:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11590:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11741:9:9",
														"nodeType": "YulTypedName",
														"src": "11741:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11756:4:9",
														"nodeType": "YulTypedName",
														"src": "11756:4:9",
														"type": ""
													}
												],
												"src": "11590:419:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100f3575f3560e01c80639a19c7b011610095578063c02725f011610064578063c02725f01461026b578063c634b78e14610287578063d547741f146102a3578063f58ee354146102bf576100f3565b80639a19c7b0146101f95780639b4c7ced14610215578063a217fddf14610231578063aac2094a1461024f576100f3565b806336568abe116100d157806336568abe1461017357806366c77df71461018f57806375b238fc146101ab57806391d14854146101c9576100f3565b806301ffc9a7146100f7578063248a9ca3146101275780632f2ff15d14610157575b5f80fd5b610111600480360381019061010c9190610ba7565b6102db565b60405161011e9190610bec565b60405180910390f35b610141600480360381019061013c9190610c38565b610354565b60405161014e9190610c72565b60405180910390f35b610171600480360381019061016c9190610ce5565b610370565b005b61018d60048036038101906101889190610ce5565b610391565b005b6101a960048036038101906101a49190610d56565b610414565b005b6101b3610446565b6040516101c09190610c72565b60405180910390f35b6101e360048036038101906101de9190610ce5565b61046a565b6040516101f09190610bec565b60405180910390f35b610213600480360381019061020e9190610d94565b6104cd565b005b61022f600480360381019061022a9190610d56565b610507565b005b610239610539565b6040516102469190610c72565b60405180910390f35b61026960048036038101906102649190610d56565b61053f565b005b61028560048036038101906102809190610d56565b610571565b005b6102a1600480360381019061029c9190610d94565b6105a3565b005b6102bd60048036038101906102b89190610ce5565b6105dd565b005b6102d960048036038101906102d49190610d56565b6105fe565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061034d575061034c82610630565b5b9050919050565b5f805f8381526020019081526020015f20600101549050919050565b61037982610354565b61038281610699565b61038c83836106ad565b505050565b610399610787565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610406576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fd90610e3f565b60405180910390fd5b610410828261078e565b5050565b80827ff5704ea1fb9a06b3c4911041793afd3003eac5b15756eef2987e75303f9f34c660405160405180910390a35050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b6104d981610699565b6105037fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775836105dd565b5050565b80827f96af4cfe56c938154cf8986288dfea262d8b1caa075204f4679ae517bcea70b960405160405180910390a35050565b5f801b81565b80827f4c4660db760944215f41e957066d756ad5fd0eed1b4640632322eb06f77b034d60405160405180910390a35050565b80827fcccca5c37cd734d94742d46e24d5fcdc3e6ef8dd90dda510dae0e35530add4a260405160405180910390a35050565b5f801b6105af81610699565b6105d97fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177583610370565b5050565b6105e682610354565b6105ef81610699565b6105f9838361078e565b505050565b80827f51dbb46f6f6d290ac0b2b3fb0b015e2065756f1b9ec382651fe728757bf362fe60405160405180910390a35050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6106aa816106a5610787565b610868565b50565b6106b7828261046a565b6107835760015f808481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610728610787565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b5f33905090565b610798828261046a565b15610864575f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610809610787565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b610872828261046a565b6108e85761087f816108ec565b61088c835f1c6020610919565b60405160200161089d929190610f43565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df9190610fc4565b60405180910390fd5b5050565b60606109128273ffffffffffffffffffffffffffffffffffffffff16601460ff16610919565b9050919050565b60605f600283600261092b9190611011565b6109359190611052565b67ffffffffffffffff81111561094e5761094d611085565b5b6040519080825280601f01601f1916602001820160405280156109805781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000815f815181106109b7576109b66110b2565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610a1a57610a196110b2565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505f6001846002610a589190611011565b610a629190611052565b90505b6001811115610b01577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610aa457610aa36110b2565b5b1a60f81b828281518110610abb57610aba6110b2565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600485901c945080610afa906110df565b9050610a65565b505f8414610b44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3b90611150565b60405180910390fd5b8091505092915050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610b8681610b52565b8114610b90575f80fd5b50565b5f81359050610ba181610b7d565b92915050565b5f60208284031215610bbc57610bbb610b4e565b5b5f610bc984828501610b93565b91505092915050565b5f8115159050919050565b610be681610bd2565b82525050565b5f602082019050610bff5f830184610bdd565b92915050565b5f819050919050565b610c1781610c05565b8114610c21575f80fd5b50565b5f81359050610c3281610c0e565b92915050565b5f60208284031215610c4d57610c4c610b4e565b5b5f610c5a84828501610c24565b91505092915050565b610c6c81610c05565b82525050565b5f602082019050610c855f830184610c63565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610cb482610c8b565b9050919050565b610cc481610caa565b8114610cce575f80fd5b50565b5f81359050610cdf81610cbb565b92915050565b5f8060408385031215610cfb57610cfa610b4e565b5b5f610d0885828601610c24565b9250506020610d1985828601610cd1565b9150509250929050565b5f819050919050565b610d3581610d23565b8114610d3f575f80fd5b50565b5f81359050610d5081610d2c565b92915050565b5f8060408385031215610d6c57610d6b610b4e565b5b5f610d7985828601610d42565b9250506020610d8a85828601610d42565b9150509250929050565b5f60208284031215610da957610da8610b4e565b5b5f610db684828501610cd1565b91505092915050565b5f82825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e63655f8201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b5f610e29602f83610dbf565b9150610e3482610dcf565b604082019050919050565b5f6020820190508181035f830152610e5681610e1d565b9050919050565b5f81905092915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000005f82015250565b5f610e9b601783610e5d565b9150610ea682610e67565b601782019050919050565b5f81519050919050565b8281835e5f83830152505050565b5f610ed382610eb1565b610edd8185610e5d565b9350610eed818560208601610ebb565b80840191505092915050565b7f206973206d697373696e6720726f6c65200000000000000000000000000000005f82015250565b5f610f2d601183610e5d565b9150610f3882610ef9565b601182019050919050565b5f610f4d82610e8f565b9150610f598285610ec9565b9150610f6482610f21565b9150610f708284610ec9565b91508190509392505050565b5f601f19601f8301169050919050565b5f610f9682610eb1565b610fa08185610dbf565b9350610fb0818560208601610ebb565b610fb981610f7c565b840191505092915050565b5f6020820190508181035f830152610fdc8184610f8c565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61101b82610d23565b915061102683610d23565b925082820261103481610d23565b9150828204841483151761104b5761104a610fe4565b5b5092915050565b5f61105c82610d23565b915061106783610d23565b925082820190508082111561107f5761107e610fe4565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6110e982610d23565b91505f82036110fb576110fa610fe4565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e745f82015250565b5f61113a602083610dbf565b915061114582611106565b602082019050919050565b5f6020820190508181035f8301526111678161112e565b905091905056fea26469706673582212209942a5ab56136836e7849d764e111d51cd2ba8f3d5e9b0e39338b47e9ca50a7d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A19C7B0 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC02725F0 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC02725F0 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xC634B78E EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xF58EE354 EQ PUSH2 0x2BF JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x9A19C7B0 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x9B4C7CED EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xAAC2094A EQ PUSH2 0x24F JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x66C77DF7 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1C9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x157 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B3 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x4CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH2 0x539 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x5A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x34D JUMPI POP PUSH2 0x34C DUP3 PUSH2 0x630 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x379 DUP3 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x382 DUP2 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x38C DUP4 DUP4 PUSH2 0x6AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x399 PUSH2 0x787 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x406 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FD SWAP1 PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x410 DUP3 DUP3 PUSH2 0x78E JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 DUP3 PUSH32 0xF5704EA1FB9A06B3C4911041793AFD3003EAC5B15756EEF2987E75303F9F34C6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x4D9 DUP2 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x503 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP4 PUSH2 0x5DD JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 DUP3 PUSH32 0x96AF4CFE56C938154CF8986288DFEA262D8B1CAA075204F4679AE517BCEA70B9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST DUP1 DUP3 PUSH32 0x4C4660DB760944215F41E957066D756AD5FD0EED1B4640632322EB06F77B034D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 DUP3 PUSH32 0xCCCCA5C37CD734D94742D46E24D5FCDC3E6EF8DD90DDA510DAE0E35530ADD4A2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x5AF DUP2 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x5D9 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP4 PUSH2 0x370 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5E6 DUP3 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x5EF DUP2 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x5F9 DUP4 DUP4 PUSH2 0x78E JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 DUP3 PUSH32 0x51DBB46F6F6D290AC0B2B3FB0B015E2065756F1B9EC382651FE728757BF362FE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AA DUP2 PUSH2 0x6A5 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x868 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6B7 DUP3 DUP3 PUSH2 0x46A JUMP JUMPDEST PUSH2 0x783 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x728 PUSH2 0x787 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x798 DUP3 DUP3 PUSH2 0x46A JUMP JUMPDEST ISZERO PUSH2 0x864 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x809 PUSH2 0x787 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x872 DUP3 DUP3 PUSH2 0x46A JUMP JUMPDEST PUSH2 0x8E8 JUMPI PUSH2 0x87F DUP2 PUSH2 0x8EC JUMP JUMPDEST PUSH2 0x88C DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x89D SWAP3 SWAP2 SWAP1 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DF SWAP2 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x912 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x919 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x92B SWAP2 SWAP1 PUSH2 0x1011 JUMP JUMPDEST PUSH2 0x935 SWAP2 SWAP1 PUSH2 0x1052 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x94E JUMPI PUSH2 0x94D PUSH2 0x1085 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x980 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x9B7 JUMPI PUSH2 0x9B6 PUSH2 0x10B2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA1A JUMPI PUSH2 0xA19 PUSH2 0x10B2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0x1011 JUMP JUMPDEST PUSH2 0xA62 SWAP2 SWAP1 PUSH2 0x1052 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB01 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xAA4 JUMPI PUSH2 0xAA3 PUSH2 0x10B2 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xABB JUMPI PUSH2 0xABA PUSH2 0x10B2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xAFA SWAP1 PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP PUSH2 0xA65 JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0xB44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3B SWAP1 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB86 DUP2 PUSH2 0xB52 JUMP JUMPDEST DUP2 EQ PUSH2 0xB90 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBA1 DUP2 PUSH2 0xB7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBC JUMPI PUSH2 0xBBB PUSH2 0xB4E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBC9 DUP5 DUP3 DUP6 ADD PUSH2 0xB93 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE6 DUP2 PUSH2 0xBD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFF PUSH0 DUP4 ADD DUP5 PUSH2 0xBDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC17 DUP2 PUSH2 0xC05 JUMP JUMPDEST DUP2 EQ PUSH2 0xC21 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC32 DUP2 PUSH2 0xC0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0xB4E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC5A DUP5 DUP3 DUP6 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC6C DUP2 PUSH2 0xC05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC85 PUSH0 DUP4 ADD DUP5 PUSH2 0xC63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCB4 DUP3 PUSH2 0xC8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC4 DUP2 PUSH2 0xCAA JUMP JUMPDEST DUP2 EQ PUSH2 0xCCE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCDF DUP2 PUSH2 0xCBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH2 0xCFA PUSH2 0xB4E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD08 DUP6 DUP3 DUP7 ADD PUSH2 0xC24 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD19 DUP6 DUP3 DUP7 ADD PUSH2 0xCD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD35 DUP2 PUSH2 0xD23 JUMP JUMPDEST DUP2 EQ PUSH2 0xD3F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD50 DUP2 PUSH2 0xD2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD6C JUMPI PUSH2 0xD6B PUSH2 0xB4E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD79 DUP6 DUP3 DUP7 ADD PUSH2 0xD42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD8A DUP6 DUP3 DUP7 ADD PUSH2 0xD42 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDA9 JUMPI PUSH2 0xDA8 PUSH2 0xB4E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDB6 DUP5 DUP3 DUP6 ADD PUSH2 0xCD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE29 PUSH1 0x2F DUP4 PUSH2 0xDBF JUMP JUMPDEST SWAP2 POP PUSH2 0xE34 DUP3 PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE56 DUP2 PUSH2 0xE1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE9B PUSH1 0x17 DUP4 PUSH2 0xE5D JUMP JUMPDEST SWAP2 POP PUSH2 0xEA6 DUP3 PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xED3 DUP3 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0xEDD DUP2 DUP6 PUSH2 0xE5D JUMP JUMPDEST SWAP4 POP PUSH2 0xEED DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEBB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF2D PUSH1 0x11 DUP4 PUSH2 0xE5D JUMP JUMPDEST SWAP2 POP PUSH2 0xF38 DUP3 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF4D DUP3 PUSH2 0xE8F JUMP JUMPDEST SWAP2 POP PUSH2 0xF59 DUP3 DUP6 PUSH2 0xEC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF64 DUP3 PUSH2 0xF21 JUMP JUMPDEST SWAP2 POP PUSH2 0xF70 DUP3 DUP5 PUSH2 0xEC9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF96 DUP3 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0xFA0 DUP2 DUP6 PUSH2 0xDBF JUMP JUMPDEST SWAP4 POP PUSH2 0xFB0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEBB JUMP JUMPDEST PUSH2 0xFB9 DUP2 PUSH2 0xF7C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFDC DUP2 DUP5 PUSH2 0xF8C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x101B DUP3 PUSH2 0xD23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1026 DUP4 PUSH2 0xD23 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1034 DUP2 PUSH2 0xD23 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x104B JUMPI PUSH2 0x104A PUSH2 0xFE4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x105C DUP3 PUSH2 0xD23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1067 DUP4 PUSH2 0xD23 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x107F JUMPI PUSH2 0x107E PUSH2 0xFE4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x10E9 DUP3 PUSH2 0xD23 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x10FB JUMPI PUSH2 0x10FA PUSH2 0xFE4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x113A PUSH1 0x20 DUP4 PUSH2 0xDBF JUMP JUMPDEST SWAP2 POP PUSH2 0x1145 DUP3 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1167 DUP2 PUSH2 0x112E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 TIMESTAMP 0xA5 0xAB JUMP SGT PUSH9 0x36E7849D764E111D51 0xCD 0x2B 0xA8 RETURN 0xD5 0xE9 0xB0 0xE3 SWAP4 CODESIZE 0xB4 PUSH31 0x9CA50A7D64736F6C634300081A003300000000000000000000000000000000 ",
							"sourceMap": "281:1480:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:202:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4378:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4803:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5912:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1392:117:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;327:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2895:145:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1018:126:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1516:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2027:49:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1272:114:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1150:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;888:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5228:147:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1643:115:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2606:202:1;2691:4;2729:32;2714:47;;;:11;:47;;;;:87;;;;2765:36;2789:11;2765:23;:36::i;:::-;2714:87;2707:94;;2606:202;;;:::o;4378:129::-;4452:7;4478:6;:12;4485:4;4478:12;;;;;;;;;;;:22;;;4471:29;;4378:129;;;:::o;4803:145::-;4886:18;4899:4;4886:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;4916:25:::1;4927:4;4933:7;4916:10;:25::i;:::-;4803:145:::0;;;:::o;5912:214::-;6018:12;:10;:12::i;:::-;6007:23;;:7;:23;;;5999:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6093:26;6105:4;6111:7;6093:11;:26::i;:::-;5912:214;;:::o;1392:117:0:-;1492:9;1483:7;1472:30;;;;;;;;;;1392:117;;:::o;327:60::-;364:23;327:60;:::o;2895:145:1:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;1018:126:0:-;2072:4:1;1076:18:0;;2505:16:1;2516:4;2505:10;:16::i;:::-;1106:31:0::1;364:23;1129:7;1106:10;:31::i;:::-;1018:126:::0;;:::o;1516:121::-;1620:9;1611:7;1598:32;;;;;;;;;;1516:121;;:::o;2027:49:1:-;2072:4;2027:49;;;:::o;1272:114:0:-;1369:9;1360:7;1350:29;;;;;;;;;;1272:114;;:::o;1150:116::-;1249:9;1240:7;1229:30;;;;;;;;;;1150:116;;:::o;888:124::-;2072:4:1;945:18:0;;2505:16:1;2516:4;2505:10;:16::i;:::-;975:30:0::1;364:23;997:7;975:9;:30::i;:::-;888:124:::0;;:::o;5228:147:1:-;5312:18;5325:4;5312:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;5342:26:::1;5354:4;5360:7;5342:11;:26::i;:::-;5228:147:::0;;;:::o;1643:115:0:-;1741:9;1732:7;1722:29;;;;;;;;;;1643:115;;:::o;829:155:6:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3334:103:1:-;3400:30;3411:4;3417:12;:10;:12::i;:::-;3400:10;:30::i;:::-;3334:103;:::o;7461:233::-;7544:22;7552:4;7558:7;7544;:22::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;:12::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;7865:234:1:-;7948:22;7956:4;7962:7;7948;:22::i;:::-;7944:149;;;8018:5;7986:6;:12;7993:4;7986:12;;;;;;;;;;;:20;;:29;8007:7;7986:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8069:12;:10;:12::i;:::-;8042:40;;8060:7;8042:40;;8054:4;8042:40;;;;;;;;;;7944:149;7865:234;;:::o;3718:479::-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:390;;3989:28;4009:7;3989:19;:28::i;:::-;4088:38;4116:4;4108:13;;4123:2;4088:19;:38::i;:::-;3896:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3844:336;;;;;;;;;;;:::i;:::-;;;;;;;;3801:390;3718:479;;:::o;2102:149:5:-;2160:13;2192:52;2220:4;2204:22;;311:2;2192:52;;:11;:52::i;:::-;2185:59;;2102:149;;;:::o;1513:437::-;1588:13;1613:19;1658:1;1649:6;1645:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:47;;1670:15;:6;1677:1;1670:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1695;:6;1702:1;1695:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1725:9;1750:1;1741:6;1737:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;1791:8;1808:3;1800:5;:11;1791:21;;;;;;;:::i;:::-;;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;1836:1;1826:11;;;;;1760:3;;;;:::i;:::-;;;1720:128;;;;1874:1;1865:5;:10;1857:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1936:6;1922:21;;;1513:437;;;;:::o;88:117:9:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:96::-;2730:7;2759:24;2777:5;2759:24;:::i;:::-;2748:35;;2693:96;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:474::-;3136:6;3144;3193:2;3181:9;3172:7;3168:23;3164:32;3161:119;;;3199:79;;:::i;:::-;3161:119;3319:1;3344:53;3389:7;3380:6;3369:9;3365:22;3344:53;:::i;:::-;3334:63;;3290:117;3446:2;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3417:118;3068:474;;;;;:::o;3548:77::-;3585:7;3614:5;3603:16;;3548:77;;;:::o;3631:122::-;3704:24;3722:5;3704:24;:::i;:::-;3697:5;3694:35;3684:63;;3743:1;3740;3733:12;3684:63;3631:122;:::o;3759:139::-;3805:5;3843:6;3830:20;3821:29;;3859:33;3886:5;3859:33;:::i;:::-;3759:139;;;;:::o;3904:474::-;3972:6;3980;4029:2;4017:9;4008:7;4004:23;4000:32;3997:119;;;4035:79;;:::i;:::-;3997:119;4155:1;4180:53;4225:7;4216:6;4205:9;4201:22;4180:53;:::i;:::-;4170:63;;4126:117;4282:2;4308:53;4353:7;4344:6;4333:9;4329:22;4308:53;:::i;:::-;4298:63;;4253:118;3904:474;;;;;:::o;4384:329::-;4443:6;4492:2;4480:9;4471:7;4467:23;4463:32;4460:119;;;4498:79;;:::i;:::-;4460:119;4618:1;4643:53;4688:7;4679:6;4668:9;4664:22;4643:53;:::i;:::-;4633:63;;4589:117;4384:329;;;;:::o;4719:169::-;4803:11;4837:6;4832:3;4825:19;4877:4;4872:3;4868:14;4853:29;;4719:169;;;;:::o;4894:234::-;5034:34;5030:1;5022:6;5018:14;5011:58;5103:17;5098:2;5090:6;5086:15;5079:42;4894:234;:::o;5134:366::-;5276:3;5297:67;5361:2;5356:3;5297:67;:::i;:::-;5290:74;;5373:93;5462:3;5373:93;:::i;:::-;5491:2;5486:3;5482:12;5475:19;;5134:366;;;:::o;5506:419::-;5672:4;5710:2;5699:9;5695:18;5687:26;;5759:9;5753:4;5749:20;5745:1;5734:9;5730:17;5723:47;5787:131;5913:4;5787:131;:::i;:::-;5779:139;;5506:419;;;:::o;5931:148::-;6033:11;6070:3;6055:18;;5931:148;;;;:::o;6085:173::-;6225:25;6221:1;6213:6;6209:14;6202:49;6085:173;:::o;6264:402::-;6424:3;6445:85;6527:2;6522:3;6445:85;:::i;:::-;6438:92;;6539:93;6628:3;6539:93;:::i;:::-;6657:2;6652:3;6648:12;6641:19;;6264:402;;;:::o;6672:99::-;6724:6;6758:5;6752:12;6742:22;;6672:99;;;:::o;6777:139::-;6866:6;6861:3;6856;6850:23;6907:1;6898:6;6893:3;6889:16;6882:27;6777:139;;;:::o;6922:390::-;7028:3;7056:39;7089:5;7056:39;:::i;:::-;7111:89;7193:6;7188:3;7111:89;:::i;:::-;7104:96;;7209:65;7267:6;7262:3;7255:4;7248:5;7244:16;7209:65;:::i;:::-;7299:6;7294:3;7290:16;7283:23;;7032:280;6922:390;;;;:::o;7318:167::-;7458:19;7454:1;7446:6;7442:14;7435:43;7318:167;:::o;7491:402::-;7651:3;7672:85;7754:2;7749:3;7672:85;:::i;:::-;7665:92;;7766:93;7855:3;7766:93;:::i;:::-;7884:2;7879:3;7875:12;7868:19;;7491:402;;;:::o;7899:967::-;8281:3;8303:148;8447:3;8303:148;:::i;:::-;8296:155;;8468:95;8559:3;8550:6;8468:95;:::i;:::-;8461:102;;8580:148;8724:3;8580:148;:::i;:::-;8573:155;;8745:95;8836:3;8827:6;8745:95;:::i;:::-;8738:102;;8857:3;8850:10;;7899:967;;;;;:::o;8872:102::-;8913:6;8964:2;8960:7;8955:2;8948:5;8944:14;8940:28;8930:38;;8872:102;;;:::o;8980:377::-;9068:3;9096:39;9129:5;9096:39;:::i;:::-;9151:71;9215:6;9210:3;9151:71;:::i;:::-;9144:78;;9231:65;9289:6;9284:3;9277:4;9270:5;9266:16;9231:65;:::i;:::-;9321:29;9343:6;9321:29;:::i;:::-;9316:3;9312:39;9305:46;;9072:285;8980:377;;;;:::o;9363:313::-;9476:4;9514:2;9503:9;9499:18;9491:26;;9563:9;9557:4;9553:20;9549:1;9538:9;9534:17;9527:47;9591:78;9664:4;9655:6;9591:78;:::i;:::-;9583:86;;9363:313;;;;:::o;9682:180::-;9730:77;9727:1;9720:88;9827:4;9824:1;9817:15;9851:4;9848:1;9841:15;9868:410;9908:7;9931:20;9949:1;9931:20;:::i;:::-;9926:25;;9965:20;9983:1;9965:20;:::i;:::-;9960:25;;10020:1;10017;10013:9;10042:30;10060:11;10042:30;:::i;:::-;10031:41;;10221:1;10212:7;10208:15;10205:1;10202:22;10182:1;10175:9;10155:83;10132:139;;10251:18;;:::i;:::-;10132:139;9916:362;9868:410;;;;:::o;10284:191::-;10324:3;10343:20;10361:1;10343:20;:::i;:::-;10338:25;;10377:20;10395:1;10377:20;:::i;:::-;10372:25;;10420:1;10417;10413:9;10406:16;;10441:3;10438:1;10435:10;10432:36;;;10448:18;;:::i;:::-;10432:36;10284:191;;;;:::o;10481:180::-;10529:77;10526:1;10519:88;10626:4;10623:1;10616:15;10650:4;10647:1;10640:15;10667:180;10715:77;10712:1;10705:88;10812:4;10809:1;10802:15;10836:4;10833:1;10826:15;10853:171;10892:3;10915:24;10933:5;10915:24;:::i;:::-;10906:33;;10961:4;10954:5;10951:15;10948:41;;10969:18;;:::i;:::-;10948:41;11016:1;11009:5;11005:13;10998:20;;10853:171;;;:::o;11030:182::-;11170:34;11166:1;11158:6;11154:14;11147:58;11030:182;:::o;11218:366::-;11360:3;11381:67;11445:2;11440:3;11381:67;:::i;:::-;11374:74;;11457:93;11546:3;11457:93;:::i;:::-;11575:2;11570:3;11566:12;11559:19;;11218:366;;;:::o;11590:419::-;11756:4;11794:2;11783:9;11779:18;11771:26;;11843:9;11837:4;11833:20;11829:1;11818:9;11814:17;11807:47;11871:131;11997:4;11871:131;:::i;:::-;11863:139;;11590:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "903200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "392",
								"DEFAULT_ADMIN_ROLE()": "397",
								"gameEnd(uint256,uint256)": "infinite",
								"gameLike(uint256,uint256)": "infinite",
								"gamePause(uint256,uint256)": "infinite",
								"gamePlay(uint256,uint256)": "infinite",
								"gameUnPause(uint256,uint256)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantAdminRole(address)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3211",
								"renounceRole(bytes32,address)": "infinite",
								"revokeAdminRole(address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 1761,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 281,
									"end": 1761,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 281,
									"end": 1761,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 765,
									"end": 882,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 765,
									"end": 882,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 765,
									"end": 882,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 765,
									"end": 882,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 765,
									"end": 882,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 765,
									"end": 882,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 765,
									"end": 882,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 765,
									"end": 882,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 765,
									"end": 882,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 765,
									"end": 882,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 765,
									"end": 882,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 789,
									"end": 831,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 818,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 800,
									"end": 818,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 820,
									"end": 830,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 789,
									"end": 799,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 789,
									"end": 799,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 789,
									"end": 799,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 789,
									"end": 831,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 789,
									"end": 831,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 789,
									"end": 831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 789,
									"end": 831,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 789,
									"end": 831,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 841,
									"end": 875,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 364,
									"end": 387,
									"name": "PUSH",
									"source": 0,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 864,
									"end": 874,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 841,
									"end": 851,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 841,
									"end": 851,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 841,
									"end": 851,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 841,
									"end": 875,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 841,
									"end": 875,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 841,
									"end": 875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 841,
									"end": 875,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 841,
									"end": 875,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 281,
									"end": 1761,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 281,
									"end": 1761,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6811,
									"end": 6921,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 6811,
									"end": 6921,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6889,
									"end": 6914,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 6900,
									"end": 6904,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 6913,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6889,
									"end": 6899,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 6889,
									"end": 6899,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6889,
									"end": 6899,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6889,
									"end": 6914,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6889,
									"end": 6914,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6889,
									"end": 6914,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6889,
									"end": 6914,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 6889,
									"end": 6914,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6811,
									"end": 6921,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6811,
									"end": 6921,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6811,
									"end": 6921,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 7552,
									"end": 7556,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7558,
									"end": 7565,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7544,
									"end": 7566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7614,
									"end": 7618,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7582,
									"end": 7588,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7589,
									"end": 7593,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7602,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7602,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7603,
									"end": 7610,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7664,
									"end": 7676,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7655,
									"end": 7662,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7649,
									"end": 7653,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 1,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7461,
									"end": 7694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3011,
									"end": 3015,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3025,
									"end": 3032,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 281,
									"end": 1761,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 281,
									"end": 1761,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 281,
									"end": 1761,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 1761,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 281,
									"end": 1761,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 1761,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 1761,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 281,
									"end": 1761,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 1761,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209942a5ab56136836e7849d764e111d51cd2ba8f3d5e9b0e39338b47e9ca50a7d64736f6c634300081a0033",
									".code": [
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "9A19C7B0"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "C02725F0"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "C02725F0"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "C634B78E"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "F58EE354"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "9A19C7B0"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "9B4C7CED"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "AAC2094A"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "66C77DF7"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "75B238FC"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 1761,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1392,
											"end": 1509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1392,
											"end": 1509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 327,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 327,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 327,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 327,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 327,
											"end": 387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 327,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 327,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 327,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 327,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 327,
											"end": 387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 327,
											"end": 387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 327,
											"end": 387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 327,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 327,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 327,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 327,
											"end": 387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 327,
											"end": 387,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 327,
											"end": 387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 387,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1018,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1018,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1516,
											"end": 1637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1516,
											"end": 1637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1272,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1272,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1150,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1150,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 888,
											"end": 1012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 888,
											"end": 1012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1643,
											"end": 1758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1643,
											"end": 1758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2789,
											"end": 2800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2765,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4899,
											"end": 4903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4886,
											"end": 4904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4927,
											"end": 4931,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4940,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4916,
											"end": 4941,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 6018,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 6018,
											"end": 6030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 5999,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6111,
											"end": 6118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 6093,
											"end": 6119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "F5704EA1FB9A06B3C4911041793AFD3003EAC5B15756EEF2987E75303F9F34C6"
										},
										{
											"begin": 1472,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1472,
											"end": 1502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1472,
											"end": 1502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1502,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 327,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 327,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 327,
											"end": 387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 327,
											"end": 387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3015,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 364,
											"end": 387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 1129,
											"end": 1136,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1106,
											"end": 1137,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1137,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1106,
											"end": 1137,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1611,
											"end": 1618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1598,
											"end": 1630,
											"name": "PUSH",
											"source": 0,
											"value": "96AF4CFE56C938154CF8986288DFEA262D8B1CAA075204F4679AE517BCEA70B9"
										},
										{
											"begin": 1598,
											"end": 1630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1598,
											"end": 1630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1598,
											"end": 1630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1598,
											"end": 1630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1598,
											"end": 1630,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1598,
											"end": 1630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1598,
											"end": 1630,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1369,
											"end": 1378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1367,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "PUSH",
											"source": 0,
											"value": "4C4660DB760944215F41E957066D756AD5FD0EED1B4640632322EB06F77B034D"
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1379,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "CCCCA5C37CD734D94742D46E24D5FCDC3E6EF8DD90DDA510DAE0E35530ADD4A2"
										},
										{
											"begin": 1229,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1259,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 963,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 364,
											"end": 387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 997,
											"end": 1004,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 975,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 975,
											"end": 1005,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 975,
											"end": 1005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 975,
											"end": 1005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 1012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5325,
											"end": 5329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5312,
											"end": 5330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5354,
											"end": 5358,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5360,
											"end": 5367,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 5342,
											"end": 5368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1751,
											"name": "PUSH",
											"source": 0,
											"value": "51DBB46F6F6D290AC0B2B3FB0B015E2065756F1B9EC382651FE728757BF362FE"
										},
										{
											"begin": 1722,
											"end": 1751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1722,
											"end": 1751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1722,
											"end": 1751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1751,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1751,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 1758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3417,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3417,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3400,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 7552,
											"end": 7556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7558,
											"end": 7565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 7544,
											"end": 7566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7593,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7603,
											"end": 7610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7664,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 7664,
											"end": 7676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7655,
											"end": 7662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7653,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7962,
											"end": 7969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 7948,
											"end": 7970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8018,
											"end": 8023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7993,
											"end": 7997,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8007,
											"end": 8014,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 8069,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 8069,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 8099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3806,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4009,
											"end": 4016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3989,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4116,
											"end": 4120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 4123,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4088,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4088,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3896,
											"end": 4148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3844,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2173,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2220,
											"end": 2224,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 311,
											"end": 313,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2192,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 1601,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1613,
											"end": 1632,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1649,
											"end": 1655,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1645,
											"end": 1655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1645,
											"end": 1659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1635,
											"end": 1660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 5,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1670,
											"end": 1676,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1670,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 5,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1695,
											"end": 1701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1695,
											"end": 1704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1737,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1737,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1757,
											"end": 1758,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1753,
											"end": 1754,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1753,
											"end": 1758,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1799,
											"name": "PUSH",
											"source": 5,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 1800,
											"end": 1805,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1791,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1786,
											"end": 1787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1779,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1837,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1760,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1865,
											"end": 1875,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1857,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1942,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 2296,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2321,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 2477,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2680,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2636,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2681,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 2777,
											"end": 2782,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 2759,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2693,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 2868,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2858,
											"end": 2893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 2909,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3014,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 3023,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2923,
											"end": 3062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3136,
											"end": 3142,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3150,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3195,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3190,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3172,
											"end": 3179,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3168,
											"end": 3191,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3164,
											"end": 3196,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3199,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3369,
											"end": 3378,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 3344,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3290,
											"end": 3407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3603,
											"end": 3619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3603,
											"end": 3619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3753,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 3631,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 3722,
											"end": 3727,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 3704,
											"end": 3728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3694,
											"end": 3729,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3684,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3684,
											"end": 3747,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3743,
											"end": 3744,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3740,
											"end": 3741,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3733,
											"end": 3745,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3684,
											"end": 3747,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3684,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3631,
											"end": 3753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3830,
											"end": 3850,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3821,
											"end": 3850,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3821,
											"end": 3850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3859,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3886,
											"end": 3891,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3859,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 3859,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3859,
											"end": 3892,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3859,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 3898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 4378,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3904,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3972,
											"end": 3978,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 3986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4031,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4017,
											"end": 4026,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4008,
											"end": 4015,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4027,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4000,
											"end": 4032,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4116,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3997,
											"end": 4116,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4035,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 4035,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 4035,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4035,
											"end": 4114,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 4035,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4116,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3997,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4156,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4180,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 4225,
											"end": 4232,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4222,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4205,
											"end": 4214,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4201,
											"end": 4223,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4180,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4180,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4180,
											"end": 4233,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 4180,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4233,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4233,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4126,
											"end": 4243,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4284,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4308,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 4353,
											"end": 4360,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4344,
											"end": 4350,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4333,
											"end": 4342,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4308,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4308,
											"end": 4361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4308,
											"end": 4361,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 4308,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4361,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4253,
											"end": 4371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 4378,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 4378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 4378,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 4378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 4378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 4378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4713,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 4384,
											"end": 4713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4449,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4494,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4480,
											"end": 4489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4471,
											"end": 4478,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4467,
											"end": 4490,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4463,
											"end": 4495,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4460,
											"end": 4579,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4460,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 4460,
											"end": 4579,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 4498,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 4498,
											"end": 4577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4577,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 4498,
											"end": 4577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4460,
											"end": 4579,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 4460,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4618,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4643,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4688,
											"end": 4695,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4679,
											"end": 4685,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4668,
											"end": 4677,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4664,
											"end": 4686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4643,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 4643,
											"end": 4696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4643,
											"end": 4696,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4643,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4696,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4633,
											"end": 4696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4589,
											"end": 4706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4713,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4713,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4888,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 4719,
											"end": 4888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4803,
											"end": 4814,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4837,
											"end": 4843,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4832,
											"end": 4835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4844,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4877,
											"end": 4881,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4872,
											"end": 4875,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4868,
											"end": 4882,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4882,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4888,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4888,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4894,
											"end": 5128,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 4894,
											"end": 5128,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5034,
											"end": 5068,
											"name": "PUSH",
											"source": 9,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 5030,
											"end": 5031,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5018,
											"end": 5032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5069,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5103,
											"end": 5120,
											"name": "PUSH",
											"source": 9,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 5098,
											"end": 5100,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5090,
											"end": 5096,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5086,
											"end": 5101,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5079,
											"end": 5121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4894,
											"end": 5128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4894,
											"end": 5128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5134,
											"end": 5500,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 5134,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5297,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5361,
											"end": 5363,
											"name": "PUSH",
											"source": 9,
											"value": "2F"
										},
										{
											"begin": 5356,
											"end": 5359,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5297,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 5297,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5297,
											"end": 5364,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5297,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5364,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5373,
											"end": 5466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 5462,
											"end": 5465,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5373,
											"end": 5466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 5373,
											"end": 5466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5373,
											"end": 5466,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 5373,
											"end": 5466,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5493,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5486,
											"end": 5489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5494,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5494,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5494,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5134,
											"end": 5500,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5134,
											"end": 5500,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5134,
											"end": 5500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5134,
											"end": 5500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5506,
											"end": 5925,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 5506,
											"end": 5925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5672,
											"end": 5676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5710,
											"end": 5712,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5699,
											"end": 5708,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5695,
											"end": 5713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5687,
											"end": 5713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5687,
											"end": 5713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5759,
											"end": 5768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 5757,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5769,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5745,
											"end": 5746,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5747,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5723,
											"end": 5770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5787,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 5913,
											"end": 5917,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5787,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 5787,
											"end": 5918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5787,
											"end": 5918,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 5787,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5779,
											"end": 5918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5779,
											"end": 5918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5506,
											"end": 5925,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5506,
											"end": 5925,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5506,
											"end": 5925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5506,
											"end": 5925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 6079,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 5931,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6033,
											"end": 6044,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6073,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6055,
											"end": 6073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6055,
											"end": 6073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 6079,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 6079,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 6079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 6079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 6079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6085,
											"end": 6258,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 6085,
											"end": 6258,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6250,
											"name": "PUSH",
											"source": 9,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 6221,
											"end": 6222,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6219,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6223,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6202,
											"end": 6251,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6085,
											"end": 6258,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6085,
											"end": 6258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6264,
											"end": 6666,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 6264,
											"end": 6666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6424,
											"end": 6427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6445,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 6527,
											"end": 6529,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 6522,
											"end": 6525,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6445,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 6445,
											"end": 6530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6445,
											"end": 6530,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 6445,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6530,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6539,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 6628,
											"end": 6631,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6539,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 6539,
											"end": 6632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6539,
											"end": 6632,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 6539,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6657,
											"end": 6659,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 6652,
											"end": 6655,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6648,
											"end": 6660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6641,
											"end": 6660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6264,
											"end": 6666,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6264,
											"end": 6666,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6264,
											"end": 6666,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6264,
											"end": 6666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6672,
											"end": 6771,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 6672,
											"end": 6771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6724,
											"end": 6730,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6758,
											"end": 6763,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 6764,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6742,
											"end": 6764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6742,
											"end": 6764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6672,
											"end": 6771,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6672,
											"end": 6771,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6672,
											"end": 6771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6672,
											"end": 6771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6777,
											"end": 6916,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 6777,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6861,
											"end": 6864,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6856,
											"end": 6859,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6850,
											"end": 6873,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6908,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6904,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6893,
											"end": 6896,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 6905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 6909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6777,
											"end": 6916,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6777,
											"end": 6916,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6777,
											"end": 6916,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6777,
											"end": 6916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6922,
											"end": 7312,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 6922,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7028,
											"end": 7031,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7056,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7056,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 7056,
											"end": 7095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7056,
											"end": 7095,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 7056,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7111,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 7193,
											"end": 7199,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7188,
											"end": 7191,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7111,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 7111,
											"end": 7200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7111,
											"end": 7200,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 7111,
											"end": 7200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7104,
											"end": 7200,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7104,
											"end": 7200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7209,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 7267,
											"end": 7273,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7262,
											"end": 7265,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7255,
											"end": 7259,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7253,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7244,
											"end": 7260,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7209,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 7209,
											"end": 7274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7209,
											"end": 7274,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 7209,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7305,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7294,
											"end": 7297,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7290,
											"end": 7306,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7283,
											"end": 7306,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7283,
											"end": 7306,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7032,
											"end": 7312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6922,
											"end": 7312,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6922,
											"end": 7312,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6922,
											"end": 7312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6922,
											"end": 7312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6922,
											"end": 7312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7318,
											"end": 7485,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 7318,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7458,
											"end": 7477,
											"name": "PUSH",
											"source": 9,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 7454,
											"end": 7455,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7446,
											"end": 7452,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7442,
											"end": 7456,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7435,
											"end": 7478,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7318,
											"end": 7485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7318,
											"end": 7485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 7893,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 7491,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7651,
											"end": 7654,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 7754,
											"end": 7756,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7749,
											"end": 7752,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7672,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 7672,
											"end": 7757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7672,
											"end": 7757,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 7672,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7757,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7757,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 7855,
											"end": 7858,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 7766,
											"end": 7859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7859,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 7766,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 7886,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7879,
											"end": 7882,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7887,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7868,
											"end": 7887,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7868,
											"end": 7887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 7893,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 7893,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 7893,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 7893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7899,
											"end": 8866,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 7899,
											"end": 8866,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8284,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8303,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 8447,
											"end": 8450,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8303,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 8303,
											"end": 8451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8303,
											"end": 8451,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 8303,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8296,
											"end": 8451,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8296,
											"end": 8451,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8468,
											"end": 8563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 8559,
											"end": 8562,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8550,
											"end": 8556,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8468,
											"end": 8563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 8468,
											"end": 8563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8468,
											"end": 8563,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 8468,
											"end": 8563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8563,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 8724,
											"end": 8727,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 8580,
											"end": 8728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8728,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 8580,
											"end": 8728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8573,
											"end": 8728,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8573,
											"end": 8728,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8745,
											"end": 8840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 8836,
											"end": 8839,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8827,
											"end": 8833,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8745,
											"end": 8840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 8745,
											"end": 8840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8745,
											"end": 8840,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 8745,
											"end": 8840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8738,
											"end": 8840,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8738,
											"end": 8840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8857,
											"end": 8860,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8850,
											"end": 8860,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8850,
											"end": 8860,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7899,
											"end": 8866,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7899,
											"end": 8866,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7899,
											"end": 8866,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7899,
											"end": 8866,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7899,
											"end": 8866,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7899,
											"end": 8866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8872,
											"end": 8974,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 8872,
											"end": 8974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8913,
											"end": 8919,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8964,
											"end": 8966,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8960,
											"end": 8967,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 8955,
											"end": 8957,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8948,
											"end": 8953,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8944,
											"end": 8958,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8940,
											"end": 8968,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8930,
											"end": 8968,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8930,
											"end": 8968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8872,
											"end": 8974,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8872,
											"end": 8974,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8872,
											"end": 8974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8872,
											"end": 8974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 9357,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 8980,
											"end": 9357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9068,
											"end": 9071,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9096,
											"end": 9135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 9129,
											"end": 9134,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9096,
											"end": 9135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 9096,
											"end": 9135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9096,
											"end": 9135,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 9096,
											"end": 9135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9151,
											"end": 9222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 9215,
											"end": 9221,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9151,
											"end": 9222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 9151,
											"end": 9222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9151,
											"end": 9222,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 9151,
											"end": 9222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9222,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 9289,
											"end": 9295,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9284,
											"end": 9287,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9277,
											"end": 9281,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9270,
											"end": 9275,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9266,
											"end": 9282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 9231,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9296,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 9231,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9321,
											"end": 9350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 9343,
											"end": 9349,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9321,
											"end": 9350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 9321,
											"end": 9350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9321,
											"end": 9350,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 9321,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9316,
											"end": 9319,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9312,
											"end": 9351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9305,
											"end": 9351,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9305,
											"end": 9351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9072,
											"end": 9357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 9357,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 9357,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 9357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 9357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 9357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9363,
											"end": 9676,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 9363,
											"end": 9676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9476,
											"end": 9480,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9514,
											"end": 9516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9503,
											"end": 9512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9499,
											"end": 9517,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9491,
											"end": 9517,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9491,
											"end": 9517,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9563,
											"end": 9572,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9557,
											"end": 9561,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9553,
											"end": 9573,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9549,
											"end": 9550,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9538,
											"end": 9547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9534,
											"end": 9551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9527,
											"end": 9574,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9591,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 9664,
											"end": 9668,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9655,
											"end": 9661,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9591,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 9591,
											"end": 9669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9591,
											"end": 9669,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 9591,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9583,
											"end": 9669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9583,
											"end": 9669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9363,
											"end": 9676,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9363,
											"end": 9676,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9363,
											"end": 9676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9363,
											"end": 9676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9363,
											"end": 9676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9682,
											"end": 9862,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 9682,
											"end": 9862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9730,
											"end": 9807,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9727,
											"end": 9728,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9827,
											"end": 9831,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 9824,
											"end": 9825,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9817,
											"end": 9832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9851,
											"end": 9855,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9848,
											"end": 9849,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9841,
											"end": 9856,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 10278,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 9868,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9908,
											"end": 9915,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9931,
											"end": 9951,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 9949,
											"end": 9950,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 9951,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 9931,
											"end": 9951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 9951,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 9931,
											"end": 9951,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9926,
											"end": 9951,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9926,
											"end": 9951,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9965,
											"end": 9985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9965,
											"end": 9985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 9965,
											"end": 9985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9965,
											"end": 9985,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 9965,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9960,
											"end": 9985,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9960,
											"end": 9985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10020,
											"end": 10021,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10017,
											"end": 10018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10013,
											"end": 10022,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10042,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 10060,
											"end": 10071,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10042,
											"end": 10072,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 10042,
											"end": 10072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10042,
											"end": 10072,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 10042,
											"end": 10072,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10031,
											"end": 10072,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10031,
											"end": 10072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10221,
											"end": 10222,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10212,
											"end": 10219,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10208,
											"end": 10223,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10205,
											"end": 10206,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10202,
											"end": 10224,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 10182,
											"end": 10183,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10175,
											"end": 10184,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10155,
											"end": 10238,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 10132,
											"end": 10271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 10132,
											"end": 10271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10251,
											"end": 10269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 10251,
											"end": 10269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 10251,
											"end": 10269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10251,
											"end": 10269,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 10251,
											"end": 10269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10132,
											"end": 10271,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 10132,
											"end": 10271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 10278,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 10278,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 10278,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 10278,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 10278,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9868,
											"end": 10278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10284,
											"end": 10475,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 10284,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10324,
											"end": 10327,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10343,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 10361,
											"end": 10362,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10343,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 10343,
											"end": 10363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10343,
											"end": 10363,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 10343,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10338,
											"end": 10363,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10338,
											"end": 10363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10377,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 10395,
											"end": 10396,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10377,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 10377,
											"end": 10397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10377,
											"end": 10397,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 10377,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10372,
											"end": 10397,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10372,
											"end": 10397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10421,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10417,
											"end": 10418,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10413,
											"end": 10422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10406,
											"end": 10422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10406,
											"end": 10422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10441,
											"end": 10444,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10438,
											"end": 10439,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10435,
											"end": 10445,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10432,
											"end": 10468,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10432,
											"end": 10468,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 10432,
											"end": 10468,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10448,
											"end": 10466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 10448,
											"end": 10466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 10448,
											"end": 10466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10448,
											"end": 10466,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 10448,
											"end": 10466,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10432,
											"end": 10468,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 10432,
											"end": 10468,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10284,
											"end": 10475,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10284,
											"end": 10475,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10284,
											"end": 10475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10284,
											"end": 10475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10284,
											"end": 10475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10481,
											"end": 10661,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 10481,
											"end": 10661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10529,
											"end": 10606,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10526,
											"end": 10527,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10519,
											"end": 10607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10626,
											"end": 10630,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 10623,
											"end": 10624,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10616,
											"end": 10631,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10650,
											"end": 10654,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10647,
											"end": 10648,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10640,
											"end": 10655,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10667,
											"end": 10847,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 10667,
											"end": 10847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10715,
											"end": 10792,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10712,
											"end": 10713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 10793,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10812,
											"end": 10816,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 10809,
											"end": 10810,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10802,
											"end": 10817,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10836,
											"end": 10840,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10833,
											"end": 10834,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10826,
											"end": 10841,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10853,
											"end": 11024,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 10853,
											"end": 11024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10892,
											"end": 10895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10915,
											"end": 10939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 10933,
											"end": 10938,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10915,
											"end": 10939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 10915,
											"end": 10939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10915,
											"end": 10939,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 10915,
											"end": 10939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10906,
											"end": 10939,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10906,
											"end": 10939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10961,
											"end": 10965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10954,
											"end": 10959,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10951,
											"end": 10966,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10948,
											"end": 10989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 10948,
											"end": 10989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10969,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 10969,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 10969,
											"end": 10987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10969,
											"end": 10987,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 10969,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10948,
											"end": 10989,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 10948,
											"end": 10989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11016,
											"end": 11017,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11009,
											"end": 11014,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11005,
											"end": 11018,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11018,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10853,
											"end": 11024,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10853,
											"end": 11024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10853,
											"end": 11024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10853,
											"end": 11024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11212,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 11030,
											"end": 11212,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11170,
											"end": 11204,
											"name": "PUSH",
											"source": 9,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 11166,
											"end": 11167,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11158,
											"end": 11164,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11154,
											"end": 11168,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11147,
											"end": 11205,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11212,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11218,
											"end": 11584,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 11218,
											"end": 11584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11360,
											"end": 11363,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11381,
											"end": 11448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 11445,
											"end": 11447,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11440,
											"end": 11443,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11381,
											"end": 11448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 11381,
											"end": 11448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11381,
											"end": 11448,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 11381,
											"end": 11448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11374,
											"end": 11448,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11374,
											"end": 11448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11457,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 11546,
											"end": 11549,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11457,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 11457,
											"end": 11550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11457,
											"end": 11550,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 11457,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11575,
											"end": 11577,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11570,
											"end": 11573,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11566,
											"end": 11578,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11559,
											"end": 11578,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11559,
											"end": 11578,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11218,
											"end": 11584,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11218,
											"end": 11584,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11218,
											"end": 11584,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11218,
											"end": 11584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11590,
											"end": 12009,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 11590,
											"end": 12009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11756,
											"end": 11760,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11794,
											"end": 11796,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11783,
											"end": 11792,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11779,
											"end": 11797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11771,
											"end": 11797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11771,
											"end": 11797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11843,
											"end": 11852,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11837,
											"end": 11841,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 11853,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11829,
											"end": 11830,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11818,
											"end": 11827,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11814,
											"end": 11831,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11807,
											"end": 11854,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11871,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 11997,
											"end": 12001,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11871,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 11871,
											"end": 12002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11871,
											"end": 12002,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 11871,
											"end": 12002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11863,
											"end": 12002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11863,
											"end": 12002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11590,
											"end": 12009,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11590,
											"end": 12009,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11590,
											"end": 12009,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11590,
											"end": 12009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"contracts/v2/TikTrixAction.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"gameEnd(uint256,uint256)": "aac2094a",
							"gameLike(uint256,uint256)": "f58ee354",
							"gamePause(uint256,uint256)": "66c77df7",
							"gamePlay(uint256,uint256)": "c02725f0",
							"gameUnPause(uint256,uint256)": "9b4c7ced",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantAdminRole(address)": "c634b78e",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeAdminRole(address)": "9a19c7b0",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"memberSeq\",\"type\":\"uint256\"}],\"name\":\"GameEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"memberSeq\",\"type\":\"uint256\"}],\"name\":\"GameLiked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"memberSeq\",\"type\":\"uint256\"}],\"name\":\"GamePaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"memberSeq\",\"type\":\"uint256\"}],\"name\":\"GamePlayed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"memberSeq\",\"type\":\"uint256\"}],\"name\":\"GameUnPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memberSeq\",\"type\":\"uint256\"}],\"name\":\"gameEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memberSeq\",\"type\":\"uint256\"}],\"name\":\"gameLike\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memberSeq\",\"type\":\"uint256\"}],\"name\":\"gamePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memberSeq\",\"type\":\"uint256\"}],\"name\":\"gamePlay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameSeq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memberSeq\",\"type\":\"uint256\"}],\"name\":\"gameUnPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/v2/TikTrixAction.sol\":\"TikTrixAction\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/v2/TikTrixAction.sol\":{\"keccak256\":\"0xc69681eb4d71d0335c1f6dac563ad68821d48a44d1f7c3afa447902d0eaa6e65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://129c77ef740753d4f98a8747b91da0eb556ff6605d580648b3ec45bba79dad36\",\"dweb:/ipfs/QmZaAaPoo5oy5B2LHHDbTp3ndZkxMNJLGrQTH8shFm5g5z\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 175,
								"contract": "contracts/v2/TikTrixAction.sol:TikTrixAction",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)170_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)170_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)170_storage"
							},
							"t_struct(RoleData)170_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 167,
										"contract": "contracts/v2/TikTrixAction.sol:TikTrixAction",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 169,
										"contract": "contracts/v2/TikTrixAction.sol:TikTrixAction",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 175,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)170_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)170_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)170_storage"
							},
							"t_struct(RoleData)170_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 167,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 169,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206ae75260a3490092dfde8cd4040527636e14d162e6e37a9a613d66a4d124fad664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206ae75260a3490092dfde8cd4040527636e14d162e6e37a9a613d66a4d124fad664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xE75260A3490092DFDE8CD4 DIV SDIV 0x27 PUSH4 0x6E14D162 0xE6 0xE3 PUSH27 0x9A613D66A4D124FAD664736F6C634300081A003300000000000000 ",
							"sourceMap": "188:2065:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206ae75260a3490092dfde8cd4040527636e14d162e6e37a9a613d66a4d124fad664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xE75260A3490092DFDE8CD4 DIV SDIV 0x27 PUSH4 0x6E14D162 0xE6 0xE3 PUSH27 0x9A613D66A4D124FAD664736F6C634300081A003300000000000000 ",
							"sourceMap": "188:2065:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206ae75260a3490092dfde8cd4040527636e14d162e6e37a9a613d66a4d124fad664736f6c634300081a0033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/v2/TikTrixAction.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b21415a99b156e7fe2fa8a3ac50ded6766b7e152a30e3cac066bc4a73f59cd5c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b21415a99b156e7fe2fa8a3ac50ded6766b7e152a30e3cac066bc4a73f59cd5c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 EQ ISZERO 0xA9 SWAP12 ISZERO PUSH15 0x7FE2FA8A3AC50DED6766B7E152A30E EXTCODECOPY 0xAC MOD PUSH12 0xC4A73F59CD5C64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "202:12302:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b21415a99b156e7fe2fa8a3ac50ded6766b7e152a30e3cac066bc4a73f59cd5c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 EQ ISZERO 0xA9 SWAP12 ISZERO PUSH15 0x7FE2FA8A3AC50DED6766B7E152A30E EXTCODECOPY 0xAC MOD PUSH12 0xC4A73F59CD5C64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "202:12302:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b21415a99b156e7fe2fa8a3ac50ded6766b7e152a30e3cac066bc4a73f59cd5c64736f6c634300081a0033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"contracts/v2/TikTrixAction.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/v2/TikTrixAction.sol": {
				"ast": {
					"absolutePath": "contracts/v2/TikTrixAction.sol",
					"exportedSymbols": {
						"AccessControl": [
							466
						],
						"Context": [
							639
						],
						"ERC165": [
							838
						],
						"IAccessControl": [
							539
						],
						"IERC165": [
							850
						],
						"IERC20": [
							617
						],
						"Math": [
							1715
						],
						"Strings": [
							814
						],
						"TikTrixAction": [
							150
						]
					},
					"id": 151,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 151,
							"sourceUnit": 618,
							"src": "58:109:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 151,
							"sourceUnit": 467,
							"src": "168:111:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "AccessControl",
										"nameLocations": [
											"307:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 466,
										"src": "307:13:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "307:13:0"
								}
							],
							"canonicalName": "TikTrixAction",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 150,
							"linearizedBaseContracts": [
								150,
								466,
								838,
								850,
								539,
								639
							],
							"name": "TikTrixAction",
							"nameLocation": "290:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 10,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "351:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "327:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 6,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "327:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 8,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "374:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 7,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "364:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "364:23:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "cccca5c37cd734d94742d46e24d5fcdc3e6ef8dd90dda510dae0e35530add4a2",
									"id": 16,
									"name": "GamePlayed",
									"nameLocation": "400:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "427:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "411:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "memberSeq",
												"nameLocation": "452:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "436:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:52:0"
									},
									"src": "394:69:0"
								},
								{
									"anonymous": false,
									"eventSelector": "4c4660db760944215f41e957066d756ad5fd0eed1b4640632322eb06f77b034d",
									"id": 22,
									"name": "GameEnded",
									"nameLocation": "474:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "500:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "484:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "memberSeq",
												"nameLocation": "525:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "509:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:52:0"
									},
									"src": "468:68:0"
								},
								{
									"anonymous": false,
									"eventSelector": "f5704ea1fb9a06b3c4911041793afd3003eac5b15756eef2987e75303f9f34c6",
									"id": 28,
									"name": "GamePaused",
									"nameLocation": "547:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"indexed": true,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "574:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "558:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "memberSeq",
												"nameLocation": "599:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "583:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "557:52:0"
									},
									"src": "541:69:0"
								},
								{
									"anonymous": false,
									"eventSelector": "96af4cfe56c938154cf8986288dfea262d8b1caa075204f4679ae517bcea70b9",
									"id": 34,
									"name": "GameUnPaused",
									"nameLocation": "621:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "650:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "634:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "memberSeq",
												"nameLocation": "675:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "659:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:52:0"
									},
									"src": "615:71:0"
								},
								{
									"anonymous": false,
									"eventSelector": "51dbb46f6f6d290ac0b2b3fb0b015e2065756f1b9ec382651fe728757bf362fe",
									"id": 40,
									"name": "GameLiked",
									"nameLocation": "697:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "723:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "707:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "memberSeq",
												"nameLocation": "748:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "732:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "732:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "706:52:0"
									},
									"src": "691:68:0"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "779:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 44,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "800:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 45,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "820:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "824:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "820:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 43,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "789:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "789:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "789:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "852:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 51,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "864:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "868:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "864:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "841:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "841:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "841:34:0"
											}
										]
									},
									"id": 56,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:2:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:0:0"
									},
									"scope": 150,
									"src": "765:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "965:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 65,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "985:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 66,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "997:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 64,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "975:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "975:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "975:30:0"
											}
										]
									},
									"functionSelector": "c634b78e",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 61,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 178,
													"src": "945:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 62,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 60,
												"name": "onlyRole",
												"nameLocations": [
													"936:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 189,
												"src": "936:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "936:28:0"
										}
									],
									"name": "grantAdminRole",
									"nameLocation": "897:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "920:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "912:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "911:17:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "965:0:0"
									},
									"scope": 150,
									"src": "888:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1096:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "1117:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 80,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "1129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "1106:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1106:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "1106:31:0"
											}
										]
									},
									"functionSelector": "9a19c7b0",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 75,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 178,
													"src": "1076:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 76,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 74,
												"name": "onlyRole",
												"nameLocations": [
													"1067:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 189,
												"src": "1067:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1067:28:0"
										}
									],
									"name": "revokeAdminRole",
									"nameLocation": "1027:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1051:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1043:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:17:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1096:0:0"
									},
									"scope": 150,
									"src": "1018:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "1213:53:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 92,
															"name": "gameSeq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1240:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 93,
															"name": "memberSeq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1249:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 91,
														"name": "GamePlayed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1229:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1229:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 95,
												"nodeType": "EmitStatement",
												"src": "1224:35:0"
											}
										]
									},
									"functionSelector": "c02725f0",
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gamePlay",
									"nameLocation": "1159:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "1176:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1168:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "memberSeq",
												"nameLocation": "1193:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1185:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1167:36:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1213:0:0"
									},
									"scope": 150,
									"src": "1150:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "1334:52:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 105,
															"name": "gameSeq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "1360:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 106,
															"name": "memberSeq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1369:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 104,
														"name": "GameEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1350:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "EmitStatement",
												"src": "1345:34:0"
											}
										]
									},
									"functionSelector": "aac2094a",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gameEnd",
									"nameLocation": "1281:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "1297:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1289:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "memberSeq",
												"nameLocation": "1314:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1306:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:36:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1334:0:0"
									},
									"scope": 150,
									"src": "1272:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1456:53:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 118,
															"name": "gameSeq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "1483:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 119,
															"name": "memberSeq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "1492:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 117,
														"name": "GamePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1472:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1472:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "EmitStatement",
												"src": "1467:35:0"
											}
										]
									},
									"functionSelector": "66c77df7",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gamePause",
									"nameLocation": "1401:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "1419:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1411:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "memberSeq",
												"nameLocation": "1436:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1428:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1410:36:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1456:0:0"
									},
									"scope": 150,
									"src": "1392:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "1582:55:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 131,
															"name": "gameSeq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1611:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 132,
															"name": "memberSeq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "1620:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 130,
														"name": "GameUnPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1598:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1598:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "EmitStatement",
												"src": "1593:37:0"
											}
										]
									},
									"functionSelector": "9b4c7ced",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gameUnPause",
									"nameLocation": "1525:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "1545:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "1537:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "memberSeq",
												"nameLocation": "1562:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "1554:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1536:36:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1582:0:0"
									},
									"scope": 150,
									"src": "1516:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "1706:52:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 144,
															"name": "gameSeq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1732:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 145,
															"name": "memberSeq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "1741:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 143,
														"name": "GameLiked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1722:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1722:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "EmitStatement",
												"src": "1717:34:0"
											}
										]
									},
									"functionSelector": "f58ee354",
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gameLike",
									"nameLocation": "1652:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "gameSeq",
												"nameLocation": "1669:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1661:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "memberSeq",
												"nameLocation": "1686:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1678:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:36:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1706:0:0"
									},
									"scope": 150,
									"src": "1643:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 151,
							"src": "281:1480:0",
							"usedErrors": [],
							"usedEvents": [
								16,
								22,
								28,
								34,
								40,
								478,
								487,
								496
							]
						}
					],
					"src": "32:1730:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							466
						],
						"Context": [
							639
						],
						"ERC165": [
							838
						],
						"IAccessControl": [
							539
						],
						"IERC165": [
							850
						],
						"Math": [
							1715
						],
						"Strings": [
							814
						]
					},
					"id": 467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 152,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 467,
							"sourceUnit": 540,
							"src": "133:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 154,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 467,
							"sourceUnit": 640,
							"src": "164:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 467,
							"sourceUnit": 815,
							"src": "195:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 156,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 467,
							"sourceUnit": 839,
							"src": "226:43:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 158,
										"name": "Context",
										"nameLocations": [
											"1841:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 639,
										"src": "1841:7:1"
									},
									"id": 159,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:1"
								},
								{
									"baseName": {
										"id": 160,
										"name": "IAccessControl",
										"nameLocations": [
											"1850:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 539,
										"src": "1850:14:1"
									},
									"id": 161,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:1"
								},
								{
									"baseName": {
										"id": 162,
										"name": "ERC165",
										"nameLocations": [
											"1866:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 838,
										"src": "1866:6:1"
									},
									"id": 163,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:1"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 157,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 466,
							"linearizedBaseContracts": [
								466,
								838,
								850,
								539,
								639
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 170,
									"members": [
										{
											"constant": false,
											"id": 167,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 170,
											"src": "1905:32:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 166,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 169,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 170,
											"src": "1947:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 168,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:1",
									"nodeType": "StructDefinition",
									"scope": 466,
									"src": "1879:92:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 175,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 466,
									"src": "1977:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$170_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 174,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 171,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$170_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 173,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 172,
												"name": "RoleData",
												"nameLocations": [
													"1996:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 170,
												"src": "1996:8:1"
											},
											"referencedDeclaration": 170,
											"src": "1996:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$170_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 178,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 466,
									"src": "2027:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 176,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 177,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "2495:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2516:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 183,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															243,
															282
														],
														"referencedDeclaration": 243,
														"src": "2505:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:1"
											},
											{
												"id": 187,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:1"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 189,
									"name": "onlyRole",
									"nameLocation": "2472:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2481:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 180,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:1"
									},
									"src": "2463:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										837
									],
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "2697:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 198,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "2714:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 200,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "2734:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$539_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$539_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 199,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$539",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2750:11:1",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 206,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "2789:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 204,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$466_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2771:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 837,
															"src": "2765:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 197,
												"id": 209,
												"nodeType": "Return",
												"src": "2707:94:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 194,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:1"
									},
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "2633:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 191,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "2691:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 195,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:1"
									},
									"scope": 466,
									"src": "2606:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										506
									],
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "2987:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 222,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "3004:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$170_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 224,
															"indexExpression": {
																"id": 223,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "3011:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$170_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3017:7:1",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 167,
														"src": "3004:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 227,
													"indexExpression": {
														"id": 226,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "3025:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 221,
												"id": 228,
												"nodeType": "Return",
												"src": "2997:36:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 218,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:1"
									},
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2912:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 213,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2926:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2981:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 219,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:1"
									},
									"scope": 466,
									"src": "2895:145:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "3390:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 237,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "3411:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 238,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "3417:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 236,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															243,
															282
														],
														"referencedDeclaration": 282,
														"src": "3400:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:1"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:1",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "3354:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 232,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:1"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:1"
									},
									"scope": 466,
									"src": "3334:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "3791:406:1",
										"statements": [
											{
												"condition": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 252,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "3814:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 253,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "3820:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 251,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "3806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 280,
												"nodeType": "IfStatement",
												"src": "3801:390:1",
												"trueBody": {
													"id": 279,
													"nodeType": "Block",
													"src": "3830:361:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 264,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 248,
																								"src": "4009:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 262,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 814,
																								"src": "3989:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$814_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 263,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3997:11:1",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 813,
																							"src": "3989:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 265,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:28:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 266,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4043:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 271,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 246,
																										"src": "4116:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 270,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4108:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 269,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4108:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 272,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4108:13:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 273,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4123:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 267,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 814,
																								"src": "4088:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$814_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 268,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4096:11:1",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 793,
																							"src": "4088:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 274,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4088:38:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 259,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 260,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "3900:12:1",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 275,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:252:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 257,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:298:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 256,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:336:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "3844:336:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:1",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3738:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 245,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3752:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:1"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:1"
									},
									"scope": 466,
									"src": "3718:479:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										514
									],
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "4461:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 291,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "4478:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$170_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 293,
														"indexExpression": {
															"id": 292,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "4485:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4478:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$170_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4491:9:1",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 169,
													"src": "4478:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 290,
												"id": 295,
												"nodeType": "Return",
												"src": "4471:29:1"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "4203:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4387:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 287,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4434:8:1"
									},
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4408:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4400:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 284,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4400:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4399:14:1"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4452:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 288,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4452:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4451:9:1"
									},
									"scope": 466,
									"src": "4378:129:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										522
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "4906:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 312,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "4927:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 313,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "4933:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 311,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "4916:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4916:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "4916:25:1"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "4513:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 307,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "4899:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 306,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "4886:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4886:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 309,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 305,
												"name": "onlyRole",
												"nameLocations": [
													"4877:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 189,
												"src": "4877:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4877:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4812:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 304,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4868:8:1"
									},
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4830:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "4822:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4844:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "4836:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4821:31:1"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4906:0:1"
									},
									"scope": 466,
									"src": "4803:145:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										530
									],
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "5332:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 332,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "5354:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 333,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "5360:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 331,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "5342:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "5342:26:1"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "4954:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 327,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "5325:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 326,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "5312:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5312:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 329,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 325,
												"name": "onlyRole",
												"nameLocations": [
													"5303:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 189,
												"src": "5303:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5303:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5237:10:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 324,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5294:8:1"
									},
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5256:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5248:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5248:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5247:31:1"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5332:0:1"
									},
									"scope": 466,
									"src": "5228:147:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										538
									],
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "5989:137:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 347,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "6007:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 348,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "6018:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6018:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6007:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6032:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5999:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5999:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "5999:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 355,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "6105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 356,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "6111:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 354,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "6093:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6093:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "6093:26:1"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "5381:526:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5921:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 344,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5980:8:1"
									},
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5942:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "5934:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 339,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5956:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "5948:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5948:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5933:31:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5989:0:1"
									},
									"scope": 466,
									"src": "5912:214:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "6879:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 369,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "6900:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 370,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6906:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 368,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "6889:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6889:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "6889:25:1"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "6132:674:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6820:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6839:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6831:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 362,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6831:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6853:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6845:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6845:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6830:31:1"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6879:0:1"
									},
									"scope": 466,
									"src": "6811:110:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "7119:174:1",
										"statements": [
											{
												"assignments": [
													383
												],
												"declarations": [
													{
														"constant": false,
														"id": 383,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7137:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "7129:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 382,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7129:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 387,
												"initialValue": {
													"arguments": [
														{
															"id": 385,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "7170:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 384,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "7157:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7157:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7129:46:1"
											},
											{
												"expression": {
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 388,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "7185:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$170_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 390,
															"indexExpression": {
																"id": 389,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "7192:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7185:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$170_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7198:9:1",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 169,
														"src": "7185:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 392,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "7210:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7185:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "7185:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 396,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "7251:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 397,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "7257:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 398,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "7276:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 395,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "7234:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7234:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "EmitStatement",
												"src": "7229:57:1"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "6927:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7055:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7077:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "7069:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 376,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7091:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "7083:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 378,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7083:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7068:33:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7119:0:1"
									},
									"scope": 466,
									"src": "7046:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "7529:165:1",
										"statements": [
											{
												"condition": {
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7543:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 411,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "7552:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 412,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "7558:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 410,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7544:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7544:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 432,
												"nodeType": "IfStatement",
												"src": "7539:149:1",
												"trueBody": {
													"id": 431,
													"nodeType": "Block",
													"src": "7568:120:1",
													"statements": [
														{
															"expression": {
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 415,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 175,
																				"src": "7582:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$170_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 417,
																			"indexExpression": {
																				"id": 416,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 405,
																				"src": "7589:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7582:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$170_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 418,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7595:7:1",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 167,
																		"src": "7582:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 420,
																	"indexExpression": {
																		"id": 419,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "7603:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7582:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7614:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7582:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 423,
															"nodeType": "ExpressionStatement",
															"src": "7582:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 425,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "7649:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 426,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "7655:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 427,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 629,
																			"src": "7664:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7664:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 424,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "7637:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7637:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 430,
															"nodeType": "EmitStatement",
															"src": "7632:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "7299:157:1",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7470:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7489:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "7481:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 404,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7481:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7503:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "7495:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7495:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7480:31:1"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7529:0:1"
									},
									"scope": 466,
									"src": "7461:233:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "7934:165:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 443,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "7956:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 444,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "7962:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 442,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "7948:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7948:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 463,
												"nodeType": "IfStatement",
												"src": "7944:149:1",
												"trueBody": {
													"id": 462,
													"nodeType": "Block",
													"src": "7972:121:1",
													"statements": [
														{
															"expression": {
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 446,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 175,
																				"src": "7986:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$170_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 448,
																			"indexExpression": {
																				"id": 447,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "7993:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7986:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$170_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 449,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7999:7:1",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 167,
																		"src": "7986:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 451,
																	"indexExpression": {
																		"id": 450,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "8007:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7986:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8018:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7986:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 454,
															"nodeType": "ExpressionStatement",
															"src": "7986:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 456,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "8054:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 457,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "8060:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 458,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 629,
																			"src": "8069:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8069:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 455,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "8042:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8042:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 461,
															"nodeType": "EmitStatement",
															"src": "8037:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "7700:160:1",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7874:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "7886:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 436,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7908:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "7900:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7900:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7885:31:1"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7934:0:1"
									},
									"scope": 466,
									"src": "7865:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 467,
							"src": "1806:6295:1",
							"usedErrors": [],
							"usedEvents": [
								478,
								487,
								496
							]
						}
					],
					"src": "108:7994:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							539
						]
					},
					"id": 540,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:2",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 539,
							"linearizedBaseContracts": [
								539
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 478,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "560:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 471,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "582:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 473,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "617:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 475,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:2"
									},
									"src": "537:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 487,
									"name": "RoleGranted",
									"nameLocation": "876:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "888:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 480,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "910:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "935:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:2"
									},
									"src": "870:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 496,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "1263:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 489,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "1285:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "1310:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:2"
									},
									"src": "1245:89:2"
								},
								{
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1438:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 498,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1452:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:2"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1492:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:2"
									},
									"scope": 539,
									"src": "1421:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "1715:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 508,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:2"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "1752:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 511,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:2"
									},
									"scope": 539,
									"src": "1693:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 522,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2030:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 516,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2044:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:2"
									},
									"scope": 539,
									"src": "2011:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2324:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 524,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2338:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:2"
									},
									"scope": 539,
									"src": "2304:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2877:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 532,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2891:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:2"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:2"
									},
									"scope": 539,
									"src": "2855:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 540,
							"src": "209:2710:2",
							"usedErrors": [],
							"usedEvents": [
								478,
								487,
								496
							]
						}
					],
					"src": "94:2826:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							617
						]
					},
					"id": 618,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 541,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 542,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 617,
							"linearizedBaseContracts": [
								617
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 551,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 560,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 617,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 617,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 581,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 617,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 617,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 601,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 617,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 616,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2677:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2699:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2719:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:3"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "2758:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 613,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:3"
									},
									"scope": 617,
									"src": "2646:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 618,
							"src": "202:2564:3",
							"usedErrors": [],
							"usedEvents": [
								551,
								560
							]
						}
					],
					"src": "106:2661:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							639
						]
					},
					"id": 640,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 619,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 620,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 639,
							"linearizedBaseContracts": [
								639
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 625,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 624,
												"id": 627,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 639,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 634,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 633,
												"id": 636,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 639,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 640,
							"src": "608:235:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1715
						],
						"Strings": [
							814
						]
					},
					"id": 815,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 641,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 642,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 815,
							"sourceUnit": 1716,
							"src": "126:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 643,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 814,
							"linearizedBaseContracts": [
								814
							],
							"name": "Strings",
							"nameLocation": "196:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 646,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 814,
									"src": "210:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 644,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 645,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 649,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 814,
									"src": "270:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 647,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 648,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "486:625:5",
										"statements": [
											{
												"id": 695,
												"nodeType": "UncheckedBlock",
												"src": "496:609:5",
												"statements": [
													{
														"assignments": [
															658
														],
														"declarations": [
															{
																"constant": false,
																"id": 658,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 695,
																"src": "520:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 657,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 665,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 661,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 652,
																		"src": "548:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 659,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1715,
																		"src": "537:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1715_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:5",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1552,
																	"src": "537:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:5"
													},
													{
														"assignments": [
															667
														],
														"declarations": [
															{
																"constant": false,
																"id": 667,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 695,
																"src": "572:20:5",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 666,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 672,
														"initialValue": {
															"arguments": [
																{
																	"id": 670,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "606:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 668,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:5"
													},
													{
														"assignments": [
															674
														],
														"declarations": [
															{
																"constant": false,
																"id": 674,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:5",
																"nodeType": "VariableDeclaration",
																"scope": 695,
																"src": "627:11:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 673,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 675,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:5"
													},
													{
														"AST": {
															"nativeSrc": "708:67:5",
															"nodeType": "YulBlock",
															"src": "708:67:5",
															"statements": [
																{
																	"nativeSrc": "726:35:5",
																	"nodeType": "YulAssignment",
																	"src": "726:35:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "737:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "749:2:5",
																						"nodeType": "YulLiteral",
																						"src": "749:2:5",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "753:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "745:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:5"
																				},
																				"nativeSrc": "745:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "733:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:5"
																		},
																		"nativeSrc": "733:28:5",
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:5"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "726:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:5"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 667,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:5",
																"valueSize": 1
															},
															{
																"declaration": 658,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:5",
																"valueSize": 1
															},
															{
																"declaration": 674,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:5",
																"valueSize": 1
															}
														],
														"id": 676,
														"nodeType": "InlineAssembly",
														"src": "699:76:5"
													},
													{
														"body": {
															"id": 691,
															"nodeType": "Block",
															"src": "801:267:5",
															"statements": [
																{
																	"expression": {
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:5",
																		"subExpression": {
																			"id": 678,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 674,
																			"src": "819:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 680,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:5"
																},
																{
																	"AST": {
																		"nativeSrc": "902:84:5",
																		"nodeType": "YulBlock",
																		"src": "902:84:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "932:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "946:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:5"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "953:2:5",
																											"nodeType": "YulLiteral",
																											"src": "953:2:5",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "942:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:5"
																									},
																									"nativeSrc": "942:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:5"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "958:8:5",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:5"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "937:4:5",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:5"
																							},
																							"nativeSrc": "937:30:5",
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:5"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "924:7:5",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:5"
																					},
																					"nativeSrc": "924:44:5",
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:5"
																				},
																				"nativeSrc": "924:44:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:5"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 646,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 674,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 652,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:5",
																			"valueSize": 1
																		}
																	],
																	"id": 681,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:5"
																},
																{
																	"expression": {
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 682,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 652,
																			"src": "1003:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 685,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 686,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 652,
																			"src": "1036:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 690,
																	"nodeType": "IfStatement",
																	"src": "1032:21:5",
																	"trueBody": {
																		"id": 689,
																		"nodeType": "Break",
																		"src": "1048:5:5"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 692,
														"nodeType": "WhileStatement",
														"src": "788:280:5"
													},
													{
														"expression": {
															"id": 693,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "1088:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 656,
														"id": 694,
														"nodeType": "Return",
														"src": "1081:13:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "433:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:5"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "471:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 654,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:5"
									},
									"scope": 814,
									"src": "415:696:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "1290:100:5",
										"statements": [
											{
												"id": 715,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 706,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 700,
																	"src": "1343:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 709,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "1362:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 707,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1715,
																				"src": "1350:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1715_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:5",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1675,
																			"src": "1350:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 705,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	717,
																	793,
																	813
																],
																"referencedDeclaration": 793,
																"src": "1331:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 704,
														"id": 714,
														"nodeType": "Return",
														"src": "1324:49:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "1237:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:5"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "1275:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 702,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:5"
									},
									"scope": 814,
									"src": "1216:174:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "1603:347:5",
										"statements": [
											{
												"assignments": [
													728
												],
												"declarations": [
													{
														"constant": false,
														"id": 728,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 792,
														"src": "1613:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 727,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 737,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 732,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "1649:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 729,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:5"
											},
											{
												"expression": {
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 738,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "1670:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 740,
														"indexExpression": {
															"hexValue": "30",
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:5"
											},
											{
												"expression": {
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 744,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "1695:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 746,
														"indexExpression": {
															"hexValue": "31",
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:5"
											},
											{
												"body": {
													"id": 778,
													"nodeType": "Block",
													"src": "1765:83:5",
													"statements": [
														{
															"expression": {
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 764,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 728,
																		"src": "1779:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 766,
																	"indexExpression": {
																		"id": 765,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 751,
																		"src": "1786:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 767,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 646,
																		"src": "1791:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 771,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 768,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 720,
																			"src": "1800:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 773,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:5"
														},
														{
															"expression": {
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 774,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "1826:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 777,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "1753:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 779,
												"initializationExpression": {
													"assignments": [
														751
													],
													"declarations": [
														{
															"constant": false,
															"id": 751,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 779,
															"src": "1725:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 750,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 757,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 753,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "1741:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:5"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:5",
														"subExpression": {
															"id": 761,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "1762:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 763,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 781,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "1865:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "1936:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 787,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 726,
												"id": 791,
												"nodeType": "Return",
												"src": "1922:21:5"
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1534:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1549:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:5"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1588:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 724,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:5"
									},
									"scope": 814,
									"src": "1513:437:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "2175:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 806,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 796,
																			"src": "2220:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 804,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 802,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 809,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "2228:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 801,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															717,
															793,
															813
														],
														"referencedDeclaration": 793,
														"src": "2192:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 800,
												"id": 811,
												"nodeType": "Return",
												"src": "2185:59:5"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "2123:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:5"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "2160:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 798,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:5"
									},
									"scope": 814,
									"src": "2102:149:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 815,
							"src": "188:2065:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2153:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							838
						],
						"IERC165": [
							850
						]
					},
					"id": 839,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 816,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 817,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 839,
							"sourceUnit": 851,
							"src": "124:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 819,
										"name": "IERC165",
										"nameLocations": [
											"754:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 850,
										"src": "754:7:6"
									},
									"id": 820,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 818,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 838,
							"linearizedBaseContracts": [
								838,
								850
							],
							"name": "ERC165",
							"nameLocation": "744:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										849
									],
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "920:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 829,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "937:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 831,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "957:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$850_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$850_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 830,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$850",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:6",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 828,
												"id": 835,
												"nodeType": "Return",
												"src": "930:47:6"
											}
										]
									},
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 825,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:6"
									},
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "856:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 822,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:6"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "914:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 826,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:6"
									},
									"scope": 838,
									"src": "829:155:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 839,
							"src": "726:260:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:888:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							850
						]
					},
					"id": 851,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 840,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 841,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 850,
							"linearizedBaseContracts": [
								850
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 843,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 846,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 850,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 851,
							"src": "405:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1715
						]
					},
					"id": 1716,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 852,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 853,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:8",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1715,
							"linearizedBaseContracts": [
								1715
							],
							"name": "Math",
							"nameLocation": "210:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 857,
									"members": [
										{
											"id": 854,
											"name": "Down",
											"nameLocation": "245:4:8",
											"nodeType": "EnumValue",
											"src": "245:4:8"
										},
										{
											"id": 855,
											"name": "Up",
											"nameLocation": "287:2:8",
											"nodeType": "EnumValue",
											"src": "287:2:8"
										},
										{
											"id": 856,
											"name": "Zero",
											"nameLocation": "318:4:8",
											"nodeType": "EnumValue",
											"src": "318:4:8"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:8",
									"nodeType": "EnumDefinition",
									"src": "221:122:8"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "480:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 867,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "497:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 868,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "501:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 871,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "509:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:8",
													"trueExpression": {
														"id": 870,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "505:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 866,
												"id": 873,
												"nodeType": "Return",
												"src": "490:20:8"
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:8",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "426:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "437:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:8"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "471:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:8"
									},
									"scope": 1715,
									"src": "413:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "655:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 885,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "672:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 886,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "676:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 889,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "684:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:8",
													"trueExpression": {
														"id": 888,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "680:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 884,
												"id": 891,
												"nodeType": "Return",
												"src": "665:20:8"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:8",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "601:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "612:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:8"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "646:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:8"
									},
									"scope": 1715,
									"src": "588:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "876:82:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 903,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "931:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 904,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "935:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 906,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 907,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 896,
																		"src": "941:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 908,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 898,
																		"src": "945:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 910,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 902,
												"id": 914,
												"nodeType": "Return",
												"src": "923:28:8"
											}
										]
									},
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:8",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "822:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "833:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:8"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "867:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:8"
									},
									"scope": 1715,
									"src": "805:153:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "1228:123:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 926,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "1316:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 930,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 919,
																			"src": "1330:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 933,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 934,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "1339:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:8",
													"trueExpression": {
														"hexValue": "30",
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 925,
												"id": 939,
												"nodeType": "Return",
												"src": "1309:35:8"
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:8",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "1174:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "1185:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:8"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "1219:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:8"
									},
									"scope": 1715,
									"src": "1157:194:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "1795:3797:8",
										"statements": [
											{
												"id": 1061,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:8",
												"statements": [
													{
														"assignments": [
															954
														],
														"declarations": [
															{
																"constant": false,
																"id": 954,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1061,
																"src": "2126:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 953,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 955,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:8"
													},
													{
														"assignments": [
															957
														],
														"declarations": [
															{
																"constant": false,
																"id": 957,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1061,
																"src": "2198:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 956,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 958,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:8"
													},
													{
														"AST": {
															"nativeSrc": "2278:157:8",
															"nodeType": "YulBlock",
															"src": "2278:157:8",
															"statements": [
																{
																	"nativeSrc": "2296:30:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2313:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2316:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2323:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2319:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:8"
																				},
																				"nativeSrc": "2319:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2306:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:8"
																		},
																		"nativeSrc": "2306:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:8"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2300:2:8",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2343:18:8",
																	"nodeType": "YulAssignment",
																	"src": "2343:18:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2356:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2359:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2352:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:8"
																		},
																		"nativeSrc": "2352:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2343:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "2378:43:8",
																	"nodeType": "YulAssignment",
																	"src": "2378:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2395:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2399:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2391:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:8"
																				},
																				"nativeSrc": "2391:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2410:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2414:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:8"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2407:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:8"
																				},
																				"nativeSrc": "2407:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2387:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:8"
																		},
																		"nativeSrc": "2387:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2378:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 954,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:8",
																"valueSize": 1
															},
															{
																"declaration": 954,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:8",
																"valueSize": 1
															},
															{
																"declaration": 954,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:8",
																"valueSize": 1
															},
															{
																"declaration": 957,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:8",
																"valueSize": 1
															},
															{
																"declaration": 944,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:8",
																"valueSize": 1
															},
															{
																"declaration": 944,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:8",
																"valueSize": 1
															},
															{
																"declaration": 946,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:8",
																"valueSize": 1
															},
															{
																"declaration": 946,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:8",
																"valueSize": 1
															}
														],
														"id": 959,
														"nodeType": "InlineAssembly",
														"src": "2269:166:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 960,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "2516:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 968,
														"nodeType": "IfStatement",
														"src": "2512:75:8",
														"trueBody": {
															"id": 967,
															"nodeType": "Block",
															"src": "2528:59:8",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 963,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 954,
																			"src": "2553:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 964,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "2561:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 952,
																	"id": 966,
																	"nodeType": "Return",
																	"src": "2546:26:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 970,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "2697:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 971,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "2711:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 969,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 974,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:8"
													},
													{
														"assignments": [
															976
														],
														"declarations": [
															{
																"constant": false,
																"id": 976,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 1061,
																"src": "2973:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 975,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 977,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:8"
													},
													{
														"AST": {
															"nativeSrc": "3013:291:8",
															"nodeType": "YulBlock",
															"src": "3013:291:8",
															"statements": [
																{
																	"nativeSrc": "3082:38:8",
																	"nodeType": "YulAssignment",
																	"src": "3082:38:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3102:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3105:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:8"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3108:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3095:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:8"
																		},
																		"nativeSrc": "3095:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3082:9:8",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:8"
																		}
																	]
																},
																{
																	"nativeSrc": "3202:41:8",
																	"nodeType": "YulAssignment",
																	"src": "3202:41:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3215:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3225:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3236:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:8"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3222:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:8"
																				},
																				"nativeSrc": "3222:20:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3211:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:8"
																		},
																		"nativeSrc": "3211:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3202:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "3260:30:8",
																	"nodeType": "YulAssignment",
																	"src": "3260:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3273:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:8"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3280:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3269:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:8"
																		},
																		"nativeSrc": "3269:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3260:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 948,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:8",
																"valueSize": 1
															},
															{
																"declaration": 954,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:8",
																"valueSize": 1
															},
															{
																"declaration": 954,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:8",
																"valueSize": 1
															},
															{
																"declaration": 954,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:8",
																"valueSize": 1
															},
															{
																"declaration": 957,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:8",
																"valueSize": 1
															},
															{
																"declaration": 957,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:8",
																"valueSize": 1
															},
															{
																"declaration": 976,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:8",
																"valueSize": 1
															},
															{
																"declaration": 976,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:8",
																"valueSize": 1
															},
															{
																"declaration": 976,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:8",
																"valueSize": 1
															},
															{
																"declaration": 944,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:8",
																"valueSize": 1
															},
															{
																"declaration": 946,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:8",
																"valueSize": 1
															}
														],
														"id": 978,
														"nodeType": "InlineAssembly",
														"src": "3004:300:8"
													},
													{
														"assignments": [
															980
														],
														"declarations": [
															{
																"constant": false,
																"id": 980,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 1061,
																"src": "3611:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 979,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 988,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 981,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "3626:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:8",
																			"subExpression": {
																				"id": 982,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 948,
																				"src": "3642:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 986,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:8"
													},
													{
														"AST": {
															"nativeSrc": "3681:362:8",
															"nodeType": "YulBlock",
															"src": "3681:362:8",
															"statements": [
																{
																	"nativeSrc": "3746:37:8",
																	"nodeType": "YulAssignment",
																	"src": "3746:37:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "3765:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "3778:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3761:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:8"
																		},
																		"nativeSrc": "3761:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:8"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "3746:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:8"
																		}
																	]
																},
																{
																	"nativeSrc": "3850:25:8",
																	"nodeType": "YulAssignment",
																	"src": "3850:25:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3863:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "3870:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3859:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:8"
																		},
																		"nativeSrc": "3859:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3850:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "3990:39:8",
																	"nodeType": "YulAssignment",
																	"src": "3990:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4010:1:8",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4013:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:8"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4006:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:8"
																						},
																						"nativeSrc": "4006:12:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:8"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4020:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4002:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:8"
																				},
																				"nativeSrc": "4002:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4027:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3998:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:8"
																		},
																		"nativeSrc": "3998:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:8"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "3990:4:8",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 948,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:8",
																"valueSize": 1
															},
															{
																"declaration": 948,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:8",
																"valueSize": 1
															},
															{
																"declaration": 954,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:8",
																"valueSize": 1
															},
															{
																"declaration": 954,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:8",
																"valueSize": 1
															},
															{
																"declaration": 980,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:8",
																"valueSize": 1
															},
															{
																"declaration": 980,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:8",
																"valueSize": 1
															},
															{
																"declaration": 980,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:8",
																"valueSize": 1
															},
															{
																"declaration": 980,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:8",
																"valueSize": 1
															},
															{
																"declaration": 980,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:8",
																"valueSize": 1
															}
														],
														"id": 989,
														"nodeType": "InlineAssembly",
														"src": "3672:371:8"
													},
													{
														"expression": {
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 990,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "4109:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 991,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "4118:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 992,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "4126:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 995,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:8"
													},
													{
														"assignments": [
															997
														],
														"declarations": [
															{
																"constant": false,
																"id": 997,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 1061,
																"src": "4448:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 996,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1004,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 999,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "4471:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1001,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:8"
													},
													{
														"expression": {
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1005,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "4704:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1007,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "4719:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1008,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "4733:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1012,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:8"
													},
													{
														"expression": {
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1013,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "4773:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1015,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "4788:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1016,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "4802:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1020,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:8"
													},
													{
														"expression": {
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1021,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "4843:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1023,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "4858:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1024,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "4872:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1028,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:8"
													},
													{
														"expression": {
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1029,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "4913:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1031,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "4928:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1032,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "4942:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1036,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:8"
													},
													{
														"expression": {
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1037,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "4983:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1039,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "4998:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1040,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "5012:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1044,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:8"
													},
													{
														"expression": {
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1045,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "5054:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1047,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "5069:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1048,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "5083:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1052,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:8"
													},
													{
														"expression": {
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1053,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "5524:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1054,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "5533:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1055,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "5541:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1058,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:8"
													},
													{
														"expression": {
															"id": 1059,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "5569:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 952,
														"id": 1060,
														"nodeType": "Return",
														"src": "5562:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:8",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "1692:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "1711:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "1730:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:8"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "1779:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:8"
									},
									"scope": 1715,
									"src": "1667:3925:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "5872:189:8",
										"statements": [
											{
												"assignments": [
													1079
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "5882:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1078,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1085,
												"initialValue": {
													"arguments": [
														{
															"id": 1081,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "5906:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1082,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "5909:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1083,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "5912:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1080,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1063,
															1107
														],
														"referencedDeclaration": 1063,
														"src": "5899:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$857",
															"typeString": "enum Math.Rounding"
														},
														"id": 1089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1086,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "5938:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$857",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1087,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "5950:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$857_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:8",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 855,
															"src": "5950:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$857",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1091,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "5972:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1092,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "5975:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1093,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "5978:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1090,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1103,
												"nodeType": "IfStatement",
												"src": "5934:98:8",
												"trueBody": {
													"id": 1102,
													"nodeType": "Block",
													"src": "5996:36:8",
													"statements": [
														{
															"expression": {
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1098,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "6010:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1101,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1104,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1079,
													"src": "6048:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1077,
												"id": 1105,
												"nodeType": "Return",
												"src": "6041:13:8"
											}
										]
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:8",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "5749:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "5768:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "5787:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "5816:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$857",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1072,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1071,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 857,
														"src": "5816:8:8"
													},
													"referencedDeclaration": 857,
													"src": "5816:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$857",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:8"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "5863:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:8"
									},
									"scope": 1715,
									"src": "5724:337:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "6337:1585:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1115,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "6351:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1121,
												"nodeType": "IfStatement",
												"src": "6347:45:8",
												"trueBody": {
													"id": 1120,
													"nodeType": "Block",
													"src": "6359:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1114,
															"id": 1119,
															"nodeType": "Return",
															"src": "6373:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													1123
												],
												"declarations": [
													{
														"constant": false,
														"id": 1123,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1218,
														"src": "7071:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1132,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1126,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "7099:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1125,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1387,
																			1423
																		],
																		"referencedDeclaration": 1387,
																		"src": "7094:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1130,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:8"
											},
											{
												"id": 1217,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:8",
												"statements": [
													{
														"expression": {
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1133,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "7532:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1134,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1123,
																				"src": "7542:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1135,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1110,
																					"src": "7551:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1136,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1123,
																					"src": "7555:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1139,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1143,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:8"
													},
													{
														"expression": {
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1144,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "7581:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1145,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1123,
																				"src": "7591:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1146,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1110,
																					"src": "7600:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1147,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1123,
																					"src": "7604:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1150,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1154,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:8"
													},
													{
														"expression": {
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1155,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "7630:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1156,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1123,
																				"src": "7640:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1157,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1110,
																					"src": "7649:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1158,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1123,
																					"src": "7653:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1161,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1165,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:8"
													},
													{
														"expression": {
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1166,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "7679:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1167,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1123,
																				"src": "7689:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1168,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1110,
																					"src": "7698:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1169,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1123,
																					"src": "7702:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1172,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1176,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:8"
													},
													{
														"expression": {
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1177,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "7728:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1178,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1123,
																				"src": "7738:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1181,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1179,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1110,
																					"src": "7747:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1180,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1123,
																					"src": "7751:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1183,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1187,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:8"
													},
													{
														"expression": {
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1188,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "7777:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1189,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1123,
																				"src": "7787:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1192,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1190,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1110,
																					"src": "7796:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1191,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1123,
																					"src": "7800:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1194,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1198,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:8"
													},
													{
														"expression": {
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1199,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "7826:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1200,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1123,
																				"src": "7836:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1201,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1110,
																					"src": "7845:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1202,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1123,
																					"src": "7849:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1205,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1209,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1211,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "7886:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1212,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "7894:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1213,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1123,
																		"src": "7898:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1210,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "7882:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1114,
														"id": 1216,
														"nodeType": "Return",
														"src": "7875:30:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:8",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "6294:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:8"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "6328:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:8"
									},
									"scope": 1715,
									"src": "6280:1642:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "8098:161:8",
										"statements": [
											{
												"id": 1253,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:8",
												"statements": [
													{
														"assignments": [
															1231
														],
														"declarations": [
															{
																"constant": false,
																"id": 1231,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1253,
																"src": "8132:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1230,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1235,
														"initialValue": {
															"arguments": [
																{
																	"id": 1233,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "8154:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1232,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1219,
																	1255
																],
																"referencedDeclaration": 1219,
																"src": "8149:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1236,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "8177:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$857",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1237,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1225,
																					"src": "8187:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$857",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1238,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "8199:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$857_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 855,
																					"src": "8199:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$857",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1243,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1241,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1231,
																						"src": "8214:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1242,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1231,
																						"src": "8223:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1244,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1222,
																					"src": "8232:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1250,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1229,
														"id": 1252,
														"nodeType": "Return",
														"src": "8170:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:8",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "8036:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "8047:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$857",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1223,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 857,
														"src": "8047:8:8"
													},
													"referencedDeclaration": 857,
													"src": "8047:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$857",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:8"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "8089:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:8"
									},
									"scope": 1715,
									"src": "8022:237:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "8444:922:8",
										"statements": [
											{
												"assignments": [
													1264
												],
												"declarations": [
													{
														"constant": false,
														"id": 1264,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1386,
														"src": "8454:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1263,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1266,
												"initialValue": {
													"hexValue": "30",
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:8"
											},
											{
												"id": 1383,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1267,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "8510:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1281,
														"nodeType": "IfStatement",
														"src": "8506:99:8",
														"trueBody": {
															"id": 1280,
															"nodeType": "Block",
															"src": "8528:77:8",
															"statements": [
																{
																	"expression": {
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1272,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1258,
																			"src": "8546:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1275,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:8"
																},
																{
																	"expression": {
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1276,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "8577:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1279,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "8622:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1296,
														"nodeType": "IfStatement",
														"src": "8618:96:8",
														"trueBody": {
															"id": 1295,
															"nodeType": "Block",
															"src": "8639:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1287,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1258,
																			"src": "8657:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1290,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:8"
																},
																{
																	"expression": {
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1291,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "8687:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1294,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1297,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "8731:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1311,
														"nodeType": "IfStatement",
														"src": "8727:96:8",
														"trueBody": {
															"id": 1310,
															"nodeType": "Block",
															"src": "8748:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1302,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1258,
																			"src": "8766:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1305,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:8"
																},
																{
																	"expression": {
																		"id": 1308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1306,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "8796:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1309,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1312,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "8840:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1326,
														"nodeType": "IfStatement",
														"src": "8836:96:8",
														"trueBody": {
															"id": 1325,
															"nodeType": "Block",
															"src": "8857:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1317,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1258,
																			"src": "8875:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1320,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:8"
																},
																{
																	"expression": {
																		"id": 1323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1321,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "8905:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1324,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1327,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "8949:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1341,
														"nodeType": "IfStatement",
														"src": "8945:93:8",
														"trueBody": {
															"id": 1340,
															"nodeType": "Block",
															"src": "8965:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1332,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1258,
																			"src": "8983:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1335,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:8"
																},
																{
																	"expression": {
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1336,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "9012:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1339,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1342,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "9055:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1356,
														"nodeType": "IfStatement",
														"src": "9051:93:8",
														"trueBody": {
															"id": 1355,
															"nodeType": "Block",
															"src": "9071:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1347,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1258,
																			"src": "9089:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1350,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:8"
																},
																{
																	"expression": {
																		"id": 1353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1351,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "9118:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1354,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1357,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "9161:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1371,
														"nodeType": "IfStatement",
														"src": "9157:93:8",
														"trueBody": {
															"id": 1370,
															"nodeType": "Block",
															"src": "9177:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1362,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1258,
																			"src": "9195:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1365,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:8"
																},
																{
																	"expression": {
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1366,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "9224:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1369,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1372,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "9267:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1382,
														"nodeType": "IfStatement",
														"src": "9263:64:8",
														"trueBody": {
															"id": 1381,
															"nodeType": "Block",
															"src": "9283:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1377,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "9301:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1380,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1384,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1264,
													"src": "9353:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1262,
												"id": 1385,
												"nodeType": "Return",
												"src": "9346:13:8"
											}
										]
									},
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:8",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "8397:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:8"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "8435:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:8"
									},
									"scope": 1715,
									"src": "8383:983:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "9599:165:8",
										"statements": [
											{
												"id": 1421,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:8",
												"statements": [
													{
														"assignments": [
															1399
														],
														"declarations": [
															{
																"constant": false,
																"id": 1399,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1421,
																"src": "9633:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1398,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1403,
														"initialValue": {
															"arguments": [
																{
																	"id": 1401,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "9655:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1400,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1387,
																	1423
																],
																"referencedDeclaration": 1387,
																"src": "9650:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1404,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1399,
																"src": "9682:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$857",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1405,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1393,
																					"src": "9692:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$857",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1406,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "9704:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$857_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1407,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 855,
																					"src": "9704:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$857",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1413,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1411,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1409,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1410,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1399,
																						"src": "9724:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1412,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1390,
																					"src": "9733:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1418,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1397,
														"id": 1420,
														"nodeType": "Return",
														"src": "9675:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:8",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "9533:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "9548:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$857",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1392,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1391,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 857,
														"src": "9548:8:8"
													},
													"referencedDeclaration": 857,
													"src": "9548:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$857",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:8"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "9590:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:8"
									},
									"scope": 1715,
									"src": "9519:245:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1551,
										"nodeType": "Block",
										"src": "9951:828:8",
										"statements": [
											{
												"assignments": [
													1432
												],
												"declarations": [
													{
														"constant": false,
														"id": 1432,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1551,
														"src": "9961:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1431,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1434,
												"initialValue": {
													"hexValue": "30",
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:8"
											},
											{
												"id": 1548,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1435,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "10017:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1451,
														"nodeType": "IfStatement",
														"src": "10013:99:8",
														"trueBody": {
															"id": 1450,
															"nodeType": "Block",
															"src": "10034:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1440,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "10052:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1441,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1442,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1445,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:8"
																},
																{
																	"expression": {
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1446,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1432,
																			"src": "10085:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1449,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1452,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "10129:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1468,
														"nodeType": "IfStatement",
														"src": "10125:99:8",
														"trueBody": {
															"id": 1467,
															"nodeType": "Block",
															"src": "10146:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1457,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "10164:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1458,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1462,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:8"
																},
																{
																	"expression": {
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1463,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1432,
																			"src": "10197:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1466,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1469,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "10241:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1485,
														"nodeType": "IfStatement",
														"src": "10237:99:8",
														"trueBody": {
															"id": 1484,
															"nodeType": "Block",
															"src": "10258:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1474,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "10276:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1476,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1479,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:8"
																},
																{
																	"expression": {
																		"id": 1482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1480,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1432,
																			"src": "10309:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1483,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1486,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "10353:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1502,
														"nodeType": "IfStatement",
														"src": "10349:96:8",
														"trueBody": {
															"id": 1501,
															"nodeType": "Block",
															"src": "10369:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1491,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "10387:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1492,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1493,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1496,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:8"
																},
																{
																	"expression": {
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1497,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1432,
																			"src": "10419:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1500,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1503,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "10462:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1519,
														"nodeType": "IfStatement",
														"src": "10458:96:8",
														"trueBody": {
															"id": 1518,
															"nodeType": "Block",
															"src": "10478:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1508,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "10496:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1509,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1510,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1513,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:8"
																},
																{
																	"expression": {
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1514,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1432,
																			"src": "10528:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1517,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1520,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "10571:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1536,
														"nodeType": "IfStatement",
														"src": "10567:96:8",
														"trueBody": {
															"id": 1535,
															"nodeType": "Block",
															"src": "10587:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1525,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "10605:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1530,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:8"
																},
																{
																	"expression": {
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1531,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1432,
																			"src": "10637:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1534,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1537,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "10680:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1547,
														"nodeType": "IfStatement",
														"src": "10676:64:8",
														"trueBody": {
															"id": 1546,
															"nodeType": "Block",
															"src": "10696:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1542,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1432,
																			"src": "10714:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1545,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1549,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1432,
													"src": "10766:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1430,
												"id": 1550,
												"nodeType": "Return",
												"src": "10759:13:8"
											}
										]
									},
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:8",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "9904:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:8"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "9942:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:8"
									},
									"scope": 1715,
									"src": "9889:890:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1587,
										"nodeType": "Block",
										"src": "11014:165:8",
										"statements": [
											{
												"id": 1586,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:8",
												"statements": [
													{
														"assignments": [
															1564
														],
														"declarations": [
															{
																"constant": false,
																"id": 1564,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1586,
																"src": "11048:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1563,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1568,
														"initialValue": {
															"arguments": [
																{
																	"id": 1566,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1555,
																	"src": "11071:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1565,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1552,
																	1588
																],
																"referencedDeclaration": 1552,
																"src": "11065:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1569,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1564,
																"src": "11098:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$857",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1570,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1558,
																					"src": "11108:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$857",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1571,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "11120:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$857_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1572,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 855,
																					"src": "11120:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$857",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1576,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1574,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1575,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1564,
																						"src": "11139:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1577,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1555,
																					"src": "11148:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1583,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1562,
														"id": 1585,
														"nodeType": "Return",
														"src": "11091:71:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1553,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "10948:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "10963:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$857",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1557,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1556,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 857,
														"src": "10963:8:8"
													},
													"referencedDeclaration": 857,
													"src": "10963:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$857",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:8"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "11005:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:8"
									},
									"scope": 1715,
									"src": "10933:246:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "11493:600:8",
										"statements": [
											{
												"assignments": [
													1597
												],
												"declarations": [
													{
														"constant": false,
														"id": 1597,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1674,
														"src": "11503:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1596,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1599,
												"initialValue": {
													"hexValue": "30",
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:8"
											},
											{
												"id": 1671,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1600,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "11559:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1614,
														"nodeType": "IfStatement",
														"src": "11555:98:8",
														"trueBody": {
															"id": 1613,
															"nodeType": "Block",
															"src": "11577:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1605,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1591,
																			"src": "11595:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1608,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:8"
																},
																{
																	"expression": {
																		"id": 1611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1609,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1597,
																			"src": "11626:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1612,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1615,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "11670:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1629,
														"nodeType": "IfStatement",
														"src": "11666:95:8",
														"trueBody": {
															"id": 1628,
															"nodeType": "Block",
															"src": "11687:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1620,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1591,
																			"src": "11705:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1623,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:8"
																},
																{
																	"expression": {
																		"id": 1626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1624,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1597,
																			"src": "11735:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1627,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1630,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "11778:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1644,
														"nodeType": "IfStatement",
														"src": "11774:95:8",
														"trueBody": {
															"id": 1643,
															"nodeType": "Block",
															"src": "11795:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1635,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1591,
																			"src": "11813:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1638,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:8"
																},
																{
																	"expression": {
																		"id": 1641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1639,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1597,
																			"src": "11843:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1642,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1645,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "11886:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1659,
														"nodeType": "IfStatement",
														"src": "11882:95:8",
														"trueBody": {
															"id": 1658,
															"nodeType": "Block",
															"src": "11903:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1591,
																			"src": "11921:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1653,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:8"
																},
																{
																	"expression": {
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1654,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1597,
																			"src": "11951:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1657,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1660,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "11994:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1670,
														"nodeType": "IfStatement",
														"src": "11990:64:8",
														"trueBody": {
															"id": 1669,
															"nodeType": "Block",
															"src": "12010:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1665,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1597,
																			"src": "12028:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1668,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1672,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1597,
													"src": "12080:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1595,
												"id": 1673,
												"nodeType": "Return",
												"src": "12073:13:8"
											}
										]
									},
									"documentation": {
										"id": 1589,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:8",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "11446:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:8"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "11484:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:8"
									},
									"scope": 1715,
									"src": "11430:663:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1713,
										"nodeType": "Block",
										"src": "12329:173:8",
										"statements": [
											{
												"id": 1712,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:8",
												"statements": [
													{
														"assignments": [
															1687
														],
														"declarations": [
															{
																"constant": false,
																"id": 1687,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1712,
																"src": "12363:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1686,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1691,
														"initialValue": {
															"arguments": [
																{
																	"id": 1689,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1678,
																	"src": "12387:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1688,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1675,
																	1714
																],
																"referencedDeclaration": 1675,
																"src": "12380:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1692,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "12414:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$857",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1696,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1693,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1681,
																					"src": "12424:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$857",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1694,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "12436:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$857_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1695,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 855,
																					"src": "12436:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$857",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1704,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1702,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1697,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1700,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1698,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1687,
																									"src": "12457:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1699,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1701,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1703,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1678,
																					"src": "12471:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1709,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1685,
														"id": 1711,
														"nodeType": "Return",
														"src": "12407:78:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1676,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "12263:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "12278:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$857",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1680,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1679,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 857,
														"src": "12278:8:8"
													},
													"referencedDeclaration": 857,
													"src": "12278:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$857",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:8"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "12320:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:8"
									},
									"scope": 1715,
									"src": "12247:255:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1716,
							"src": "202:12302:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12402:8"
				},
				"id": 8
			}
		}
	}
}